openapi: 3.0.3
info:
  title: Harness NextGen Software Delivery Platform API Reference
  description: This is the Open Api Spec 3 for NextGen Manager. This is under active
    development. Beware of the breaking change with respect to the generated code
    stub
  contact:
    email: contact@harness.io
  version: "1.0"
servers:
- url: https://app.harness.io
  description: Harness host URL.
tags:
- name: Organization
  description: "Create and manage organizations in your account. You use organizations\
    \ to group together related projects. For example, you can use an organization\
    \ to group together projects within a business unit or division."
- name: Org Project
  description: This contains APIs for projects.
  x-displayName: "Project [Beta]"
- name: Account Secret
  description: This contains APIs for account-scoped secrets.
  x-displayName: "Account Secrets [Beta]"
- name: Org Secret
  description: This contains APIs for organization-scoped secrets.
  x-displayName: "Organization Secrets [Beta]"
- name: Project Secret
  description: This contains APIs for project-scoped secrets.
  x-displayName: "Project Secrets [Beta]"
- name: Account Services
  description: This contains APIs for account-scoped services.
  x-displayName: "Account Services [Beta]"
- name: Org Services
  description: This contains APIs for organization-scoped services.
  x-displayName: "Organization Services [Beta]"
- name: Project Services
  description: This contains APIs for project-scoped services.
  x-displayName: "Project Services [Beta]"
- name: Project Environments
  description: This contains APIs for project-scoped environments.
  x-displayName: "Project Environments [Beta]"
- name: Account Favorites
  description: This contains APIs for account-scoped Favorites.
  x-displayName: "Account Favorites [Beta]"
- name: Org Favorites
  description: This contains APIs for organization-scoped Favorites.
  x-displayName: "Organization Favorites [Beta]"
- name: Project Favorites
  description: This contains APIs for project-scoped Favorites.
  x-displayName: "Project Favorites [Beta]"
- name: Account Rancher Infrastructure
  description: This contains APIs for Rancher infra entities for account level.
  x-displayName: "Account Rancher Infrastructure [Beta]"
- name: Org Rancher Infrastructure
  description: This contains APIs for Rancher infra entities for org level.
  x-displayName: "Org Rancher Infrastructure [Beta]"
- name: Project Rancher Infrastructure
  description: This contains APIs for Rancher infra entities for project level.
  x-displayName: "Project Rancher Infrastructure [Beta]"
- name: K8s Release Service Mapping
  description: This contains APIs for Fetching Release details regarding a pod.
  x-displayName: "K8s Release Service Mapping [Beta]"
- name: EULA
  description: This contains APIs for EULA.
  x-displayName: "EULA [Beta]"
- name: Account Certificate
  description: This contains APIs for account-scoped Certificates
  x-displayName: "Account Certificates [Beta]"
- name: Org Certificate
  description: This contains APIs for organization-scoped Certificates
  x-displayName: "Org Certificates [Beta]"
- name: Project Certificate
  description: This contains APIs for project-scoped Certificates
  x-displayName: "Project Certificates [Beta]"
- name: IP Allowlist
  description: This contains APIs for IP Allowlist.
  x-displayName: "IP Allowlist [Beta]"
- name: GitX Webhooks
  description: This contains APIs for Account GitX Webhooks.
  x-displayName: "Account GitX Webhooks [Beta]"
- name: Org GitX Webhooks
  description: This contains APIs for Org GitX Webhooks.
  x-displayName: "Org GitX Webhooks [Beta]"
- name: Project GitX Webhooks
  description: This contains APIs for Project GitX Webhooks.
  x-displayName: "Project GitX Webhooks [Beta]"
- name: Gitx Webhooks Events
  description: This contains APIs for Account Gitx Webhooks Events.
  x-displayName: "Account Gitx Webhooks Events [Beta]"
- name: Org Gitx Webhooks Events
  description: This contains APIs for Org Gitx Webhooks Events.
  x-displayName: "Org Gitx Webhooks Events [Beta]"
- name: Project Gitx Webhooks Events
  description: This contains APIs for Project Gitx Webhooks Events.
  x-displayName: "Project Gitx Webhooks Events [Beta]"
paths:
  /v1/orgs/{org}/projects/{project}/services/{service}:
    get:
      tags:
      - Project Services
      summary: Retrieve a service
      description: Retrieves the specified service
      operationId: get-service
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: service
        in: path
        description: Identifier field of the service the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value:
                    service:
                      account: sample_account
                      identifier: example_service
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example service
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        service:
                          name: "Example_service"
                          identifier: "example_service"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value: |
                    service:
                      account: sample_account
                      identifier: example_service
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example service
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        service:
                          name: "Example_service"
                          identifier: "example_service"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
      security:
      - x-api-key: []
    put:
      tags:
      - Project Services
      summary: Update Service
      description: Updates the specified service
      operationId: update-service
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: service
        in: path
        description: Identifier field of the service the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/ServiceUpdateRequest'
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value:
                    service:
                      account: sample_account
                      identifier: example_service
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example service
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        service:
                          name: "Example_service"
                          identifier: "example_service"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value: |
                    service:
                      account: sample_account
                      identifier: example_service
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example service
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        service:
                          name: "Example_service"
                          identifier: "example_service"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
      security:
      - x-api-key: []
    delete:
      tags:
      - Project Services
      summary: Delete a Service
      description: Deletes the requested service.
      operationId: delete-service
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: service
        in: path
        description: Identifier field of the service the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: forceDelete
        in: query
        description: Enable this field to force delete the entity
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value:
                    service:
                      account: sample_account
                      identifier: example_service
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example service
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        service:
                          name: "Example_service"
                          identifier: "example_service"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value: |
                    service:
                      account: sample_account
                      identifier: example_service
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example service
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        service:
                          name: "Example_service"
                          identifier: "example_service"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
      security:
      - x-api-key: []
  /v1/orgs/{org}/projects/{project}/services:
    get:
      tags:
      - Project Services
      summary: List Services
      description: Returns a list of the services for which you have view permissions
        in the given project.
      operationId: get-services
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of items to return per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 20
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: service_ids
        in: query
        description: List of Service Identifiers
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - identifier
          - created
          - updated
      - name: is_access_list
        in: query
        description: Specifies whether the list is an access list. An access list
          is a list of services that you are permitted to use in a pipeline.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: deployment_type
        in: query
        description: Service Definition Type
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - Kubernetes
          - NativeHelm
          - Ssh
          - WinRm
          - ServerlessAwsLambda
          - AzureWebApp
          - GitOps
          - ECS
          - TAS
          - CustomDeployment
          - Elastigroup
          - Asg
          - GoogleCloudFunctions
          - AwsLambda
          - AWS_SAM
      - name: git_ops_enabled
        in: query
        description: Enables you to use the service in Harness GitOps PR pipelines.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Example response
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceResponse'
                x-content-type: application/json
              examples:
                example-1:
                  value:
                  - service:
                      account: sample_account
                      identifier: example_service
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example service
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        service:
                          name: "Example_service"
                          identifier: "example_service"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value: |
                    - service:
                        account: sample_account
                        identifier: example_service
                        org: sample_organization
                        project: sample_project
                        name: Example_service
                        description: This is a example service
                        tags:
                          example-tag-1: example-tag-1-value
                          example-tag-2: example-tag-2-value
                        yaml: |
                          service:
                            name: "Example_service"
                            identifier: "example_service"
                            tags: {}
                      created: 1234567890
                      updated: 1234567890
      security:
      - x-api-key: []
    post:
      tags:
      - Project Services
      summary: Create a Service
      description: Creates a service
      operationId: create-service
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/ServiceCreateRequest'
      responses:
        "201":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value:
                    service:
                      account: sample_account
                      identifier: example_service
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example service
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        service:
                          name: "Example_service"
                          identifier: "example_service"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value: |
                    service:
                      account: sample_account
                      identifier: example_service
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example service
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        service:
                          name: "Example_service"
                          identifier: "example_service"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
      security:
      - x-api-key: []
  /v1/orgs/{org}/services/{service}:
    get:
      tags:
      - Org Services
      summary: Retrieve a service
      description: Retrieves the specified service
      operationId: get-org-scoped-service
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: service
        in: path
        description: Identifier field of the service the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value:
                    service:
                      account: sample_account
                      identifier: example_service
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example service
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        service:
                          name: "Example_service"
                          identifier: "example_service"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value: |
                    service:
                      account: sample_account
                      identifier: example_service
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example service
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        service:
                          name: "Example_service"
                          identifier: "example_service"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
      security:
      - x-api-key: []
    put:
      tags:
      - Org Services
      summary: Update Service
      description: Updates the specified service
      operationId: update-org-scoped-service
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: service
        in: path
        description: Identifier field of the service the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/ServiceUpdateRequest'
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value:
                    service:
                      account: sample_account
                      identifier: example_service
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example service
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        service:
                          name: "Example_service"
                          identifier: "example_service"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value: |
                    service:
                      account: sample_account
                      identifier: example_service
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example service
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        service:
                          name: "Example_service"
                          identifier: "example_service"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
      security:
      - x-api-key: []
    delete:
      tags:
      - Org Services
      summary: Delete a service
      description: Deletes the requested service
      operationId: delete-org-scoped-service
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: service
        in: path
        description: Identifier field of the service the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: forceDelete
        in: query
        description: Enable this field to force delete the entity
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value:
                    service:
                      account: sample_account
                      identifier: example_service
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example service
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        service:
                          name: "Example_service"
                          identifier: "example_service"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value: |
                    service:
                      account: sample_account
                      identifier: example_service
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example service
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        service:
                          name: "Example_service"
                          identifier: "example_service"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
      security:
      - x-api-key: []
  /v1/orgs/{org}/services:
    get:
      tags:
      - Org Services
      summary: List Services
      description: Returns a list of the services for which you have view permissions
        in the given project.
      operationId: get-org-scoped-services
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of items to return per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 20
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: service_ids
        in: query
        description: List of Service Identifiers
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - identifier
          - created
          - updated
      - name: is_access_list
        in: query
        description: Specifies whether the list is an access list. An access list
          is a list of services that you are permitted to use in a pipeline.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: deployment_type
        in: query
        description: Service Definition Type
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - Kubernetes
          - NativeHelm
          - Ssh
          - WinRm
          - ServerlessAwsLambda
          - AzureWebApp
          - GitOps
          - ECS
          - TAS
          - CustomDeployment
          - Elastigroup
          - Asg
          - GoogleCloudFunctions
          - AwsLambda
          - AWS_SAM
      - name: git_ops_enabled
        in: query
        description: Enables you to use the service in Harness GitOps PR pipelines.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Example response
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceResponse'
                x-content-type: application/json
              examples:
                example-1:
                  value:
                  - service:
                      account: sample_account
                      identifier: example_service
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example service
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        service:
                          name: "Example_service"
                          identifier: "example_service"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value: |
                    - service:
                        account: sample_account
                        identifier: example_service
                        org: sample_organization
                        project: sample_project
                        name: Example_service
                        description: This is a example service
                        tags:
                          example-tag-1: example-tag-1-value
                          example-tag-2: example-tag-2-value
                        yaml: |
                          service:
                            name: "Example_service"
                            identifier: "example_service"
                            tags: {}
                      created: 1234567890
                      updated: 1234567890
      security:
      - x-api-key: []
    post:
      tags:
      - Org Services
      summary: Create a service
      description: Creates a service
      operationId: create-org-scoped-service
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/ServiceCreateRequest'
      responses:
        "201":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value:
                    service:
                      account: sample_account
                      identifier: example_service
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example service
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        service:
                          name: "Example_service"
                          identifier: "example_service"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value: |
                    service:
                      account: sample_account
                      identifier: example_service
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example service
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        service:
                          name: "Example_service"
                          identifier: "example_service"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
      security:
      - x-api-key: []
  /v1/services/{service}:
    get:
      tags:
      - Account Services
      summary: Retrieve a service
      description: Retrieves the specified service
      operationId: get-account-scoped-service
      parameters:
      - name: service
        in: path
        description: Identifier field of the service the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value:
                    service:
                      account: sample_account
                      identifier: example_service
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example service
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        service:
                          name: "Example_service"
                          identifier: "example_service"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value: |
                    service:
                      account: sample_account
                      identifier: example_service
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example service
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        service:
                          name: "Example_service"
                          identifier: "example_service"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
      security:
      - x-api-key: []
    put:
      tags:
      - Account Services
      summary: Update service
      description: Updates the specified service
      operationId: update-account-scoped-service
      parameters:
      - name: service
        in: path
        description: Identifier field of the service the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/ServiceUpdateRequest'
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value:
                    service:
                      account: sample_account
                      identifier: example_service
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example service
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        service:
                          name: "Example_service"
                          identifier: "example_service"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value: |
                    service:
                      account: sample_account
                      identifier: example_service
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example service
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        service:
                          name: "Example_service"
                          identifier: "example_service"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
      security:
      - x-api-key: []
    delete:
      tags:
      - Account Services
      summary: Delete a service
      description: Deletes the requested service
      operationId: delete-account-scoped-service
      parameters:
      - name: service
        in: path
        description: Identifier field of the service the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: forceDelete
        in: query
        description: Enable this field to force delete the entity
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value:
                    service:
                      account: sample_account
                      identifier: example_service
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example service
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        service:
                          name: "Example_service"
                          identifier: "example_service"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value: |
                    service:
                      account: sample_account
                      identifier: example_service
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example service
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        service:
                          name: "Example_service"
                          identifier: "example_service"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
      security:
      - x-api-key: []
  /v1/services:
    get:
      tags:
      - Account Services
      summary: List services
      description: Returns a list of the services for which you have view permissions
        in the given project.
      operationId: get-account-scoped-services
      parameters:
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of items to return per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 20
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: service_ids
        in: query
        description: List of Service Identifiers
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - identifier
          - created
          - updated
      - name: is_access_list
        in: query
        description: Specifies whether the list is an access list. An access list
          is a list of services that you are permitted to use in a pipeline.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: deployment_type
        in: query
        description: Service Definition Type
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - Kubernetes
          - NativeHelm
          - Ssh
          - WinRm
          - ServerlessAwsLambda
          - AzureWebApp
          - GitOps
          - ECS
          - TAS
          - CustomDeployment
          - Elastigroup
          - Asg
          - GoogleCloudFunctions
          - AwsLambda
          - AWS_SAM
      - name: git_ops_enabled
        in: query
        description: Enables you to use the service in Harness GitOps PR pipelines.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Example response
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceResponse'
                x-content-type: application/json
              examples:
                example-1:
                  value:
                  - service:
                      account: sample_account
                      identifier: example_service
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example service
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        service:
                          name: "Example_service"
                          identifier: "example_service"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value: |
                    - service:
                        account: sample_account
                        identifier: example_service
                        org: sample_organization
                        project: sample_project
                        name: Example_service
                        description: This is a example service
                        tags:
                          example-tag-1: example-tag-1-value
                          example-tag-2: example-tag-2-value
                        yaml: |
                          service:
                            name: "Example_service"
                            identifier: "example_service"
                            tags: {}
                      created: 1234567890
                      updated: 1234567890
      security:
      - x-api-key: []
    post:
      tags:
      - Account Services
      summary: Create a service
      description: Creates a service
      operationId: create-account-scoped-service
      parameters:
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/ServiceCreateRequest'
      responses:
        "201":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value:
                    service:
                      account: sample_account
                      identifier: example_service
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example service
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        service:
                          name: "Example_service"
                          identifier: "example_service"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value: |
                    service:
                      account: sample_account
                      identifier: example_service
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example service
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        service:
                          name: "Example_service"
                          identifier: "example_service"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
      security:
      - x-api-key: []
  /v1/creditOverUsage/{accountIdentifier}:
    get:
      tags:
      - Credits OverUsage Data By Account
      summary: Get over usage count of Credits for a given account
      operationId: credits-overusage
      parameters:
      - name: accountIdentifier
        in: path
        description: Account Identifier for the Entity.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          $ref: '#/components/schemas/CreditOverUsage'
        "400":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties: {}
                x-content-type: application/json
      security:
      - bearerAuth: []
      x-internal: false
  /v1/orgs:
    get:
      tags:
      - Organization
      summary: "List organizations [Beta]"
      description: Retrieves the information of the organizations.
      operationId: get-organizations
      parameters:
      - name: org
        in: query
        description: Identifier field of the organizations the resource is scoped
          to
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of items to return per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 20
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - identifier
          - created
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Organization list response
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationResponse'
                x-content-type: application/json
              examples:
                example-organizations-list-response-json:
                  value:
                  - org:
                      identifier: example_organization
                      name: Example Organization
                      description: This is an example organization
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                    created: 1234567890
                    updated: 1234567890
                    harness_managed: true
            application/yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationResponse'
              examples:
                example-organizations-list-response-yaml:
                  value: |
                    - org:
                        identifier: example_organization
                        name: Example Organization
                        description: This is an example organization
                        tags:
                          example-tag-1: example-tag-1-value
                          example-tag-2: example-tag-2-value
                      created: 1234567890
                      updated: 1234567890
                      harness_managed: true
      security:
      - x-api-key: []
    post:
      tags:
      - Organization
      summary: "Create an organization [Beta]"
      description: Creates a new organization.
      operationId: create-organization
      parameters:
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateOrganizationRequest'
      responses:
        "201":
          description: Organization response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
              examples:
                example-organization-response-json:
                  value:
                    org:
                      identifier: example_organization
                      name: Example Organization
                      description: This is an example organization
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                    created: 1234567890
                    updated: 1234567890
                    harness_managed: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
              examples:
                example-organization-response-yaml:
                  value: |
                    org:
                      identifier: example_organization
                      name: Example Organization
                      description: This is an example organization
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                    created: 1234567890
                    updated: 1234567890
                    harness_managed: true
      security:
      - x-api-key: []
  /v1/orgs/{org}:
    get:
      tags:
      - Organization
      summary: "Retrieve an organization [Beta]"
      description: Retrieves the information of the organization with the matching
        organization identifier.
      operationId: get-organization
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Organization response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
              examples:
                example-organization-response-json:
                  value:
                    org:
                      identifier: example_organization
                      name: Example Organization
                      description: This is an example organization
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                    created: 1234567890
                    updated: 1234567890
                    harness_managed: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
              examples:
                example-organization-response-yaml:
                  value: |
                    org:
                      identifier: example_organization
                      name: Example Organization
                      description: This is an example organization
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                    created: 1234567890
                    updated: 1234567890
                    harness_managed: true
      security:
      - x-api-key: []
    put:
      tags:
      - Organization
      summary: "Update an organization [Beta]"
      description: Updates the information of the organization with the matching organization
        identifier.
      operationId: update-organization
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/UpdateOrganizationRequest'
      responses:
        "200":
          description: Organization response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
              examples:
                example-organization-response-json:
                  value:
                    org:
                      identifier: example_organization
                      name: Example Organization
                      description: This is an example organization
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                    created: 1234567890
                    updated: 1234567890
                    harness_managed: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
              examples:
                example-organization-response-yaml:
                  value: |
                    org:
                      identifier: example_organization
                      name: Example Organization
                      description: This is an example organization
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                    created: 1234567890
                    updated: 1234567890
                    harness_managed: true
      security:
      - x-api-key: []
    delete:
      tags:
      - Organization
      summary: "Delete an organization [Beta]"
      description: Deletes the information of the organization with the matching organization
        identifier.
      operationId: delete-organization
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Organization response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
              examples:
                example-organization-response-json:
                  value:
                    org:
                      identifier: example_organization
                      name: Example Organization
                      description: This is an example organization
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                    created: 1234567890
                    updated: 1234567890
                    harness_managed: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
              examples:
                example-organization-response-yaml:
                  value: |
                    org:
                      identifier: example_organization
                      name: Example Organization
                      description: This is an example organization
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                    created: 1234567890
                    updated: 1234567890
                    harness_managed: true
      security:
      - x-api-key: []
  /v1/orgs/{org}/projects:
    get:
      tags:
      - Org Project
      summary: List projects
      description: Retrieves the information of the projects.
      operationId: get-org-scoped-projects
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: query
        description: Identifier field of the projects the resource is scoped to
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: has_module
        in: query
        description: This boolean specifies whether to filter projects which has the
          module of type passed in the moduleType parameter or not
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: module_type
        in: query
        description: Project's module type
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: only_favorites
        in: query
        description: Enable this field to fetch only the entities that are marked
          as favorites.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of items to return per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 20
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - identifier
          - created
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Project list response
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectResponse'
                x-content-type: application/json
              examples:
                example-project-list-response-json:
                  value:
                  - project:
                      org: example_org_identifier
                      identifier: example_project_identifier
                      name: example-project-name
                      color: '#0063F7'
                      modules:
                      - CD
                      description: This is a example project
                      tags:
                        property1: value1
                        property2: value2
                    created: 1234567890
                    updated: 1234567890
                    isFavorite: true
            application/yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectResponse'
              examples:
                example-project-list-response-yaml:
                  value: |
                    - project:
                        org: example_org_identifier
                        identifier: example_project_identifier
                        name: example-project-name
                        color: '#0063F7'
                        modules:
                          - CD
                        description: This is a example project
                        tags:
                          property1: value1
                          property2: value2
                      created: 1234567890
                      updated: 1234567890
                      isFavorite: true
      security:
      - x-api-key: []
    post:
      tags:
      - Org Project
      summary: Create a project
      description: Creates a new project
      operationId: create-org-scoped-project
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateProjectRequest'
      responses:
        "201":
          description: Project response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
              examples:
                example-project-response-json:
                  value:
                    project:
                      org: example_org_identifier
                      identifier: example_project_identifier
                      name: example-project-name
                      color: '#0063F7'
                      modules:
                      - CD
                      description: This is a example project
                      tags:
                        property1: value1
                        property2: value2
                    created: 1234567890
                    updated: 1234567890
                    isFavorite: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
              examples:
                example-project-response-yaml:
                  value: |
                    project:
                      org: example_org_identifier
                      identifier: example_project_identifier
                      name: example-project-name
                      color: '#0063F7'
                      modules:
                        - CD
                      description: This is a example project
                      tags:
                        property1: value1
                        property2: value2
                    created: 1234567890
                    updated: 1234567890
                    isFavorite: true
      security:
      - x-api-key: []
  /v1/orgs/{org}/projects/{project}:
    get:
      tags:
      - Org Project
      summary: Retrieve a project
      description: Retrieves the information of the project with the matching project
        identifier.
      operationId: get-org-scoped-project
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Project response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
              examples:
                example-project-response-json:
                  value:
                    project:
                      org: example_org_identifier
                      identifier: example_project_identifier
                      name: example-project-name
                      color: '#0063F7'
                      modules:
                      - CD
                      description: This is a example project
                      tags:
                        property1: value1
                        property2: value2
                    created: 1234567890
                    updated: 1234567890
                    isFavorite: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
              examples:
                example-project-response-yaml:
                  value: |
                    project:
                      org: example_org_identifier
                      identifier: example_project_identifier
                      name: example-project-name
                      color: '#0063F7'
                      modules:
                        - CD
                      description: This is a example project
                      tags:
                        property1: value1
                        property2: value2
                    created: 1234567890
                    updated: 1234567890
                    isFavorite: true
      security:
      - x-api-key: []
    put:
      tags:
      - Org Project
      summary: Update a project
      description: Updates the information of the project with the matching project
        identifier.
      operationId: update-org-scoped-project
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/UpdateProjectRequest'
      responses:
        "200":
          description: Project response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
              examples:
                example-project-response-json:
                  value:
                    project:
                      org: example_org_identifier
                      identifier: example_project_identifier
                      name: example-project-name
                      color: '#0063F7'
                      modules:
                      - CD
                      description: This is a example project
                      tags:
                        property1: value1
                        property2: value2
                    created: 1234567890
                    updated: 1234567890
                    isFavorite: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
              examples:
                example-project-response-yaml:
                  value: |
                    project:
                      org: example_org_identifier
                      identifier: example_project_identifier
                      name: example-project-name
                      color: '#0063F7'
                      modules:
                        - CD
                      description: This is a example project
                      tags:
                        property1: value1
                        property2: value2
                    created: 1234567890
                    updated: 1234567890
                    isFavorite: true
      security:
      - x-api-key: []
    delete:
      tags:
      - Org Project
      summary: Delete a project
      description: Deletes the information of the project with the matching project
        identifier.
      operationId: delete-org-scoped-project
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Project response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
              examples:
                example-project-response-json:
                  value:
                    project:
                      org: example_org_identifier
                      identifier: example_project_identifier
                      name: example-project-name
                      color: '#0063F7'
                      modules:
                      - CD
                      description: This is a example project
                      tags:
                        property1: value1
                        property2: value2
                    created: 1234567890
                    updated: 1234567890
                    isFavorite: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
              examples:
                example-project-response-yaml:
                  value: |
                    project:
                      org: example_org_identifier
                      identifier: example_project_identifier
                      name: example-project-name
                      color: '#0063F7'
                      modules:
                        - CD
                      description: This is a example project
                      tags:
                        property1: value1
                        property2: value2
                    created: 1234567890
                    updated: 1234567890
                    isFavorite: true
      security:
      - x-api-key: []
  /v1/ip-allowlist:
    get:
      tags:
      - IP Allowlist
      summary: List IP Allowlist Configs
      description: Retrieves the information of the IP Allowlist Config
      operationId: get-ip-allowlist-configs
      parameters:
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of items to return per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 20
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - identifier
          - created
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - name: allowed_source_type
        in: query
        description: This is to filter IP allowlist configs only blocked from UI or
          API
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Example response
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IPAllowlistConfigResponse'
                x-content-type: application/json
      security:
      - x-api-key: []
      x-internal: false
    post:
      tags:
      - IP Allowlist
      summary: Create a IP Allowlist config
      description: Creates a new IP Allowlist config
      operationId: create-ip-allowlist-config
      parameters:
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/IPAllowlistConfigRequest'
      responses:
        "201":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPAllowlistConfigResponse'
      security:
      - x-api-key: []
      x-internal: false
  /v1/ip-allowlist/{ip-config-identifier}:
    get:
      tags:
      - IP Allowlist
      summary: Retrieve a IP Allowlist config
      description: Retrieves the specified IP Allowlist config
      operationId: get-ip-allowlist-config
      parameters:
      - name: ip-config-identifier
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPAllowlistConfigResponse'
      security:
      - x-api-key: []
      x-internal: false
    put:
      tags:
      - IP Allowlist
      summary: Update IP Allowlist config
      description: Updates the specified IP Allowlist config
      operationId: update-ip-allowlist-config
      parameters:
      - name: ip-config-identifier
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/IPAllowlistConfigRequest'
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPAllowlistConfigResponse'
      security:
      - x-api-key: []
      x-internal: false
    delete:
      tags:
      - IP Allowlist
      summary: Delete an IP Allowlist config
      description: Deletes the specified IP Allowlist config
      operationId: delete-ip-allowlist-config
      parameters:
      - name: ip-config-identifier
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
      security:
      - x-api-key: []
      x-internal: false
  /v1/ip-allowlist/validate-unique-identifier/{ip-config-identifier}:
    get:
      tags:
      - IP Allowlist
      summary: Validate unique IP Allowlist config identifier
      description: Checks whether the IP Allowlist config identifier is unique or
        not
      operationId: validate-unique-ip-allowlist-config-identifier
      parameters:
      - name: ip-config-identifier
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
      security:
      - x-api-key: []
      x-internal: false
  /v1/ip-allowlist/validate/ip-address:
    get:
      tags:
      - IP Allowlist
      summary: Validate IP address lies in a specified range or not
      description: Checks whether the IP address is allowed or not. It also supports
        checking against a specific IP block range.
      operationId: validate-ip-address-allowlisted-or-not
      parameters:
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ip_address
        in: query
        description: This is the IP address that needs to be checked if allowed or
          not
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: custom_ip_address_block
        in: query
        description: This is the IP address or block of IP address against which we
          need to verify if a given IP address is allowed or not. If not passed we
          do the validation against the IP configs within Harness.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: include_disabled_configs
        in: query
        description: "This setting controls the visibility of IP allowlist configurations.\
          \ When set to 'true', it displays both enabled and disabled configurations.\
          \ When set to 'false' or left unset, it displays only the enabled configurations."
        required: false
        style: form
        explode: true
        allowReserved: false
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPAllowlistConfigValidateResponse'
      security:
      - x-api-key: []
      x-internal: false
  /v1/ip-allowlist/allowed/ip-address:
    get:
      tags:
      - IP Allowlist
      summary: Check if IP address is allowed or not
      description: Checks whether the IP address is allowed or not.
      operationId: allowed-ip-address
      parameters:
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ip_address
        in: query
        description: This is the IP address that needs to be checked if allowed or
          not
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPAllowlistConfigValidateResponse'
      security:
      - x-api-key: []
      x-internal: true
  /v1/secrets:
    get:
      tags:
      - Account Secret
      summary: List secrets
      description: Retrieves the information of the secrets.
      operationId: get-account-scoped-secrets
      parameters:
      - name: secret
        in: query
        description: Identifier field of secrets
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: type
        in: query
        description: Secret types on which the filter will be applied
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - SSHKeyPath
            - SSHKeyReference
            - SSHPassword
            - SSHKerberosTGTKeyTabFile
            - SSHKerberosTGTPassword
            - SecretFile
            - SecretText
            - WinRmTGTKeyTabFile
            - WinRmTGTPassword
            - WinRmNTLM
      - name: recursive
        in: query
        description: 'Expand current scope to include all child scopes '
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of items to return per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 20
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - identifier
          - created
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Secret list response
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SecretResponse'
                x-content-type: application/json
              examples:
                example-list-secret-response-json:
                  value:
                  - secret:
                      name: example_secret
                      identifier: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
            application/yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SecretResponse'
              examples:
                example-list-secret-response-yaml:
                  value: |
                    - secret:
                        name: example_secret
                        identifier: example_secret
                        org: default
                        project: example_project
                        tags:
                          property1: example_secret
                        description: example_secret
                        spec:
                          type: SSHKeyPath
                          port: 80
                          username: example_secret
                          key_path: example_secret
                          encrypted_passphrase: account.example_secret
                      created: 1234567890
                      updated: 1234567890
                      draft: false
      security:
      - x-api-key: []
    post:
      tags:
      - Account Secret
      summary: Create a secret
      description: Creates a new secret
      operationId: create-account-scoped-secret
      parameters:
      - name: private_secret
        in: query
        description: This would be used to define secret as private.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/SecretRequest'
      responses:
        "201":
          description: Secret response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-json:
                  value:
                    secret:
                      name: example_secret
                      identifier: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-yaml:
                  value: |
                    secret:
                      name: example_secret
                      identifier: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
      security:
      - x-api-key: []
  /v1/secrets/validate-secret-ref:
    post:
      tags:
      - Account Secret
      summary: Validate secret reference
      description: Validates if the secret at the secretManager path can be referenced
      operationId: validate-account-secret-ref
      parameters:
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/SecretValidationRequest'
      responses:
        "200":
          description: 'Response of the secret reference validation '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretValidationResponse'
              examples:
                Example 1:
                  value:
                    success: true
                    message: "Validation is Successful, Secret can be referenced"
      security:
      - x-api-key: []
  /v1/orgs/{org}/secrets:
    get:
      tags:
      - Org Secret
      summary: List secrets
      description: Retrieves the information of the secrets.
      operationId: get-org-scoped-secrets
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: secret
        in: query
        description: Identifier field of secrets
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: type
        in: query
        description: Secret types on which the filter will be applied
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - SSHKeyPath
            - SSHKeyReference
            - SSHPassword
            - SSHKerberosTGTKeyTabFile
            - SSHKerberosTGTPassword
            - SecretFile
            - SecretText
            - WinRmTGTKeyTabFile
            - WinRmTGTPassword
            - WinRmNTLM
      - name: recursive
        in: query
        description: 'Expand current scope to include all child scopes '
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of items to return per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 20
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - identifier
          - created
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Secret list response
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SecretResponse'
                x-content-type: application/json
              examples:
                example-list-secret-response-json:
                  value:
                  - secret:
                      name: example_secret
                      identifier: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
            application/yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SecretResponse'
              examples:
                example-list-secret-response-yaml:
                  value: |
                    - secret:
                        name: example_secret
                        identifier: example_secret
                        org: default
                        project: example_project
                        tags:
                          property1: example_secret
                        description: example_secret
                        spec:
                          type: SSHKeyPath
                          port: 80
                          username: example_secret
                          key_path: example_secret
                          encrypted_passphrase: account.example_secret
                      created: 1234567890
                      updated: 1234567890
                      draft: false
      security:
      - x-api-key: []
    post:
      tags:
      - Org Secret
      summary: Create a secret
      description: Creates a new secret
      operationId: create-org-scoped-secret
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: private_secret
        in: query
        description: This would be used to define secret as private.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/SecretRequest'
      responses:
        "201":
          description: Secret response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-json:
                  value:
                    secret:
                      name: example_secret
                      identifier: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-yaml:
                  value: |
                    secret:
                      name: example_secret
                      identifier: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
      security:
      - x-api-key: []
  /v1/orgs/{org}/secrets/validate-secret-ref:
    post:
      tags:
      - Org Secret
      summary: Validate secret reference
      description: Validates if the secret at the secretManager path can be referenced
      operationId: validate-org-secret-ref
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/SecretValidationRequest'
      responses:
        "200":
          description: 'Response of the secret reference validation '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretValidationResponse'
              examples:
                Example 1:
                  value:
                    success: true
                    message: "Validation is Successful, Secret can be referenced"
      security:
      - x-api-key: []
  /v1/orgs/{org}/projects/{project}/secrets:
    get:
      tags:
      - Project Secret
      summary: List secrets
      description: Retrieves the information of the secrets.
      operationId: get-project-scoped-secrets
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: secret
        in: query
        description: Identifier field of secrets
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: type
        in: query
        description: Secret types on which the filter will be applied
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - SSHKeyPath
            - SSHKeyReference
            - SSHPassword
            - SSHKerberosTGTKeyTabFile
            - SSHKerberosTGTPassword
            - SecretFile
            - SecretText
            - WinRmTGTKeyTabFile
            - WinRmTGTPassword
            - WinRmNTLM
      - name: recursive
        in: query
        description: 'Expand current scope to include all child scopes '
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of items to return per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 20
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - identifier
          - created
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Secret list response
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SecretResponse'
                x-content-type: application/json
              examples:
                example-list-secret-response-json:
                  value:
                  - secret:
                      name: example_secret
                      identifier: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
            application/yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SecretResponse'
              examples:
                example-list-secret-response-yaml:
                  value: |
                    - secret:
                        name: example_secret
                        identifier: example_secret
                        org: default
                        project: example_project
                        tags:
                          property1: example_secret
                        description: example_secret
                        spec:
                          type: SSHKeyPath
                          port: 80
                          username: example_secret
                          key_path: example_secret
                          encrypted_passphrase: account.example_secret
                      created: 1234567890
                      updated: 1234567890
                      draft: false
      security:
      - x-api-key: []
    post:
      tags:
      - Project Secret
      summary: Create a secret
      description: Creates a new secret
      operationId: create-project-scoped-secret
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: private_secret
        in: query
        description: This would be used to define secret as private.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/SecretRequest'
      responses:
        "201":
          description: Secret response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-json:
                  value:
                    secret:
                      name: example_secret
                      identifier: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-yaml:
                  value: |
                    secret:
                      name: example_secret
                      identifier: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
      security:
      - x-api-key: []
  /v1/orgs/{org}/projects/{project}/secrets/validate-secret-ref:
    post:
      tags:
      - Project Secret
      summary: Validate secret reference
      description: Validates if the secret at the secretManager path can be referenced
      operationId: validate-project-secret-ref
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project to which the resource is scoped.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/SecretValidationRequest'
      responses:
        "200":
          description: 'Response of the secret reference validation '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretValidationResponse'
              examples:
                Example 1:
                  value:
                    success: true
                    message: "Validation is Successful, Secret can be referenced"
      security:
      - x-api-key: []
  /v1/secrets/{secret}:
    get:
      tags:
      - Account Secret
      summary: Retrieve a secret
      description: Retrieves the information of the secret.
      operationId: get-account-scoped-secret
      parameters:
      - name: secret
        in: path
        description: Identifier field of the secret
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Secret response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-json:
                  value:
                    secret:
                      name: example_secret
                      identifier: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-yaml:
                  value: |
                    secret:
                      name: example_secret
                      identifier: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
      security:
      - x-api-key: []
    put:
      tags:
      - Account Secret
      summary: Update a secret
      description: Updates the information of the secret with the matching secret
        identifier.
      operationId: update-account-scoped-secret
      parameters:
      - name: secret
        in: path
        description: Identifier field of the secret
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/SecretRequest'
      responses:
        "200":
          description: Secret response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-json:
                  value:
                    secret:
                      name: example_secret
                      identifier: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-yaml:
                  value: |
                    secret:
                      name: example_secret
                      identifier: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
      security:
      - x-api-key: []
    delete:
      tags:
      - Account Secret
      summary: Deletes a secret
      description: Deletes the information of the secret with the matching secret
        identifier.
      operationId: delete-account-scoped-secret
      parameters:
      - name: secret
        in: path
        description: Identifier field of the secret
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Secret response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-json:
                  value:
                    secret:
                      name: example_secret
                      identifier: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-yaml:
                  value: |
                    secret:
                      name: example_secret
                      identifier: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
      security:
      - x-api-key: []
  /v1/orgs/{org}/secrets/{secret}:
    get:
      tags:
      - Org Secret
      summary: Retrieve a secret
      description: Retrieves the information of the secret.
      operationId: get-org-scoped-secret
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: secret
        in: path
        description: Identifier field of the secret
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Secret response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-json:
                  value:
                    secret:
                      name: example_secret
                      identifier: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-yaml:
                  value: |
                    secret:
                      name: example_secret
                      identifier: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
      security:
      - x-api-key: []
    put:
      tags:
      - Org Secret
      summary: Update a secret
      description: Updates the information of the secret with the matching secret
        identifier.
      operationId: update-org-scoped-secret
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: secret
        in: path
        description: Identifier field of the secret
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/SecretRequest'
      responses:
        "200":
          description: Secret response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-json:
                  value:
                    secret:
                      name: example_secret
                      identifier: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-yaml:
                  value: |
                    secret:
                      name: example_secret
                      identifier: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
      security:
      - x-api-key: []
    delete:
      tags:
      - Org Secret
      summary: Delete a secret
      description: Deletes the information of the secret with the matching secret
        identifier.
      operationId: delete-org-scoped-secret
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: secret
        in: path
        description: Identifier field of the secret
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Secret response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-json:
                  value:
                    secret:
                      name: example_secret
                      identifier: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-yaml:
                  value: |
                    secret:
                      name: example_secret
                      identifier: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
      security:
      - x-api-key: []
  /v1/orgs/{org}/projects/{project}/secrets/{secret}:
    get:
      tags:
      - Project Secret
      summary: Retrieve a secret
      description: Retrieves the information of the secret.
      operationId: get-project-scoped-secret
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: secret
        in: path
        description: Identifier field of the secret
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Secret response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-json:
                  value:
                    secret:
                      name: example_secret
                      identifier: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-yaml:
                  value: |
                    secret:
                      name: example_secret
                      identifier: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
      security:
      - x-api-key: []
    put:
      tags:
      - Project Secret
      summary: Update a secret
      description: Updates the information of the secret with the matching secret
        identifier.
      operationId: update-project-scoped-secret
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: secret
        in: path
        description: Identifier field of the secret
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/SecretRequest'
      responses:
        "200":
          description: Secret response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-json:
                  value:
                    secret:
                      name: example_secret
                      identifier: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-yaml:
                  value: |
                    secret:
                      name: example_secret
                      identifier: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
      security:
      - x-api-key: []
    delete:
      tags:
      - Project Secret
      summary: Delete a secret
      description: Deletes the information of the secret with the matching secret
        identifier.
      operationId: delete-project-scoped-secret
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: secret
        in: path
        description: Identifier field of the secret
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Secret response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-json:
                  value:
                    secret:
                      name: example_secret
                      identifier: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-yaml:
                  value: |
                    secret:
                      name: example_secret
                      identifier: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
      security:
      - x-api-key: []
  /v1/favorites:
    post:
      tags:
      - Account Favorites
      summary: Create a favorite at account level
      description: Creates favorite resource of a user at account level
      operationId: create-account-favorite
      parameters:
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/FavoriteRequest'
      responses:
        "201":
          description: Favorite response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoriteResponse'
              examples:
                example-Favorite-response-json:
                  value:
                    Favorite:
                      org: sample_organization
                      project: sample_project
                      user_id: example_userId
                      resource_type: Example_resourceType
                      resource_id: Example_resourceId
                    created: 1234567890
      security:
      - x-api-key: []
      x-internal: true
  /v1/favorites/{user-id}:
    get:
      tags:
      - Account Favorites
      summary: Retrieve a favorite resources of a user at account level
      description: Retrieves the favorite resource of a user at account level
      operationId: get-account-favorites
      parameters:
      - name: user-id
        in: path
        description: This would be used to fetch the Favorites of the user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: resource_type
        in: query
        description: Determines the type of favorite entity requested.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - CONNECTOR
          - DELEGATE
          - PIPELINE
          - SECRET
          - PROJECT
      responses:
        "200":
          description: Favorite list response
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FavoriteResponse'
                x-content-type: application/json
              examples:
                example-Favorite-list-response-json:
                  value:
                  - Favorite:
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                      user_id: example_userId
                      resource_type: Example_resourceType
                      resource_id: Example_resourceId
                    created: 1234567890
      security:
      - x-api-key: []
      x-internal: true
    delete:
      tags:
      - Account Favorites
      summary: Delete a account level favorite
      description: Deletes the requested favorite at account level.
      operationId: delete-account-favorite
      parameters:
      - name: user-id
        in: path
        description: This would be used to fetch the Favorites of the user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: resource_type
        in: query
        description: Determines the type of favorite entity requested.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - CONNECTOR
          - DELEGATE
          - PIPELINE
          - SECRET
          - PROJECT
      - name: resource_id
        in: query
        description: This would be used to do operations on the favorite entity.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
      security:
      - x-api-key: []
      x-internal: true
  /v1/orgs/{org}/favorites:
    post:
      tags:
      - Org Favorites
      summary: Create a favorite at org level
      description: Creates favorite resource of a user at organisation level
      operationId: create-org-favorite
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/FavoriteRequest'
      responses:
        "201":
          description: Favorite response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoriteResponse'
              examples:
                example-Favorite-response-json:
                  value:
                    Favorite:
                      org: sample_organization
                      project: sample_project
                      user_id: example_userId
                      resource_type: Example_resourceType
                      resource_id: Example_resourceId
                    created: 1234567890
      security:
      - x-api-key: []
      x-internal: true
  /v1/orgs/{org}/favorites/{user-id}:
    get:
      tags:
      - Org Favorites
      summary: Retrieve a favorite resources of a user at organization level
      description: Retrieves the favorite resource of a user at organization level
      operationId: get-org-favorites
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: user-id
        in: path
        description: This would be used to fetch the Favorites of the user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: resource_type
        in: query
        description: Determines the type of favorite entity requested.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - CONNECTOR
          - DELEGATE
          - PIPELINE
          - SECRET
          - PROJECT
      responses:
        "200":
          description: Favorite list response
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FavoriteResponse'
                x-content-type: application/json
              examples:
                example-Favorite-list-response-json:
                  value:
                  - Favorite:
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                      user_id: example_userId
                      resource_type: Example_resourceType
                      resource_id: Example_resourceId
                    created: 1234567890
      security:
      - x-api-key: []
      x-internal: true
    delete:
      tags:
      - Org Favorites
      summary: Delete a org level favorite
      description: Deletes the requested favorite at organization level.
      operationId: delete-org-favorite
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: user-id
        in: path
        description: This would be used to fetch the Favorites of the user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: resource_type
        in: query
        description: Determines the type of favorite entity requested.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - CONNECTOR
          - DELEGATE
          - PIPELINE
          - SECRET
          - PROJECT
      - name: resource_id
        in: query
        description: This would be used to do operations on the favorite entity.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
      security:
      - x-api-key: []
      x-internal: true
  /v1/orgs/{org}/projects/{project}/favorites:
    post:
      tags:
      - Project Favorites
      summary: Create a favorite at project level
      description: Creates favorite resource of a user at project level
      operationId: create-project-favorite
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/FavoriteRequest'
      responses:
        "201":
          description: Favorite response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoriteResponse'
              examples:
                example-Favorite-response-json:
                  value:
                    Favorite:
                      org: sample_organization
                      project: sample_project
                      user_id: example_userId
                      resource_type: Example_resourceType
                      resource_id: Example_resourceId
                    created: 1234567890
      security:
      - x-api-key: []
      x-internal: true
  /v1/orgs/{org}/projects/{project}/favorites/{user-id}:
    get:
      tags:
      - Project Favorites
      summary: Retrieve a favorite resources of a user at project level
      description: Retrieves the favorite resource of a user at project level
      operationId: get-project-favorites
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: user-id
        in: path
        description: This would be used to fetch the Favorites of the user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: resource_type
        in: query
        description: Determines the type of favorite entity requested.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - CONNECTOR
          - DELEGATE
          - PIPELINE
          - SECRET
          - PROJECT
      responses:
        "200":
          description: Favorite list response
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FavoriteResponse'
                x-content-type: application/json
              examples:
                example-Favorite-list-response-json:
                  value:
                  - Favorite:
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                      user_id: example_userId
                      resource_type: Example_resourceType
                      resource_id: Example_resourceId
                    created: 1234567890
      security:
      - x-api-key: []
      x-internal: true
    delete:
      tags:
      - Project Favorites
      summary: Delete a project level favorite
      description: Deletes the requested favorite at project level.
      operationId: delete-project-favorite
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: user-id
        in: path
        description: This would be used to fetch the Favorites of the user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: resource_type
        in: query
        description: Determines the type of favorite entity requested.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - CONNECTOR
          - DELEGATE
          - PIPELINE
          - SECRET
          - PROJECT
      - name: resource_id
        in: query
        description: This would be used to do operations on the favorite entity.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
      security:
      - x-api-key: []
      x-internal: true
  /v1/module-versions:
    get:
      tags:
      - Module Versions
      summary: List Module Versions
      description: Lists Versions of different Modules.
      operationId: list-module-versions
      parameters:
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of items to return per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 20
      responses:
        "200":
          description: Example response
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ModuleVersionsResponse'
                x-content-type: application/json
              examples: {}
      security:
      - x-api-key: []
      x-internal: true
  /v1/rancher/connectors/{connector}/clusters:
    get:
      tags:
      - Account Rancher Infrastructure
      summary: List rancher clusters using account level connector
      description: List rancher clusters using the given account level rancher connector
      operationId: list-account-scoped-rancher-clusters-using-connector
      parameters:
      - name: connector
        in: path
        description: Identifier field of the scoped connector entity to be used for
          this operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of items to return per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 20
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - identifier
          - created
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Response containing list of rancher cluster names
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                x-content-type: application/json
              examples:
                Example 1:
                  value:
                  - cluster1
                  - cluster2
      security:
      - x-api-key: []
  /v1/orgs/{org}/rancher/connectors/{connector}/clusters:
    get:
      tags:
      - Org Rancher Infrastructure
      summary: List rancher clusters using org level connector
      description: List rancher clusters using the given org level rancher connector
      operationId: list-org-scoped-rancher-clusters-using-connector
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: connector
        in: path
        description: Identifier field of the scoped connector entity to be used for
          this operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of items to return per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 20
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - identifier
          - created
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Response containing list of rancher cluster names
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                x-content-type: application/json
              examples:
                Example 1:
                  value:
                  - cluster1
                  - cluster2
      security:
      - x-api-key: []
  /v1/orgs/{org}/projects/{project}/rancher/connectors/{connector}/clusters:
    get:
      tags:
      - Project Rancher Infrastructure
      summary: List rancher clusters using project level connector
      description: List rancher clusters using the given project level rancher connector
      operationId: list-project-scoped-rancher-clusters-using-connector
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: connector
        in: path
        description: Identifier field of the scoped connector entity to be used for
          this operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of items to return per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 20
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - identifier
          - created
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Response containing list of rancher cluster names
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                x-content-type: application/json
              examples:
                Example 1:
                  value:
                  - cluster1
                  - cluster2
      security:
      - x-api-key: []
  /v1/rancher/environments/{environment}/infrastructure-definitions/{infrastructure-definition}/clusters:
    get:
      tags:
      - Account Rancher Infrastructure
      summary: List rancher clusters using account level env and infra def
      description: List rancher clusters using the given account level environment
        and infrastructure definition.
      operationId: list-account-scoped-rancher-clusters-using-env-and-infra
      parameters:
      - name: environment
        in: path
        description: Identifier field of the scoped environment entity to be used
          for the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: infrastructure-definition
        in: path
        description: Identifier field of the scoped infrastructure definition entity
          to be used in the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of items to return per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 20
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - identifier
          - created
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Response containing list of rancher cluster names
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                x-content-type: application/json
              examples:
                Example 1:
                  value:
                  - cluster1
                  - cluster2
      security:
      - x-api-key: []
  /v1/orgs/{org}/rancher/environments/{environment}/infrastructure-definitions/{infrastructure-definition}/clusters:
    get:
      tags:
      - Org Rancher Infrastructure
      summary: List rancher clusters using org level env and infra def
      description: List rancher clusters using the given org level environment and
        infrastructure definition.
      operationId: list-org-scoped-rancher-clusters-using-env-and-infra
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        description: Identifier field of the scoped environment entity to be used
          for the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: infrastructure-definition
        in: path
        description: Identifier field of the scoped infrastructure definition entity
          to be used in the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of items to return per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 20
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - identifier
          - created
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Response containing list of rancher cluster names
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                x-content-type: application/json
              examples:
                Example 1:
                  value:
                  - cluster1
                  - cluster2
      security:
      - x-api-key: []
  ? /v1/orgs/{org}/projects/{project}/rancher/environments/{environment}/infrastructure-definitions/{infrastructure-definition}/clusters
  : get:
      tags:
      - Project Rancher Infrastructure
      summary: List rancher clusters using project level env and infra def
      description: List rancher clusters using the given project level environment
        and infrastructure definition.
      operationId: list-project-scoped-rancher-clusters-using-env-and-infra
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        description: Identifier field of the scoped environment entity to be used
          for the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: infrastructure-definition
        in: path
        description: Identifier field of the scoped infrastructure definition entity
          to be used in the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of items to return per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 20
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - identifier
          - created
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Response containing list of rancher cluster names
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                x-content-type: application/json
              examples:
                Example 1:
                  value:
                  - cluster1
                  - cluster2
      security:
      - x-api-key: []
  /v1/orgs/{org}/projects/{project}/services/{service}/primary-manifests:
    get:
      tags:
      - Project Services
      summary: List primary manifests of a project scoped service
      description: Returns a list of eligible primary manifests from all configured
        manifest in a project-scoped service.
      operationId: get-primary-manifests
      parameters:
      - name: service
        in: path
        description: Identifier field of the service the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Response containing a list of eligible manifest identifiers
            that can be applied as primary manifest.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManifestsResponseDTO'
              examples:
                Example 1:
                  value:
                    identifiers:
                    - id1
                    - id2
            application/xml:
              schema:
                type: object
                properties: {}
      security:
      - x-api-key: []
      x-internal: true
  /v1/orgs/{org}/services/{service}/primary-manifests:
    get:
      tags:
      - Org Services
      summary: List primary manifests of a org scoped service
      description: Returns a list of eligible primary manifests from all configured
        manifest in an org-scoped service.
      operationId: get-org-scoped-primary-manifests
      parameters:
      - name: service
        in: path
        description: Identifier field of the service the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Response containing a list of eligible manifest identifiers
            that can be applied as primary manifest.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManifestsResponseDTO'
              examples:
                Example 1:
                  value:
                    identifiers:
                    - id1
                    - id2
            application/xml:
              schema:
                type: object
                properties: {}
      security:
      - x-api-key: []
      x-internal: true
  /v1/services/{service}/primary-manifests:
    get:
      tags:
      - Account Services
      summary: List primary manifests of a account scoped service
      description: Returns a list of eligible primary manifests from all configured
        manifest in an account-scoped service.
      operationId: get-account-scoped-primary-manifests
      parameters:
      - name: service
        in: path
        description: Identifier field of the service the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Response containing a list of eligible manifest identifiers
            that can be applied as primary manifest.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManifestsResponseDTO'
              examples:
                Example 1:
                  value:
                    identifiers:
                    - id1
                    - id2
            application/xml:
              schema:
                type: object
                properties: {}
      security:
      - x-api-key: []
      x-internal: true
  /v1/eula/sign:
    post:
      tags:
      - EULA
      summary: Sign an End User License Agreement
      description: Sign an End User License Agreement.
      operationId: sign-eula
      parameters:
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/EulaSignRequest'
      responses:
        "200":
          description: Response of signing End User License Agreement
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EulaSignResponse'
      security:
      - x-api-key: []
      x-internal: false
  /v1/eula/validate-sign:
    get:
      tags:
      - EULA
      summary: Validate specified agreement is signed or not
      description: Check whether End User License Agreement has been signed for specified
        agreement type.
      operationId: validate-eula-sign
      parameters:
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: agreement_type
        in: query
        description: Type of Agreements.
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - AIDA
      responses:
        "200":
          description: Response of signing End User License Agreement
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EulaSignResponse'
      security:
      - x-api-key: []
      x-internal: false
  /v1/gitx-webhooks:
    get:
      tags:
      - GitX Webhooks
      summary: Lists all the GitX Webhooks at Account level
      description: List GitX webhooks
      operationId: list-gitx-webhooks
      parameters:
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of items to return per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 20
      - name: webhook_identifier
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Example response
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitXWebhookResponse'
                x-content-type: application/json
      security:
      - x-api-key: []
      x-internal: true
    post:
      tags:
      - GitX Webhooks
      summary: Create a GitX webhook at Account level
      description: Create GitXWebhook at account level
      operationId: create-gitx-webhook
      parameters:
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateGitXWebhookRequest'
      responses:
        "201":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGitXWebhookResponse'
      security:
      - x-api-key: []
      x-internal: true
  /v1/gitx-webhooks/{gitx-webhook}:
    get:
      tags:
      - GitX Webhooks
      summary: Fetch GitX Webhook at Account level
      description: Fetch a gitx webhook
      operationId: get-gitx-webhook
      parameters:
      - name: gitx-webhook
        in: path
        description: GitX webhook identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitXWebhookResponse'
      security:
      - x-api-key: []
      x-internal: true
    put:
      tags:
      - GitX Webhooks
      summary: Updates a GitX Webhook at Account level
      description: Update a Gitx webhook
      operationId: update-gitx-webhook
      parameters:
      - name: gitx-webhook
        in: path
        description: GitX webhook identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/UpdateGitXWebhookRequest'
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateGitXWebhookResponse'
      security:
      - x-api-key: []
      x-internal: true
    delete:
      tags:
      - GitX Webhooks
      summary: Deletes a GitX Webhook at Account level
      description: Deletes a gitx webhooks
      operationId: delete-gitx-webhook
      parameters:
      - name: gitx-webhook
        in: path
        description: GitX webhook identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteGitXWebhookResponse'
      security:
      - x-api-key: []
      x-internal: true
  /v1/gitx-webhook-events:
    get:
      tags:
      - GitX Webhooks
      summary: Lists all the GitX Webhooks events at Account level
      description: List GitX webhook Events
      operationId: list-gitx-webhook-events
      parameters:
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of items to return per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 20
      - name: webhook_identifier
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: event_start_time
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: event_end_time
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: repo_name
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: file_path
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: event_identifier
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: event_status
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - SKIPPED
            - FAILED
            - PROCESSING
            - SUCCESSFUL
            - QUEUED
            - WARNING
            - UNKNOWN
      - name: connector_ref
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: include_parent_scope
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: commit_id
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Example response
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitXWebhookEventResponse'
                x-content-type: application/json
      security:
      - x-api-key: []
      x-internal: true
  /v1/kubernetes/releases/service-mapping:
    get:
      tags:
      - K8s Release Service Mapping
      summary: List service and environment details using namespace and releasename
      description: Return details of service and environment mapped to pods namespace
        and release-name for a given account.
      operationId: get-v1-releaseDetails
      parameters:
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/BatchReleaseDetailsRequest'
      responses:
        "200":
          description: Batch Release Details response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BatchReleaseDetailsResponse'
                x-content-type: application/json
              examples:
                Example 1:
                  value:
                  - - _id: {}
                      account: account
                      org: org
                      project: project
                      release_key: release_key
                      service_details:
                        service_id: k8sservice
                        service_name: k8s service
                        org: orgid
                        project: projectid
                      environment_details:
                        env_id: k8senv
                        env_name: k8s env
                        org: orgid
                        project: projectid
                        connector_ref: string
                        infra_name: infra_name
                        infra_id: infra_id
                        infrastructure_kind: K8sDirect
            application/xml:
              schema:
                $ref: '#/components/schemas/BatchReleaseDetailsResponse'
      security:
      - x-api-key: []
  /v1/orgs/{org}/gitx-webhooks:
    get:
      tags:
      - Org Gitx Webhooks
      summary: Lists all the GitX Webhooks at Org level
      description: List org level GitX webhooks
      operationId: list-org-gitx-webhooks
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of items to return per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 20
      - name: webhook_identifier
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Example response
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitXWebhookResponse'
                x-content-type: application/json
      security:
      - x-api-key: []
      x-internal: true
    post:
      tags:
      - Org Gitx Webhooks
      summary: Create Org Level GitX webhook
      description: Create GitXWebhook at org level
      operationId: create-org-gitx-webhook
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateGitXWebhookRequest'
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGitXWebhookResponse'
      security:
      - x-api-key: []
      x-internal: true
  /v1/orgs/{org}/gitx-webhooks/{gitx-webhook}:
    get:
      tags:
      - Org Gitx Webhooks
      summary: Fetch GitX Webhook at org level
      description: Fetch a org level gitx webhook
      operationId: get-org-gitx-webhook
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: gitx-webhook
        in: path
        description: GitX webhook identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitXWebhookResponse'
      security:
      - x-api-key: []
      x-internal: true
    put:
      tags:
      - Org Gitx Webhooks
      summary: Updates a GitX Webhook at org level
      description: Update a org level Gitx webhook
      operationId: update-org-gitx-webhook
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: gitx-webhook
        in: path
        description: GitX webhook identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/UpdateGitXWebhookRequest'
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateGitXWebhookResponse'
      security:
      - x-api-key: []
      x-internal: true
    delete:
      tags:
      - Org Gitx Webhooks
      summary: Deletes a GitX Webhook at org level
      description: Deletes a org level gitx webhooks
      operationId: delete-org-gitx-webhook
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: gitx-webhook
        in: path
        description: GitX webhook identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteGitXWebhookResponse'
      security:
      - x-api-key: []
      x-internal: true
  /v1/orgs/{org}/gitx-webhook-events:
    get:
      tags:
      - Org Gitx Webhooks Events
      summary: Lists all the GitX Webhooks events at org level
      description: List GitX webhook Events at org level
      operationId: list-org-gitx-webhook-events
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of items to return per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 20
      - name: webhook_identifier
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: event_start_time
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: event_end_time
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: repo_name
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: file_path
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: event_identifier
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: event_status
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - SKIPPED
            - FAILED
            - PROCESSING
            - SUCCESSFUL
            - QUEUED
            - UNKNOWN
      - name: connector_ref
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: include_parent_scope
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: commit_id
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Example response
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitXWebhookEventResponse'
                x-content-type: application/json
      security:
      - x-api-key: []
      x-internal: true
  /v1/orgs/{org}/projects/{project}/gitx-webhooks:
    get:
      tags:
      - Project Gitx Webhooks
      summary: Lists all the GitX Webhooks at project level
      description: List project level GitX webhooks
      operationId: list-project-gitx-webhook
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of items to return per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 20
      - name: webhook_identifier
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Example response
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitXWebhookResponse'
                x-content-type: application/json
      security:
      - x-api-key: []
      x-internal: true
    post:
      tags:
      - Project Gitx Webhooks
      summary: Create Project level GitX webhook
      description: Create GitXWebhook at project level
      operationId: create-project-gitx-webhook
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateGitXWebhookRequest'
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGitXWebhookResponse'
      security:
      - x-api-key: []
  /v1/orgs/{org}/projects/{project}/gitx-webhooks/{gitx-webhook}:
    get:
      tags:
      - Project Gitx Webhooks
      summary: Fetch GitX Webhook at project level
      description: Fetch a project level gitx webhook
      operationId: get-project-gitx-webhook
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: gitx-webhook
        in: path
        description: GitX webhook identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitXWebhookResponse'
      security:
      - x-api-key: []
      x-internal: true
    put:
      tags:
      - Project Gitx Webhooks
      summary: Updates a GitX Webhook at project level
      description: Update a project level Gitx webhook
      operationId: update-project-gitx-webhook
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: gitx-webhook
        in: path
        description: GitX webhook identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/UpdateGitXWebhookRequest'
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateGitXWebhookResponse'
      security:
      - x-api-key: []
      x-internal: true
    delete:
      tags:
      - Project Gitx Webhooks
      summary: Deletes a GitX Webhook at project level
      description: Deletes a project level gitx webhooks
      operationId: delete-project-gitx-webhook
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: gitx-webhook
        in: path
        description: GitX webhook identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteGitXWebhookResponse'
      security:
      - x-api-key: []
      x-internal: true
  /v1/orgs/{org}/projects/{project}/gitx-webhook-events:
    get:
      tags:
      - Project Gitx Webhooks Events
      summary: Lists all the GitX Webhooks events at project level
      description: List GitX webhook Events at project level
      operationId: list-project-gitx-webhook-events
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of items to return per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 20
      - name: webhook_identifier
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: event_start_time
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: event_end_time
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: repo_name
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: file_path
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: event_identifier
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: event_status
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - SKIPPED
            - FAILED
            - PROCESSING
            - SUCCESSFUL
            - QUEUED
            - UNKNOWN
      - name: connector_ref
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: include_parent_scope
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: commit_id
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Example response
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitXWebhookEventResponse'
                x-content-type: application/json
      security:
      - x-api-key: []
      x-internal: true
  /v1/gitx-webhook-events/{gitx-webhook-event}:
    patch:
      tags:
      - GitX Webhook Event
      summary: Update the Webhook Event status
      description: Update the webhook event Status
      operationId: patch-gitx-webhook-events-gitx-webhook-event
      parameters:
      - name: gitx-webhook-event
        in: path
        description: GitX Webhook Event Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/UpdateGitXWebhookEventRequest'
      responses:
        "200":
          description: Update GitX Webhook Event Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitXWebhookEventResponse'
      security:
      - x-api-key: []
      x-internal: true
  /v1/certificates/{certificate}:
    get:
      tags:
      - Account Certificate
      summary: Retrieves the specified Certificate in account scope
      description: Retrieves the specified certificate in account scope
      operationId: get-account-scoped-certificate
      parameters:
      - name: certificate
        in: path
        description: Identifier field of the certificate
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateResponseDTO'
      security:
      - x-api-key: []
      x-internal: true
    put:
      tags:
      - Account Certificate
      summary: Updates the specified Certificate in account scope
      description: Updates the specified Certificate in account scope
      operationId: update-account-scoped-certificate
      parameters:
      - name: certificate
        in: path
        description: Identifier field of the certificate
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/UpdateCertificateRequest'
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateResponseDTO'
      security:
      - x-api-key: []
      x-internal: true
    delete:
      tags:
      - Account Certificate
      summary: Deletes the specified Certificate from account scope
      description: Deletes the specified Certificate from account scope
      operationId: delete-account-scoped-certificate
      parameters:
      - name: certificate
        in: path
        description: Identifier field of the certificate
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: forceDelete
        in: query
        description: Enable this field to force delete the entity
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: No Content
        "400":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties: {}
                x-content-type: application/json
      security:
      - x-api-key: []
      x-internal: true
  /v1/orgs/{org}/certificates/{certificate}:
    get:
      tags:
      - Org Certificate
      summary: Retrieves the specified Certificate in organization scope
      description: Retrieves the specified certificate in org scope
      operationId: get-org-scoped-certificate
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: certificate
        in: path
        description: Identifier field of the certificate
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateResponseDTO'
      security:
      - x-api-key: []
      x-internal: true
    put:
      tags:
      - Org Certificate
      summary: Updates the specified Certificate in org scope
      description: Updates the specified Certificate in org scope
      operationId: update-org-scoped-certificate
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: certificate
        in: path
        description: Identifier field of the certificate
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/UpdateCertificateRequest'
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateResponseDTO'
      security:
      - x-api-key: []
      x-internal: true
    delete:
      tags:
      - Org Certificate
      summary: Deletes the specified Certificate from org scope
      description: Deletes the specified Certificate from org scope
      operationId: delete-org-scoped-certificate
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: certificate
        in: path
        description: Identifier field of the certificate
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: forceDelete
        in: query
        description: Enable this field to force delete the entity
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties: {}
                x-content-type: application/json
      security:
      - x-api-key: []
      x-internal: true
  /v1/orgs/{org}/projects/{project}/certificates/{certificate}:
    get:
      tags:
      - Project Certificate
      summary: Retrieves the specified Certificate in project scope
      description: Retrieves the specified certificate in project scope
      operationId: get-project-scoped-certificate
      parameters:
      - name: certificate
        in: path
        description: Identifier field of the certificate
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateResponseDTO'
      security:
      - x-api-key: []
      x-internal: true
    put:
      tags:
      - Project Certificate
      summary: Updates the specified Certificate in project scope
      description: Updates the specified Certificate in project scope
      operationId: update-project-scoped-certificate
      parameters:
      - name: certificate
        in: path
        description: Identifier field of the certificate
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/UpdateCertificateRequest'
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateResponseDTO'
      security:
      - x-api-key: []
      x-internal: true
    delete:
      tags:
      - Project Certificate
      summary: Deletes the specified Certificate from project scope
      description: Deletes the specified Certificate from project scope
      operationId: delete-project-scoped-certificate
      parameters:
      - name: certificate
        in: path
        description: Identifier field of the certificate
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: forceDelete
        in: query
        description: Enable this field to force delete the entity
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties: {}
                x-content-type: application/json
      security:
      - x-api-key: []
      x-internal: true
  /v1/certificates/validate-unique-identifier/{certificate}:
    get:
      tags:
      - Account Certificate
      summary: Validate if the specified Certificate identifier is available for use
        in account scope
      description: Validate if the specified certificate identifier is available for
        use in account scope
      operationId: validate-account-scoped-certificate-identifier
      parameters:
      - name: certificate
        in: path
        description: Identifier field of the certificate
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
      security:
      - x-api-key: []
      x-internal: true
  /v1/orgs/{org}/certificates/validate-unique-identifier/{certificate}:
    get:
      tags:
      - Org Certificate
      summary: Validate if the specified Certificate identifier is available for use
        in organization scope
      description: Validate if the specified certificate identifier is available for
        use in organization scope
      operationId: validate-org-scoped-certificate-identifier
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: certificate
        in: path
        description: Identifier field of the certificate
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
      security:
      - x-api-key: []
      x-internal: true
  /v1/orgs/{org}/projects/{project}/certificates/validate-unique-identifier/{certificate}:
    get:
      tags:
      - Project Certificate
      summary: Validate if the specified Certificate identifier is available for use
        in project scope
      description: Validate if the specified certificate identifier is available for
        use in project scope
      operationId: validate-project-scoped-certificate-identifier
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: certificate
        in: path
        description: Identifier field of the certificate
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
      security:
      - x-api-key: []
      x-internal: true
  /v1/certificates:
    get:
      tags:
      - Account Certificate
      summary: Retrieves the list of Certificates in account scope
      description: Retrieves the list of certificates in account scope
      operationId: get-account-scoped-certificates
      parameters:
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of items to return per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 20
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - identifier
          - created
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - name: include_all_available_at_scope
        in: query
        description: Include all entities accessible at current scope
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Example response
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CertificateResponseDTO'
                x-content-type: application/json
      security:
      - x-api-key: []
      x-internal: true
    post:
      tags:
      - Account Certificate
      summary: Creates a new Certificate in account scope
      description: Creates a new certificate in account scope
      operationId: create-account-scoped-certificates
      parameters:
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateCertificateRequest'
      responses:
        "201":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateResponseDTO'
      security:
      - x-api-key: []
      x-internal: true
  /v1/orgs/{org}/certificates:
    get:
      tags:
      - Org Certificate
      summary: Retrieves the list of Certificates in organization scope
      description: Retrieves the list of certificates in organization scope
      operationId: get-org-scoped-certificates
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of items to return per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 20
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - identifier
          - created
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - name: include_all_available_at_scope
        in: query
        description: Include all entities accessible at current scope
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Example response
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CertificateResponseDTO'
                x-content-type: application/json
      security:
      - x-api-key: []
      x-internal: true
    post:
      tags:
      - Org Certificate
      summary: Creates a new Certificate in organization scope
      description: Creates a new certificate in organization scope
      operationId: create-org-scoped-certificates
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateCertificateRequest'
      responses:
        "201":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateResponseDTO'
      security:
      - x-api-key: []
      x-internal: true
  /v1/orgs/{org}/projects/{project}/certificates:
    get:
      tags:
      - Project Certificate
      summary: Retrieves the list of Certificates in project scope
      description: Retrieves the list of certificates in project scope
      operationId: get-project-scoped-certificates
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of items to return per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 20
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - identifier
          - created
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - name: include_all_available_at_scope
        in: query
        description: Include all entities accessible at current scope
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Example response
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CertificateResponseDTO'
                x-content-type: application/json
      security:
      - x-api-key: []
      x-internal: true
    post:
      tags:
      - Project Certificate
      summary: Creates a new Certificate in project scope
      description: Creates a new certificate in project scope
      operationId: create-project-scoped-certificates
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateCertificateRequest'
      responses:
        "201":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateResponseDTO'
      security:
      - x-api-key: []
      x-internal: true
  /v1/ldap-settings:
    get:
      tags:
      - ldap-settings
      summary: Get ldap settings for the account
      operationId: get-account-ldap-settings
      parameters:
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LdapSettingsResponse'
      security:
      - x-api-key: []
      x-stoplight:
        id: x58m09htlk67j
    post:
      tags:
      - Ldap Settings
      summary: Create Account LDAP Settings
      description: Create NG Ldap setttings
      operationId: create-ng-ldap-settings
      parameters:
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/LdapSettingsRequest'
      responses:
        "201":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LdapSettingsResponse'
      x-stoplight:
        id: n04275yl5c0g3
  /v1/ldap-settings/{ldap-settings-id}:
    get:
      tags:
      - Ldap Settings
      summary: Get Account Ldap Settings by identifier
      description: Get Account NG Ldap settings
      operationId: get-ldap-settings
      parameters:
      - name: ldap-settings-id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LdapSettingsResponse'
      x-stoplight:
        id: 9655d1754op9c
    put:
      tags:
      - Ldap Settings
      summary: Update Account Ldap Settings
      description: Update NG Ldap settings for the account
      operationId: update-ldap-settings
      parameters:
      - name: ldap-settings-id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/LdapSettingsRequest'
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LdapSettingsResponse'
      x-stoplight:
        id: 63u2f75vg76gz
    delete:
      tags:
      - Ldap Settings
      summary: Delete Account Ldap Settings
      description: 'Delete Account Ldap settings '
      operationId: delete-ldap-settings
      parameters:
      - name: ldap-settings-id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
      x-stoplight:
        id: hw0azqcr4ehs9
  /v1/ldap-settings/validate/connection-settings:
    post:
      tags:
      - Ldap Settings
      summary: Validate Ldap Connection Settings
      operationId: validate-connection-settings
      parameters:
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/LdapSettingsRequest'
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LdapValidateResponseDTO'
      x-stoplight:
        id: 24rd6s9hp2b0a
  /v1/ldap-settings/validate/user-settings:
    post:
      tags:
      - Ldap Settings
      summary: Validate Ldap User Settings
      operationId: validate-user-settings
      parameters:
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/LdapSettingsRequest'
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LdapValidateResponseDTO'
      x-stoplight:
        id: 5fw3lcfs79wpo
  /v1/ldap-settings/validate/group-settings:
    post:
      tags:
      - Ldap Settings
      summary: Validate Ldap Group Settings
      operationId: validate-group-settings
      parameters:
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/LdapSettingsRequest'
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LdapValidateResponseDTO'
      x-stoplight:
        id: uvedvfpk6ldue
  /v1/ldap-settings/sync-groups:
    put:
      tags:
      - Ldap Settings
      summary: Ldap Settings Sync User Groups
      operationId: ldap-settings-sync-groups
      parameters:
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
      x-stoplight:
        id: 7xnw3fstsnqe7
  /v1/ldap-settings/sync-group/{group-id}:
    get:
      tags:
      - Ldap Settings
      summary: Ldap Sync Group with user group id
      description: Ldap Sync Group with user group id
      operationId: ldap-settings-sync-group-with-id
      parameters:
      - name: group-id
        in: path
        description: UserGroup Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
      x-stoplight:
        id: el2bfbrc5mubt
  /v1/ldap-settings/search-group/{group-id}:
    get:
      tags:
      - Ldap Settings
      summary: Search Ldap groups with matching name
      operationId: ldap-settings-search-group
      parameters:
      - name: group-id
        in: path
        description: UserGroup Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LdapGroupResponseDTO'
      x-stoplight:
        id: xkgeu3g9n1ul2
  /v1/ldap-settings/link/{group-id}:
    post:
      tags:
      - Ldap Settings
      summary: Link ldap settings to userGroup
      operationId: link-ldap-settings
      parameters:
      - name: group-id
        in: path
        description: UserGroup Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/LinkSSOGroupRequest'
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupDTO'
      security:
      - x-api-key: []
      x-stoplight:
        id: 02mvlbq51owqg
      x-internal: true
  /v1/ldap-settings/unlink/{group-id}:
    post:
      tags:
      - Ldap Settings
      summary: Unlink group from ldap settings
      operationId: unlink-ldap-settings
      parameters:
      - name: group-id
        in: path
        description: UserGroup Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/UnlinkSSOGroupRequest'
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupDTO'
      x-stoplight:
        id: jsug66jtmolab
      x-internal: true
  /v1/ldap-settings/unlink/orgs/{org}/{group-id}:
    post:
      tags:
      - Ldap Settings
      summary: Unlink SSO Group from ldap-settings
      operationId: unlink-ldap-settings-org
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: group-id
        in: path
        description: UserGroup Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/UnlinkSSOGroupRequest'
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupDTO'
      security:
      - x-api-key: []
      x-stoplight:
        id: 2aznpzh987hr7
      x-internal: true
  /v1/ldap-settings/link/orgs/{org}/{group-id}:
    post:
      tags:
      - Ldap Settings
      summary: Link dap settings
      operationId: link-ldap-settings-org
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: group-id
        in: path
        description: UserGroup Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/LinkSSOGroupRequest'
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupDTO'
      security:
      - x-api-key: []
      x-stoplight:
        id: 86uren6k078bj
      x-internal: true
  /v1/ldap-settings/unlink/orgs/{org}/projects/{project}/{group-id}:
    post:
      tags:
      - Ldap Settings
      summary: Unlink SSO Group from ldap-settings
      operationId: unlink-ldap-settings-proj
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: group-id
        in: path
        description: UserGroup Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/UnlinkSSOGroupRequest'
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupDTO'
      security:
      - x-api-key: []
      x-stoplight:
        id: us9tp7838hrh2
      x-internal: true
  /v1/ldap-settings/link/orgs/{org}/projects/{project}/{group-id}:
    post:
      tags:
      - Ldap Settings
      summary: Link ldap-settings
      operationId: link-ldap-settings-proj
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: group-id
        in: path
        description: UserGroup Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/LinkSSOGroupRequest'
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupDTO'
      security:
      - x-api-key: []
      x-stoplight:
        id: dqjjk8ekm6qwl
      x-internal: true
  /v1/orgs/{org}/projects/{project}/environments:
    get:
      tags:
      - Project Environments
      summary: List Environments
      description: Returns a list of the enviornments for which you have view permissions
        in the given project.
      operationId: get-environments
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of items to return per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 20
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: environment_ids
        in: query
        description: List of Environment Identifiers
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - identifier
          - created
          - updated
      - name: is_access_list
        in: query
        description: Specifies whether the list is an access list. An access list
          is a list of environments that you are permitted to use in a pipeline.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Example environment list response
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentResponse'
                x-content-type: application/json
              examples:
                example-1:
                  value:
                  - service:
                      account: sample_account
                      identifier: example_environment
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example environment
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_environment"
                          identifier: "example_environment"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentResponse'
              examples:
                example-1:
                  value: |
                    - environment:
                        account: sample_account
                        identifier: example_environment
                        org: sample_organization
                        project: sample_project
                        name: Example_environment
                        description: This is a example environment
                        tags:
                          example-tag-1: example-tag-1-value
                          example-tag-2: example-tag-2-value
                        yaml: |
                          environment:
                            name: "Example_environment"
                            identifier: "example_environment"
                            tags: {}
                      created: 1234567890
                      updated: 1234567890
      security:
      - x-api-key: []
    post:
      tags:
      - Project Environments
      summary: Creates an Environment
      description: Creates an Environment
      operationId: create-environment
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/EnvironmentCreateRequest'
      responses:
        "201":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
              examples:
                example-1:
                  value:
                    environment:
                      account: sample_account
                      identifier: example_
                      org: sample_organization
                      project: sample_project
                      name: Example_environment
                      description: This is a example environment
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_environment"
                          identifier: "example_environment"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
              examples:
                example-1:
                  value: |
                    environment:
                      account: sample_account
                      identifier: example_environment
                      org: sample_organization
                      project: sample_project
                      name: Example_environment
                      description: This is a example environment
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_environment"
                          identifier: "example_environment"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
      security:
      - x-api-key: []
      x-internal: false
  /v1/orgs/{org}/projects/{project}/environments/{environment}:
    get:
      tags:
      - Project Environments
      summary: Retrieve a environment
      description: Retrieves the specified environment
      operationId: get-environment
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        description: Identifier field of the scoped environment entity to be used
          for the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
              examples:
                example-1:
                  value:
                    environment:
                      account: sample_account
                      identifier: example_
                      org: sample_organization
                      project: sample_project
                      name: Example_environment
                      description: This is a example environment
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_environment"
                          identifier: "example_environment"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
              examples:
                example-1:
                  value: |
                    environment:
                      account: sample_account
                      identifier: example_environment
                      org: sample_organization
                      project: sample_project
                      name: Example_environment
                      description: This is a example environment
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_environment"
                          identifier: "example_environment"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
      security:
      - x-api-key: []
    put:
      tags:
      - Project Environments
      summary: Update Environment
      description: Updates the specified environment
      operationId: update-environment
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        description: Identifier field of the scoped environment entity to be used
          for the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/EnvironmentUpdateRequest'
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
              examples:
                example-1:
                  value:
                    environment:
                      account: sample_account
                      identifier: example_
                      org: sample_organization
                      project: sample_project
                      name: Example_environment
                      description: This is a example environment
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_environment"
                          identifier: "example_environment"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
              examples:
                example-1:
                  value: |
                    environment:
                      account: sample_account
                      identifier: example_environment
                      org: sample_organization
                      project: sample_project
                      name: Example_environment
                      description: This is a example environment
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_environment"
                          identifier: "example_environment"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
      security:
      - x-api-key: []
    delete:
      tags:
      - Project Environments
      summary: Delete a Environment
      description: Deletes the requested environment
      operationId: delete-environment
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        description: Identifier field of the scoped environment entity to be used
          for the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: forceDelete
        in: query
        description: Enable this field to force delete the entity
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties: {}
                x-content-type: application/json
              examples:
                example-resp:
                  value: {}
            application/yaml:
              schema:
                type: object
                properties: {}
              examples:
                example-resp:
                  value: |
                    {}
      security:
      - x-api-key: []
  /v1/orgs/{org}/environments:
    get:
      tags:
      - Org Environments
      summary: List org scoped Environments
      description: Returns a list of the org scoped environments for which you have
        view permissions in the given org.
      operationId: get-org-scoped-environments
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of items to return per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 20
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: environment_ids
        in: query
        description: List of Environment Identifiers
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - identifier
          - created
          - updated
      - name: is_access_list
        in: query
        description: Specifies whether the list is an access list. An access list
          is a list org scoped of environments that you are permitted to use in a
          pipeline.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Example environment list response
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentResponse'
                x-content-type: application/json
              examples:
                example-1:
                  value:
                  - service:
                      account: sample_account
                      identifier: example_environment
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example environment
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_environment"
                          identifier: "example_environment"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentResponse'
              examples:
                example-1:
                  value: |
                    - environment:
                        account: sample_account
                        identifier: example_environment
                        org: sample_organization
                        project: sample_project
                        name: Example_environment
                        description: This is a example environment
                        tags:
                          example-tag-1: example-tag-1-value
                          example-tag-2: example-tag-2-value
                        yaml: |
                          environment:
                            name: "Example_environment"
                            identifier: "example_environment"
                            tags: {}
                      created: 1234567890
                      updated: 1234567890
      security:
      - x-api-key: []
    post:
      tags:
      - Org Environments
      summary: Creates an org scoped Environment
      description: Creates an org scoped Environment
      operationId: create-org-scoped-environment
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/EnvironmentCreateRequest'
      responses:
        "201":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
              examples:
                example-1:
                  value:
                    environment:
                      account: sample_account
                      identifier: example_
                      org: sample_organization
                      project: sample_project
                      name: Example_environment
                      description: This is a example environment
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_environment"
                          identifier: "example_environment"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
              examples:
                example-1:
                  value: |
                    environment:
                      account: sample_account
                      identifier: example_environment
                      org: sample_organization
                      project: sample_project
                      name: Example_environment
                      description: This is a example environment
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_environment"
                          identifier: "example_environment"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
      security:
      - x-api-key: []
      x-internal: false
  /v1/orgs/{org}/environments/{environment}:
    get:
      tags:
      - Org Environments
      summary: Retrieve an org scoped environment
      description: Retrieves the specified org scoped environment
      operationId: get-org-scoped-environment
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        description: Identifier field of the scoped environment entity to be used
          for the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
              examples:
                example-1:
                  value:
                    environment:
                      account: sample_account
                      identifier: example_
                      org: sample_organization
                      project: sample_project
                      name: Example_environment
                      description: This is a example environment
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_environment"
                          identifier: "example_environment"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
              examples:
                example-1:
                  value: |
                    environment:
                      account: sample_account
                      identifier: example_environment
                      org: sample_organization
                      project: sample_project
                      name: Example_environment
                      description: This is a example environment
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_environment"
                          identifier: "example_environment"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
      security:
      - x-api-key: []
    put:
      tags:
      - Org Environments
      summary: Update org scoped Environment
      description: Updates the specified org scoped environment
      operationId: update-org-scoped-environment
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        description: Identifier field of the scoped environment entity to be used
          for the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/EnvironmentUpdateRequest'
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
              examples:
                example-1:
                  value:
                    environment:
                      account: sample_account
                      identifier: example_
                      org: sample_organization
                      project: sample_project
                      name: Example_environment
                      description: This is a example environment
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_environment"
                          identifier: "example_environment"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
              examples:
                example-1:
                  value: |
                    environment:
                      account: sample_account
                      identifier: example_environment
                      org: sample_organization
                      project: sample_project
                      name: Example_environment
                      description: This is a example environment
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_environment"
                          identifier: "example_environment"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
      security:
      - x-api-key: []
    delete:
      tags:
      - Org Environments
      summary: Delete an org scoped Environment
      description: Deletes the requested org scoped environment
      operationId: delete-org-scoped-environment
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        description: Identifier field of the scoped environment entity to be used
          for the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: forceDelete
        in: query
        description: Enable this field to force delete the entity
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties: {}
                x-content-type: application/json
              examples:
                example-resp:
                  value: {}
            application/yaml:
              schema:
                type: object
                properties: {}
              examples:
                example-resp:
                  value: |
                    {}
      security:
      - x-api-key: []
  /v1/environments:
    get:
      tags:
      - Account Environments
      summary: List account scoped Environments
      description: Returns a list of the account scoped environments for which you
        have view permissions in the given account.
      operationId: get-account-scoped-environments
      parameters:
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of items to return per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 20
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: environment_ids
        in: query
        description: List of Environment Identifiers
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - identifier
          - created
          - updated
      - name: is_access_list
        in: query
        description: Specifies whether the list is an access list. An access list
          is a list account scoped of environments that you are permitted to use in
          a pipeline.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Example environment list response
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentResponse'
                x-content-type: application/json
              examples:
                example-1:
                  value:
                  - service:
                      account: sample_account
                      identifier: example_environment
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example environment
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_environment"
                          identifier: "example_environment"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentResponse'
              examples:
                example-1:
                  value: |
                    - environment:
                        account: sample_account
                        identifier: example_environment
                        org: sample_organization
                        project: sample_project
                        name: Example_environment
                        description: This is a example environment
                        tags:
                          example-tag-1: example-tag-1-value
                          example-tag-2: example-tag-2-value
                        yaml: |
                          environment:
                            name: "Example_environment"
                            identifier: "example_environment"
                            tags: {}
                      created: 1234567890
                      updated: 1234567890
      security:
      - x-api-key: []
    post:
      tags:
      - Account Environments
      summary: Creates an account scoped Environment
      description: Creates an account scoped Environment
      operationId: create-account-scoped-environment
      parameters:
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/EnvironmentCreateRequest'
      responses:
        "201":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
              examples:
                example-1:
                  value:
                    environment:
                      account: sample_account
                      identifier: example_
                      org: sample_organization
                      project: sample_project
                      name: Example_environment
                      description: This is a example environment
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_environment"
                          identifier: "example_environment"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
              examples:
                example-1:
                  value: |
                    environment:
                      account: sample_account
                      identifier: example_environment
                      org: sample_organization
                      project: sample_project
                      name: Example_environment
                      description: This is a example environment
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_environment"
                          identifier: "example_environment"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
      security:
      - x-api-key: []
      x-internal: false
  /v1/environments/{environment}:
    get:
      tags:
      - Account Environments
      summary: Retrieve an account scoped environment
      description: Retrieves the specified account scoped environment
      operationId: get-account-scoped-environment
      parameters:
      - name: environment
        in: path
        description: Identifier field of the scoped environment entity to be used
          for the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
              examples:
                example-1:
                  value:
                    environment:
                      account: sample_account
                      identifier: example_
                      org: sample_organization
                      project: sample_project
                      name: Example_environment
                      description: This is a example environment
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_environment"
                          identifier: "example_environment"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
              examples:
                example-1:
                  value: |
                    environment:
                      account: sample_account
                      identifier: example_environment
                      org: sample_organization
                      project: sample_project
                      name: Example_environment
                      description: This is a example environment
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_environment"
                          identifier: "example_environment"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
      security:
      - x-api-key: []
    put:
      tags:
      - Account Environments
      summary: Update account scoped Environment
      description: Updates the specified account scoped environment
      operationId: update-account-scoped-environment
      parameters:
      - name: environment
        in: path
        description: Identifier field of the scoped environment entity to be used
          for the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/EnvironmentUpdateRequest'
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
              examples:
                example-1:
                  value:
                    environment:
                      account: sample_account
                      identifier: example_
                      org: sample_organization
                      project: sample_project
                      name: Example_environment
                      description: This is a example environment
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_environment"
                          identifier: "example_environment"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
              examples:
                example-1:
                  value: |
                    environment:
                      account: sample_account
                      identifier: example_environment
                      org: sample_organization
                      project: sample_project
                      name: Example_environment
                      description: This is a example environment
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_environment"
                          identifier: "example_environment"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
      security:
      - x-api-key: []
    delete:
      tags:
      - Account Environments
      summary: Delete an account scoped Environment
      description: Deletes the requested account scoped environment
      operationId: delete-account-scoped-environment
      parameters:
      - name: environment
        in: path
        description: Identifier field of the scoped environment entity to be used
          for the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: forceDelete
        in: query
        description: Enable this field to force delete the entity
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties: {}
                x-content-type: application/json
              examples:
                example-resp:
                  value: {}
            application/yaml:
              schema:
                type: object
                properties: {}
              examples:
                example-resp:
                  value: |
                    {}
      security:
      - x-api-key: []
  /v1/orgs/{org}/projects/{project}/environments/{environment}/infrastructures:
    get:
      tags:
      - Project Infrastructures
      summary: List Infrastructures
      description: Returns a list of the infrastructure for which you have view permissions
        in the given project.
      operationId: get-infrastructures
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        description: Identifier field of the scoped environment entity to be used
          for the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of items to return per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 20
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: infra_ids
        in: query
        description: List of Infrastructure Identifiers
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - identifier
          - created
          - updated
      - name: is_access_list
        in: query
        description: Specifies whether the list is an access list. An access list
          is a list of infrastructure that you are permitted to use in a pipeline.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: service_refs
        in: query
        description: Specifies services to which scoped infra are to be fetched.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: template_identifier
        in: query
        description: The Identifier of deployment template if infrastructure is of
          type custom deployment.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: template_version
        in: query
        description: The version label of deployment template if infrastructure is
          of type custom deployment(deployment template).
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: deployment_type
        in: query
        description: Service Definition Type
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - Kubernetes
          - NativeHelm
          - Ssh
          - WinRm
          - ServerlessAwsLambda
          - AzureWebApp
          - GitOps
          - ECS
          - TAS
          - CustomDeployment
          - Elastigroup
          - Asg
          - GoogleCloudFunctions
          - AwsLambda
          - AWS_SAM
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Example infrastructure list response
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InfrastructureResponse'
                x-content-type: application/json
              examples:
                example-1:
                  value:
                  - infrastructure:
                      account: sample_account
                      identifier: example_infrastructure
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example infrastructure
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        infrastructure:
                          name: "Example_infrastructure"
                          identifier: "example_infrastructure"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InfrastructureResponse'
              examples:
                example-1:
                  value: |
                    - infrastructure:
                        account: sample_account
                        identifier: example_infrastructure
                        org: sample_organization
                        project: sample_project
                        name: Example_infrastructure
                        description: This is a example infrastructure
                        tags:
                          example-tag-1: example-tag-1-value
                          example-tag-2: example-tag-2-value
                        yaml: |
                          infrastructure:
                            name: "Example_infrastructure"
                            identifier: "example_infrastructure"
                            tags: {}
                      created: 1234567890
                      updated: 1234567890
      security:
      - x-api-key: []
    post:
      tags:
      - Project Infrastructures
      summary: Creates an Infrastructure
      description: Creates an Infrastructure
      operationId: create-infrastructure
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        description: Identifier field of the scoped environment entity to be used
          for the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/InfrastructureCreateRequest'
      responses:
        "201":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfrastructureResponse'
              examples:
                example-1:
                  value:
                    infrastructure:
                      account: sample_account
                      identifier: example_
                      org: sample_organization
                      project: sample_project
                      name: Example_infrastructure
                      description: This is a example infrastructure
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_infrastructure"
                          identifier: "example_infrastructure"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/InfrastructureResponse'
              examples:
                example-1:
                  value: |
                    infrastructure:
                      account: sample_account
                      identifier: example_infrastructure
                      org: sample_organization
                      project: sample_project
                      name: Example_environment
                      description: This is a example infrastructure
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_infrastructure"
                          identifier: "example_infrastructure"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
      security:
      - x-api-key: []
      x-internal: false
  /v1/orgs/{org}/projects/{project}/environments/{environment}/infrastructures/{infrastructure-definition}:
    get:
      tags:
      - Project Infrastructures
      summary: Retrieve a infrastructure
      description: Retrieves the specified infrastructure
      operationId: get-infrastructure
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        description: Identifier field of the scoped environment entity to be used
          for the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: infrastructure-definition
        in: path
        description: Identifier field of the scoped infrastructure definition entity
          to be used in the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfrastructureResponse'
              examples:
                example-1:
                  value:
                    infrastructure:
                      account: sample_account
                      identifier: example_
                      org: sample_organization
                      project: sample_project
                      name: Example_infrastructure
                      description: This is a example infrastructure
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_infrastructure"
                          identifier: "example_infrastructure"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/InfrastructureResponse'
              examples:
                example-1:
                  value: |
                    infrastructure:
                      account: sample_account
                      identifier: example_infrastructure
                      org: sample_organization
                      project: sample_project
                      name: Example_environment
                      description: This is a example infrastructure
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_infrastructure"
                          identifier: "example_infrastructure"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
      security:
      - x-api-key: []
    put:
      tags:
      - Project Infrastructures
      summary: Update Infrastructure
      description: Updates the specified infrastructure
      operationId: update-infrastructure
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        description: Identifier field of the scoped environment entity to be used
          for the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: infrastructure-definition
        in: path
        description: Identifier field of the scoped infrastructure definition entity
          to be used in the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/InfrastructureUpdateRequest'
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfrastructureResponse'
              examples:
                example-1:
                  value:
                    infrastructure:
                      account: sample_account
                      identifier: example_
                      org: sample_organization
                      project: sample_project
                      name: Example_infrastructure
                      description: This is a example infrastructure
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_infrastructure"
                          identifier: "example_infrastructure"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/InfrastructureResponse'
              examples:
                example-1:
                  value: |
                    infrastructure:
                      account: sample_account
                      identifier: example_infrastructure
                      org: sample_organization
                      project: sample_project
                      name: Example_environment
                      description: This is a example infrastructure
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_infrastructure"
                          identifier: "example_infrastructure"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
      security:
      - x-api-key: []
    delete:
      tags:
      - Project Infrastructures
      summary: Delete a Infrastructure
      description: Deletes the requested environment
      operationId: delete-infrastructure
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Identifier field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        description: Identifier field of the scoped environment entity to be used
          for the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: infrastructure-definition
        in: path
        description: Identifier field of the scoped infrastructure definition entity
          to be used in the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: forceDelete
        in: query
        description: Enable this field to force delete the entity
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties: {}
                x-content-type: application/json
              examples:
                example-resp:
                  value: {}
            application/yaml:
              schema:
                type: object
                properties: {}
              examples:
                example-resp:
                  value: |
                    {}
      security:
      - x-api-key: []
  /v1/orgs/{org}/environments/{environment}/infrastructures:
    get:
      tags:
      - Org Infrastructures
      summary: List org scoped Infrastructures
      description: Returns a list of the org scoped infrastructures for which you
        have view permissions in the given org.
      operationId: get-org-scoped-infrastructures
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        description: Identifier field of the scoped environment entity to be used
          for the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of items to return per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 20
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: infra_ids
        in: query
        description: List of Infrastructure Identifiers
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - identifier
          - created
          - updated
      - name: is_access_list
        in: query
        description: Specifies whether the list is an access list. An access list
          is a list org scoped of infrastructure that you are permitted to use in
          a pipeline.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: service_refs
        in: query
        description: Specifies services to which scoped infra are to be fetched.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: template_identifier
        in: query
        description: The Identifier of deployment template if infrastructure is of
          type custom deployment.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: template_version
        in: query
        description: The version label of deployment template if infrastructure is
          of type custom deployment(deployment template).
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: deployment_type
        in: query
        description: Service Definition Type
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - Kubernetes
          - NativeHelm
          - Ssh
          - WinRm
          - ServerlessAwsLambda
          - AzureWebApp
          - GitOps
          - ECS
          - TAS
          - CustomDeployment
          - Elastigroup
          - Asg
          - GoogleCloudFunctions
          - AwsLambda
          - AWS_SAM
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Example infrastructure list response
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InfrastructureResponse'
                x-content-type: application/json
              examples:
                example-1:
                  value:
                  - infrastructure:
                      account: sample_account
                      identifier: example_infrastructure
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example infrastructure
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        infrastructure:
                          name: "Example_infrastructure"
                          identifier: "example_infrastructure"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InfrastructureResponse'
              examples:
                example-1:
                  value: |
                    - infrastructure:
                        account: sample_account
                        identifier: example_infrastructure
                        org: sample_organization
                        project: sample_project
                        name: Example_infrastructure
                        description: This is a example infrastructure
                        tags:
                          example-tag-1: example-tag-1-value
                          example-tag-2: example-tag-2-value
                        yaml: |
                          infrastructure:
                            name: "Example_infrastructure"
                            identifier: "example_infrastructure"
                            tags: {}
                      created: 1234567890
                      updated: 1234567890
      security:
      - x-api-key: []
    post:
      tags:
      - Org Infrastructures
      summary: Creates an org scoped Infrastructure
      description: Creates an org scoped Infrastructure
      operationId: create-org-scoped-infrastructure
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        description: Identifier field of the scoped environment entity to be used
          for the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/InfrastructureCreateRequest'
      responses:
        "201":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfrastructureResponse'
              examples:
                example-1:
                  value:
                    infrastructure:
                      account: sample_account
                      identifier: example_
                      org: sample_organization
                      project: sample_project
                      name: Example_infrastructure
                      description: This is a example infrastructure
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_infrastructure"
                          identifier: "example_infrastructure"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/InfrastructureResponse'
              examples:
                example-1:
                  value: |
                    infrastructure:
                      account: sample_account
                      identifier: example_infrastructure
                      org: sample_organization
                      project: sample_project
                      name: Example_environment
                      description: This is a example infrastructure
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_infrastructure"
                          identifier: "example_infrastructure"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
      security:
      - x-api-key: []
      x-internal: false
  /v1/orgs/{org}/environments/{environment}/infrastructures/{infrastructure-definition}:
    get:
      tags:
      - Org Infrastructures
      summary: Retrieve an org scoped Infrastructure
      description: Retrieves the specified org scoped infrastructure
      operationId: get-org-scoped-infrastructure
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        description: Identifier field of the scoped environment entity to be used
          for the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: infrastructure-definition
        in: path
        description: Identifier field of the scoped infrastructure definition entity
          to be used in the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfrastructureResponse'
              examples:
                example-1:
                  value:
                    infrastructure:
                      account: sample_account
                      identifier: example_
                      org: sample_organization
                      project: sample_project
                      name: Example_infrastructure
                      description: This is a example infrastructure
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_infrastructure"
                          identifier: "example_infrastructure"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/InfrastructureResponse'
              examples:
                example-1:
                  value: |
                    infrastructure:
                      account: sample_account
                      identifier: example_infrastructure
                      org: sample_organization
                      project: sample_project
                      name: Example_environment
                      description: This is a example infrastructure
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_infrastructure"
                          identifier: "example_infrastructure"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
      security:
      - x-api-key: []
    put:
      tags:
      - Org Infrastructures
      summary: Update org scoped Infrastructure
      description: Updates the specified org scoped infrastructure
      operationId: update-org-scoped-infrastructure
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        description: Identifier field of the scoped environment entity to be used
          for the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: infrastructure-definition
        in: path
        description: Identifier field of the scoped infrastructure definition entity
          to be used in the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/InfrastructureUpdateRequest'
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfrastructureResponse'
              examples:
                example-1:
                  value:
                    infrastructure:
                      account: sample_account
                      identifier: example_
                      org: sample_organization
                      project: sample_project
                      name: Example_infrastructure
                      description: This is a example infrastructure
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_infrastructure"
                          identifier: "example_infrastructure"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/InfrastructureResponse'
              examples:
                example-1:
                  value: |
                    infrastructure:
                      account: sample_account
                      identifier: example_infrastructure
                      org: sample_organization
                      project: sample_project
                      name: Example_environment
                      description: This is a example infrastructure
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_infrastructure"
                          identifier: "example_infrastructure"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
      security:
      - x-api-key: []
    delete:
      tags:
      - Org Infrastructures
      summary: Delete an org scoped Infrastructure
      description: Deletes the requested org scoped infrastructure
      operationId: delete-org-scoped-infrastructure
      parameters:
      - name: org
        in: path
        description: Identifier field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        description: Identifier field of the scoped environment entity to be used
          for the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: infrastructure-definition
        in: path
        description: Identifier field of the scoped infrastructure definition entity
          to be used in the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: forceDelete
        in: query
        description: Enable this field to force delete the entity
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties: {}
                x-content-type: application/json
              examples:
                example-resp:
                  value: {}
            application/yaml:
              schema:
                type: object
                properties: {}
              examples:
                example-resp:
                  value: |
                    {}
      security:
      - x-api-key: []
  /v1/environments/{environment}/infrastructures:
    get:
      tags:
      - Account Infrastructures
      summary: List account scoped Infrastructures
      description: Returns a list of the account scoped infrastructures for which
        you have view permissions in the given account.
      operationId: get-account-scoped-infrastructures
      parameters:
      - name: environment
        in: path
        description: Identifier field of the scoped environment entity to be used
          for the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of items to return per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 20
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: infra_ids
        in: query
        description: List of Infrastructure Identifiers
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - identifier
          - created
          - updated
      - name: is_access_list
        in: query
        description: Specifies whether the list is an access list. An access list
          is a list account scoped of infrastructures that you are permitted to use
          in a pipeline.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: service_refs
        in: query
        description: Specifies services to which scoped infra are to be fetched.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: template_identifier
        in: query
        description: The Identifier of deployment template if infrastructure is of
          type custom deployment.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: template_version
        in: query
        description: The version label of deployment template if infrastructure is
          of type custom deployment(deployment template).
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: deployment_type
        in: query
        description: Service Definition Type
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - Kubernetes
          - NativeHelm
          - Ssh
          - WinRm
          - ServerlessAwsLambda
          - AzureWebApp
          - GitOps
          - ECS
          - TAS
          - CustomDeployment
          - Elastigroup
          - Asg
          - GoogleCloudFunctions
          - AwsLambda
          - AWS_SAM
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Example infrastructure list response
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InfrastructureResponse'
                x-content-type: application/json
              examples:
                example-1:
                  value:
                  - infrastructure:
                      account: sample_account
                      identifier: example_infrastructure
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example infrastructure
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        infrastructure:
                          name: "Example_infrastructure"
                          identifier: "example_infrastructure"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InfrastructureResponse'
              examples:
                example-1:
                  value: |
                    - infrastructure:
                        account: sample_account
                        identifier: example_infrastructure
                        org: sample_organization
                        project: sample_project
                        name: Example_infrastructure
                        description: This is a example infrastructure
                        tags:
                          example-tag-1: example-tag-1-value
                          example-tag-2: example-tag-2-value
                        yaml: |
                          infrastructure:
                            name: "Example_infrastructure"
                            identifier: "example_infrastructure"
                            tags: {}
                      created: 1234567890
                      updated: 1234567890
      security:
      - x-api-key: []
    post:
      tags:
      - Account Infrastructures
      summary: Creates an account scoped Infrastructure
      description: Creates an account scoped Infrastructure
      operationId: create-account-scoped-infrastructure
      parameters:
      - name: environment
        in: path
        description: Identifier field of the scoped environment entity to be used
          for the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/InfrastructureCreateRequest'
      responses:
        "201":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfrastructureResponse'
              examples:
                example-1:
                  value:
                    infrastructure:
                      account: sample_account
                      identifier: example_
                      org: sample_organization
                      project: sample_project
                      name: Example_infrastructure
                      description: This is a example infrastructure
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_infrastructure"
                          identifier: "example_infrastructure"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/InfrastructureResponse'
              examples:
                example-1:
                  value: |
                    infrastructure:
                      account: sample_account
                      identifier: example_infrastructure
                      org: sample_organization
                      project: sample_project
                      name: Example_environment
                      description: This is a example infrastructure
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_infrastructure"
                          identifier: "example_infrastructure"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
      security:
      - x-api-key: []
      x-internal: false
  /v1/environments/{environment}/infrastructures/{infrastructure-definition}:
    get:
      tags:
      - Account Infrastructures
      summary: Retrieve an account scoped Infrastructure
      description: Retrieves the specified account scoped infrastructure
      operationId: get-account-scoped-infrastructure
      parameters:
      - name: environment
        in: path
        description: Identifier field of the scoped environment entity to be used
          for the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: infrastructure-definition
        in: path
        description: Identifier field of the scoped infrastructure definition entity
          to be used in the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfrastructureResponse'
              examples:
                example-1:
                  value:
                    infrastructure:
                      account: sample_account
                      identifier: example_
                      org: sample_organization
                      project: sample_project
                      name: Example_infrastructure
                      description: This is a example infrastructure
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_infrastructure"
                          identifier: "example_infrastructure"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/InfrastructureResponse'
              examples:
                example-1:
                  value: |
                    infrastructure:
                      account: sample_account
                      identifier: example_infrastructure
                      org: sample_organization
                      project: sample_project
                      name: Example_environment
                      description: This is a example infrastructure
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_infrastructure"
                          identifier: "example_infrastructure"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
      security:
      - x-api-key: []
    put:
      tags:
      - Account Infrastructures
      summary: Update account scoped Infrastructure
      description: Updates the specified account scoped infrastructure
      operationId: update-account-scoped-infrastructure
      parameters:
      - name: environment
        in: path
        description: Identifier field of the scoped environment entity to be used
          for the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: infrastructure-definition
        in: path
        description: Identifier field of the scoped infrastructure definition entity
          to be used in the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/InfrastructureUpdateRequest'
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfrastructureResponse'
              examples:
                example-1:
                  value:
                    infrastructure:
                      account: sample_account
                      identifier: example_
                      org: sample_organization
                      project: sample_project
                      name: Example_infrastructure
                      description: This is a example infrastructure
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_infrastructure"
                          identifier: "example_infrastructure"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/InfrastructureResponse'
              examples:
                example-1:
                  value: |
                    infrastructure:
                      account: sample_account
                      identifier: example_infrastructure
                      org: sample_organization
                      project: sample_project
                      name: Example_environment
                      description: This is a example infrastructure
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: |
                        environment:
                          name: "Example_infrastructure"
                          identifier: "example_infrastructure"
                          tags: {}
                    created: 1234567890
                    updated: 1234567890
      security:
      - x-api-key: []
    delete:
      tags:
      - Account Infrastructures
      summary: Delete an account scoped Infrastructure
      description: Deletes the requested account scoped infrastructure
      operationId: delete-account-scoped-infrastructure
      parameters:
      - name: environment
        in: path
        description: Identifier field of the scoped environment entity to be used
          for the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: infrastructure-definition
        in: path
        description: Identifier field of the scoped infrastructure definition entity
          to be used in the selected operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: forceDelete
        in: query
        description: Enable this field to force delete the entity
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties: {}
                x-content-type: application/json
              examples:
                example-resp:
                  value: {}
            application/yaml:
              schema:
                type: object
                properties: {}
              examples:
                example-resp:
                  value: |
                    {}
      security:
      - x-api-key: []
  /v1/ldap-settings/iterations:
    post:
      tags:
      - Ldap Settings
      summary: Ldap Settings iterations
      operationId: ldap-settings-iterations
      parameters:
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/CronExpressionRequest'
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LdapSettingsIterations'
      security:
      - x-api-key: []
      x-stoplight:
        id: o0f3p82mazw6a
  /v1/ldap-settings/ldap-login-test:
    post:
      tags:
      - Ldap Settings
      summary: Ldap login test
      operationId: ldap-settings-ldap-login-test
      parameters:
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/LdapTestLoginRequest'
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LdapTestLoginResponseDTO'
      security:
      - x-api-key: []
      x-stoplight:
        id: xy60v4zxek7xz
      x-internal: false
  /v1/gitx-webhook-events/{gitx-webhook-event}/validation-info:
    get:
      tags:
      - GitX Webhooks Event File Validation
      summary: Get file validations for a given event identifier
      description: Get file validations for a given event identifier
      operationId: gitx-webhook-event-file-validation
      parameters:
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: gitx-webhook-event
        in: path
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of items to return per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 20
      responses:
        "200":
          description: Get GitX Webhook Event File Validation Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetGitXWebhookEventFileValidationResponse'
                x-content-type: application/json
      security:
      - x-api-key: []
      x-internal: true
  /v1/licenseUsageActivity/{accountIdentifier}:
    post:
      tags:
      - License Usage Data By Account
      summary: Get License Usage Data for an account for a given time range
      operationId: license-usage-activity
      parameters:
      - name: accountIdentifier
        in: path
        description: Account Identifier for the Entity.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: startTime
        in: query
        description: Start Time of the Interval for the Entity.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: endTime
        in: query
        description: End Time of the Interval for the Entity.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: rollup
        in: query
        description: Rollup all credit usages in the specified timestamp to a single
          value.
        required: true
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        description: Details of the filters applied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LicenseUsageActivityFilterPropertiesDTO'
        required: true
      responses:
        "200":
          description: Response for License Usage Activity
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LicenseUsageActivity'
                x-content-type: application/json
        "400":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties: {}
                x-content-type: application/json
      security:
      - bearerAuth: []
      x-internal: false
components:
  schemas:
    LicenseUsageActivityFilterPropertiesDTO:
      type: object
      properties:
        organizationIdentifiers:
          type: array
          description: This is the list of organization Identifiers on which the filter
            will be applied.
          items:
            type: string
        projectIdentifiers:
          type: array
          description: This is the list of project Identifiers on which the filter
            will be applied.
          items:
            type: string
        pipelineIdentifiers:
          type: array
          description: This is the list of pipeline Identifiers on which the filter
            will be applied.
          items:
            type: string
        resourceClasses:
          type: array
          description: This is the list of resource classes on which the filter will
            be applied.
          items:
            type: string
        moduleType:
          $ref: '#/components/schemas/ModuleType'
    LicenseUsageActivity:
      required:
      - credits
      - timestamp
      type: object
      properties:
        timestamp:
          type: integer
          description: Timestamp for the activity response
          format: int64
        credits:
          type: array
          items:
            $ref: '#/components/schemas/CreditUsage'
      example:
        credits:
        - totalCredits: 6
          ciOsType: ciOsType
        - totalCredits: 6
          ciOsType: ciOsType
        timestamp: 0
    CreditUsage:
      required:
      - ciOsType
      - totalCredits
      type: object
      properties:
        totalCredits:
          type: integer
          description: Total number of credits used
        ciOsType:
          type: string
          description: Type of CI/OS
      example:
        totalCredits: 6
        ciOsType: ciOsType
    CreditOverUsage:
      required:
      - moduleType
      - overUsageCount
      type: object
      properties:
        overUsageCount:
          type: integer
          description: Total number of overuse credits
        moduleType:
          type: string
          description: Module Type for which the credits' overusage is being captured
    Service:
      title: Service
      required:
      - identifier
      - name
      type: object
      properties:
        account:
          maxLength: 128
          minLength: 1
          type: string
          description: Account Identifier
        identifier:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$"
          type: string
          description: Identifier of the Service Request.
        org:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$"
          type: string
          description: Organization Identifier for the Entity.
        project:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$"
          type: string
          description: Project Identifier for the Entity.
        name:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_ ]{0,127}$"
          type: string
          description: Name of the Service Request.
        description:
          maxLength: 1024
          type: string
          description: Description of the entity
        tags:
          maxProperties: 128
          type: object
          additionalProperties:
            type: string
          description: Service tags
        yaml:
          type: string
          description: Yaml related to service
        harness_version:
          type: string
          description: version of harness yaml
      description: This is the Service entity defined in Harness
      example:
        identifier: identifier
        org: org
        name: name
        project: project
        description: description
        harness_version: harness_version
        account: account
        tags:
          key: tags
        yaml: yaml
      x-examples:
        example-1:
          account: sample_account
          identifier: example_service
          org: sample_organization
          project: sample_project
          name: Example_service
          description: This is a example service
          tags:
            example-tag-1: example-tag-1-value
            example-tag-2: example-tag-2-value
          yaml: |
            service:
              name: "Example_service"
              identifier: "example_service"
              tags: {}
    Environment:
      title: Environment
      required:
      - identifier
      - name
      type: object
      properties:
        account:
          maxLength: 128
          minLength: 1
          type: string
          description: Account Identifier
        identifier:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$"
          type: string
          description: Identifier of the Environment Request.
        org:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$"
          type: string
          description: Organization Identifier for the Entity.
        project:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$"
          type: string
          description: Project Identifier for the Entity.
        name:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_ ]{0,127}$"
          type: string
          description: Name of the Environment Request.
        description:
          maxLength: 1024
          type: string
          description: Description of the entity
        tags:
          maxProperties: 128
          type: object
          additionalProperties:
            type: string
          description: Environment tags
        harness_version:
          type: string
          description: version of harness yaml
        yaml:
          type: string
          description: Yaml related to environment
      description: This is the Environment entity defined in Harness
      example:
        identifier: identifier
        org: org
        name: name
        project: project
        description: description
        harness_version: harness_version
        account: account
        tags:
          key: tags
        yaml: yaml
      x-examples:
        example-1:
          account: sample_account
          identifier: example_environment
          org: sample_organization
          project: sample_project
          name: Example_environment
          description: This is a example environment
          tags:
            example-tag-1: example-tag-1-value
            example-tag-2: example-tag-2-value
          yaml: |
            environment:
              name: "Example_environment"
              identifier: "example_environment"
              tags: {}
      x-stoplight:
        id: t0gj2z2q9pwsn
    Infrastructure:
      title: Infrastructure
      required:
      - identifier
      - name
      - type
      type: object
      properties:
        account:
          maxLength: 128
          minLength: 1
          type: string
          description: Account Identifier
        identifier:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$"
          type: string
          description: Identifier of the Environment Request.
        org:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$"
          type: string
          description: Organization Identifier for the Entity.
        project:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$"
          type: string
          description: Project Identifier for the Entity.
        name:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_ ]{0,127}$"
          type: string
          description: Name of the Infrastructure.
        environment:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_ ]{0,127}$"
          type: string
          description: Name of the parent Environment.
        type:
          $ref: '#/components/schemas/InfrastructureType'
        description:
          maxLength: 1024
          type: string
          description: Description of the entity
        tags:
          maxProperties: 128
          type: object
          additionalProperties:
            type: string
          description: Infrastructure tags
        harness_version:
          type: string
          description: version of harness yaml
        yaml:
          type: string
          description: Yaml related to infrastructure
      description: This is the Infrastructure entity defined in Harness
      example:
        identifier: identifier
        environment: environment
        org: org
        name: name
        project: project
        description: description
        type: KUBERNETES_DIRECT
        harness_version: harness_version
        account: account
        tags:
          key: tags
        yaml: yaml
      x-examples:
        example-1:
          account: sample_infrastructure
          identifier: example_infrastructure
          org: sample_organization
          project: sample_project
          name: Example_environment
          description: This is a example infrastructure
          tags:
            example-tag-1: example-tag-1-value
            example-tag-2: example-tag-2-value
          yaml: |
            environment:
              name: "Example_infrastructure"
              identifier: "example_infrastructure"
              tags: {}
    FavoriteDTO:
      title: FavoriteDTO
      type: object
      properties:
        org:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$"
          type: string
          description: Organization Identifier for the Entity.
        project:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$"
          type: string
          description: Project Identifier for the Entity.
        user_id:
          maxLength: 128
          minLength: 1
          type: string
          description: Identifier of the user.
        module:
          $ref: '#/components/schemas/ModuleType'
        resource_type:
          $ref: '#/components/schemas/FavoritesResourceType'
        resource_id:
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$"
          type: string
          description: Resource Identifier of the Entity.
      description: This is the favorite entity defined in Harness
      example:
        org: org
        user_id: user_id
        module: CD
        resource_type: CONNECTOR
        project: project
        resource_id: resource_id
      x-examples:
        example-1:
          org: sample_organization
          project: sample_project
          user_id: example_userId
          module: example_module
          resource_type: example_resourceType
          resource_id: example_resourceId
    FavoriteResponse:
      title: FavoriteResponse
      type: object
      properties:
        Favorite:
          $ref: '#/components/schemas/FavoriteDTO'
        created:
          type: integer
          description: Creation timestamp for favorite.
          format: int64
      example:
        Favorite:
          org: org
          user_id: user_id
          module: CD
          resource_type: CONNECTOR
          project: project
          resource_id: resource_id
        created: 0
      x-examples:
        example-1:
          FavoriteDTO:
            user_id: example_userId
            org: sample_organization
            project: sample_project
            resource_type: Example_resourceType
            resource_id: This is a example resource
          created: 1234567890
    ServiceResponse:
      title: ServiceResponse
      type: object
      properties:
        service:
          $ref: '#/components/schemas/Service'
        created:
          type: integer
          description: Creation timestamp for Service.
          format: int64
        updated:
          type: integer
          description: Last modification timestamp for Service.
          format: int64
      description: Default response when a service is returned
      example:
        service:
          identifier: identifier
          org: org
          name: name
          project: project
          description: description
          harness_version: harness_version
          account: account
          tags:
            key: tags
          yaml: yaml
        created: 0
        updated: 6
      x-examples:
        example-1:
          service:
            account: sample_account
            identifier: example_service
            org: sample_organization
            project: sample_project
            name: Example_service
            description: This is a example service
            tags:
              example-tag-1: example-tag-1-value
              example-tag-2: example-tag-2-value
            yaml: |
              service:
                name: "Example_service"
                identifier: "example_service"
                tags: {}
          created: 1234567890
          updated: 1234567890
    ServiceCreateRequest:
      title: ServiceCreateRequest
      required:
      - identifier
      - name
      type: object
      properties:
        identifier:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$"
          type: string
          description: Identifier of the Service
        name:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_ ]{0,127}$"
          type: string
          description: Name of the Service
        description:
          maxLength: 1024
          type: string
          description: Description of the entity
        tags:
          maxProperties: 128
          type: object
          additionalProperties:
            type: string
          description: Service tags
        yaml:
          type: string
          description: YAML for the Service Request
        harness_version:
          type: string
          description: version of harness yaml
      description: 'Service Request Body '
      x-examples:
        example-1:
          identifier: example_service
          name: Example_service
          description: This is a example service
          tags:
            example-tag-1: example-tag-1-value
            example-tag-2: example-tag-2-value
          yaml: |
            service:
              name: "Example_service"
              identifier: "example_service"
              tags: {}
    ServiceUpdateRequest:
      title: ServiceUpdateRequest
      required:
      - identifier
      - name
      type: object
      properties:
        identifier:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$"
          type: string
          description: Identifier of the Service
        name:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_ ]{0,127}$"
          type: string
          description: Name of the Service
        description:
          maxLength: 1024
          type: string
          description: Description of the entity
        tags:
          maxProperties: 128
          type: object
          additionalProperties:
            type: string
          description: Service tags
        yaml:
          type: string
          description: YAML for the Service Request
        harness_version:
          type: string
          description: version of harness yaml
      description: 'Service Update Request Body '
      x-examples:
        example-1:
          identifier: example_service
          name: Example_service
          description: This is a example service
          tags:
            example-tag-1: example-tag-1-value
            example-tag-2: example-tag-2-value
          yaml: |
            service:
              name: "Example_service"
              identifier: "example_service"
              tags: {}
    EnvironmentResponse:
      title: EnvironmentResponse
      type: object
      properties:
        environment:
          $ref: '#/components/schemas/Environment'
        created:
          type: integer
          description: Creation timestamp for environment.
          format: int64
        updated:
          type: integer
          description: Last modification timestamp for environment.
          format: int64
      description: Default response when a environment is returned
      example:
        environment:
          identifier: identifier
          org: org
          name: name
          project: project
          description: description
          harness_version: harness_version
          account: account
          tags:
            key: tags
          yaml: yaml
        created: 0
        updated: 6
      x-examples:
        example-1:
          service:
            account: sample_account
            identifier: example_environment
            org: sample_organization
            project: sample_project
            name: Example_environment
            description: This is a example environment
            tags:
              example-tag-1: example-tag-1-value
              example-tag-2: example-tag-2-value
            yaml: |
              service:
                name: "Example_environment"
                identifier: "example_environment"
                tags: {}
          created: 1234567890
          updated: 1234567890
      x-stoplight:
        id: 8wkghgenuyufw
    EnvironmentCreateRequest:
      title: EnvironmentCreateRequest
      required:
      - identifier
      - name
      - type
      type: object
      properties:
        identifier:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$"
          type: string
          description: Identifier of the Environment
        name:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_ ]{0,127}$"
          type: string
          description: Name of the Environment
        description:
          maxLength: 1024
          type: string
          description: Description of the Environment
        tags:
          maxProperties: 128
          type: object
          additionalProperties:
            type: string
          description: Environment tags
        type:
          $ref: '#/components/schemas/EnvironmentType'
        color:
          type: string
          description: Environment color
        harness_version:
          type: string
          description: version of harness yaml
        yaml:
          type: string
          description: YAML for the Environment Request
      description: 'Environment Request Body '
      x-examples:
        example-1:
          identifier: example_environment
          name: Example_environment
          description: This is a example environment
          tags:
            example-tag-1: example-tag-1-value
            example-tag-2: example-tag-2-value
          yaml: |
            service:
              name: "Example_environment"
              identifier: "example_environment"
              tags: {}
      x-stoplight:
        id: v1x9is61l27ki
    EnvironmentUpdateRequest:
      title: EnvironmentUpdateRequest
      required:
      - identifier
      - name
      - type
      type: object
      properties:
        identifier:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$"
          type: string
          description: Identifier of the Environment
        name:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_ ]{0,127}$"
          type: string
          description: Name of the Environment
        description:
          maxLength: 1024
          type: string
          description: Description of the Environment
        tags:
          maxProperties: 128
          type: object
          additionalProperties:
            type: string
          description: Environment tags
        type:
          $ref: '#/components/schemas/EnvironmentType'
        color:
          type: string
          description: Environment color
        harness_version:
          type: string
          description: version of harness yaml
        yaml:
          type: string
          description: YAML for the Environment Request
      description: 'Environment Update Request Body '
      x-examples:
        example-1:
          identifier: example_environment
          name: Example_environment
          description: This is a example environment
          tags:
            example-tag-1: example-tag-1-value
            example-tag-2: example-tag-2-value
          yaml: |
            service:
              name: "Example_environment"
              identifier: "example_environment"
              tags: {}
      x-stoplight:
        id: stztl057sv571
    InfrastructureResponse:
      title: InfrastructureResponse
      type: object
      properties:
        infrastructure:
          $ref: '#/components/schemas/Infrastructure'
        created:
          type: integer
          description: Creation timestamp for infrastructure.
          format: int64
        updated:
          type: integer
          description: Last modification timestamp for infrastructure.
          format: int64
      description: Default response when a infrastructure is returned
      example:
        infrastructure:
          identifier: identifier
          environment: environment
          org: org
          name: name
          project: project
          description: description
          type: KUBERNETES_DIRECT
          harness_version: harness_version
          account: account
          tags:
            key: tags
          yaml: yaml
        created: 0
        updated: 6
      x-examples:
        example-1:
          infrastructure:
            account: sample_account
            identifier: example_infrastructure
            org: sample_organization
            project: sample_project
            name: Example_infrastructure
            description: This is a example infrastructure
            tags:
              example-tag-1: example-tag-1-value
              example-tag-2: example-tag-2-value
            yaml: |
              service:
                name: "Example_infrastructure"
                identifier: "example_infrastructure"
                tags: {}
          created: 1234567890
          updated: 1234567890
    InfrastructureCreateRequest:
      title: InfrastructureCreateRequest
      required:
      - identifier
      - name
      - type
      - yaml
      type: object
      properties:
        identifier:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$"
          type: string
          description: Identifier of the Infrastructure
        name:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_ ]{0,127}$"
          type: string
          description: Name of the Infrastructure
        description:
          maxLength: 1024
          type: string
          description: Description of the Infrastructure
        tags:
          maxProperties: 128
          type: object
          additionalProperties:
            type: string
          description: Infrastructure tags
        type:
          $ref: '#/components/schemas/InfrastructureType'
        harness_version:
          type: string
          description: version of harness yaml
        yaml:
          type: string
          description: YAML for the Infrastructure Request
      description: 'Infrastructure Request Body '
      x-examples:
        example-1:
          identifier: example_infrastructure
          name: Example_infrastructure
          description: This is a example infrastructure
          tags:
            example-tag-1: example-tag-1-value
            example-tag-2: example-tag-2-value
          yaml: |
            infrastructure:
              name: "Example_infrastructure"
              identifier: "example_infrastructure"
              tags: {}
    InfrastructureUpdateRequest:
      title: InfrastructureUpdateRequest
      required:
      - identifier
      - name
      - type
      - yaml
      type: object
      properties:
        identifier:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$"
          type: string
          description: Identifier of the Infrastructure
        name:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_ ]{0,127}$"
          type: string
          description: Name of the Infrastructure
        description:
          maxLength: 1024
          type: string
          description: Description of the Infrastructure
        tags:
          maxProperties: 128
          type: object
          additionalProperties:
            type: string
          description: Infrastructure tags
        type:
          $ref: '#/components/schemas/InfrastructureType'
        harness_version:
          type: string
          description: version of harness yaml
        yaml:
          type: string
          description: YAML for the Infrastructure Request
      description: 'Infrastructure Update Request Body '
      x-examples:
        example-1:
          identifier: example_infrastructure
          name: Example_infrastructure
          description: This is a example infrastructure
          tags:
            example-tag-1: example-tag-1-value
            example-tag-2: example-tag-2-value
          yaml: |
            infrastructure:
              name: "Example_infrastructure"
              identifier: "example_infrastructure"
              tags: {}
    CreateOrganizationRequest:
      required:
      - org
      type: object
      properties:
        org:
          $ref: '#/components/schemas/Organization'
    Organization:
      required:
      - identifier
      - name
      type: object
      properties:
        identifier:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$"
          type: string
          description: Organization identifier
        name:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_ ]{0,127}$"
          type: string
          description: Organization name
        description:
          maxLength: 1024
          type: string
          description: Organization description
        tags:
          maxProperties: 128
          type: object
          additionalProperties:
            type: string
          description: Organization tags
      description: Organization model
      example:
        identifier: identifier
        name: name
        description: description
        tags:
          key: tags
    ModuleType:
      type: string
      description: Type of Modules
      enum:
      - CD
      - CI
      - CV
      - CF
      - CE
      - STO
      - CORE
      - PMS
      - TEMPLATESERVICE
      - GOVERNANCE
      - CHAOS
      - CET
      - IDP
      - SSCA
    FavoritesResourceType:
      type: string
      enum:
      - CONNECTOR
      - DELEGATE
      - PIPELINE
      - SECRET
      - PROJECT
      - IDPENTITY
      - IDPFLOWS
    EnvironmentType:
      type: string
      enum:
      - PreProduction
      - Production
    InfrastructureType:
      type: string
      enum:
      - KUBERNETES_DIRECT
      - KUBERNETES_GCP
      - KUBERNETES_AZURE
      - PDC
      - SSH_WINRM_AZURE
      - SERVERLESS_AWS_LAMBDA
      - AZURE_WEB_APP
      - SSH_WINRM_AWS
      - CUSTOM_DEPLOYMENT
      - ECS
      - ELASTIGROUP
      - TAS
      - ASG
      - GOOGLE_CLOUD_FUNCTIONS
      - AWS_SAM
      - AWS_LAMBDA
      - KUBERNETES_AWS
      - KUBERNETES_RANCHER
    CreateProjectRequest:
      required:
      - project
      type: object
      properties:
        project:
          $ref: '#/components/schemas/ProjectRequest'
      description: Create project request
    ProjectRequest:
      required:
      - identifier
      - name
      type: object
      properties:
        identifier:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$"
          type: string
          description: Project identifier
        name:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_ ]{0,127}$"
          type: string
          description: Project name
        color:
          type: string
          description: Project color
        modules:
          maxItems: 1024
          type: array
          description: List of modules for project
          items:
            $ref: '#/components/schemas/ModuleType'
        description:
          maxLength: 1024
          type: string
          description: Project description
        tags:
          maxProperties: 128
          type: object
          additionalProperties:
            type: string
          description: Project tags
      description: Project model
      x-examples:
        example-1:
          identifier: example_project_identifier
          name: example-project-name
          color: '#0063F7'
          modules:
          - CD
          description: This is a example project
          tags:
            property1: value1
            property2: value2
    Project:
      required:
      - identifier
      - name
      type: object
      properties:
        identifier:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$"
          type: string
          description: Project identifier
        name:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_ ]{0,127}$"
          type: string
          description: Project name
        org:
          type: string
          description: Organization identifier for the project
        color:
          type: string
          description: Project color
        modules:
          maxItems: 1024
          type: array
          description: List of modules for project
          items:
            $ref: '#/components/schemas/ModuleType'
        description:
          maxLength: 1024
          type: string
          description: Project description
        tags:
          maxProperties: 128
          type: object
          additionalProperties:
            type: string
          description: Project tags
      description: Project model
      example:
        identifier: identifier
        color: color
        org: org
        name: name
        description: description
        modules:
        - CD
        - CD
        - CD
        - CD
        - CD
        - CD
        - CD
        - CD
        - CD
        - CD
        tags:
          key: tags
      x-examples:
        example-1:
          identifier: example_project_identifier
          name: example-project-name
          org: example_org_identifier
          color: '#0063F7'
          modules:
          - CD
          description: This is a example project
          tags:
            property1: value1
            property2: value2
    ProjectResponse:
      type: object
      properties:
        project:
          $ref: '#/components/schemas/Project'
        created:
          type: integer
          description: Creation timestamp for the project
          format: int64
        updated:
          type: integer
          description: Updated timestamp for the project
          format: int64
        isFavorite:
          type: boolean
          description: True if its your favorite project
      description: Project response model
      example:
        created: 0
        project:
          identifier: identifier
          color: color
          org: org
          name: name
          description: description
          modules:
          - CD
          - CD
          - CD
          - CD
          - CD
          - CD
          - CD
          - CD
          - CD
          - CD
          tags:
            key: tags
        updated: 6
        isFavorite: true
    OrganizationResponse:
      title: OrganizationResponse
      type: object
      properties:
        org:
          $ref: '#/components/schemas/Organization'
        created:
          type: integer
          description: Creation timestamp for organization
          format: int64
        updated:
          type: integer
          description: Updated timestamp for organization
          format: int64
        harness_managed:
          type: boolean
          description: "This indicates if this organization is managed by Harness\
            \ or not. If true, Harness can manage and modify this organization."
      description: Organization response Model
      example:
        org:
          identifier: identifier
          name: name
          description: description
          tags:
            key: tags
        created: 0
        harness_managed: true
        updated: 6
      x-examples:
        example-1:
          org:
            identifier: example_organization
            name: Example Organization
            description: This is an Example Organization
            tags:
              example-tag-1: example-tag-1-value
              example-tag-2: example-tag-2-value
          created: 1234567890
          updated: 1234567890
          harness_managed: true
    UpdateOrganizationRequest:
      required:
      - org
      type: object
      properties:
        org:
          $ref: '#/components/schemas/Organization'
      description: Update oganization request
    UpdateProjectRequest:
      required:
      - project
      type: object
      properties:
        project:
          $ref: '#/components/schemas/ProjectRequest'
      description: Update project request
    SecretSpec:
      title: SecretSpec
      required:
      - type
      type: object
      properties:
        type:
          type: string
          description: This specifies the type of secret
          enum:
          - SSHKeyPath
          - SSHKeyReference
          - SSHPassword
          - SSHKerberosTGTKeyTabFile
          - SSHKerberosTGTPassword
          - SecretFile
          - SecretText
          - WinRmTGTKeyTabFile
          - WinRmTGTPassword
          - WinRmNTLM
      description: Details of the secret defined in Harness
      example:
        type: SSHKeyPath
      discriminator:
        propertyName: type
        mapping:
          SSHKeyPath: '#/components/schemas/SSHKeyPathSpec'
          SSHKeyReference: '#/components/schemas/SSHKeyReferenceSpec'
          SSHPassword: '#/components/schemas/SSHPasswordSpec'
          SSHKerberosTGTKeyTabFile: '#/components/schemas/SSHKerberosTGTKeyTabFileSpec'
          SSHKerberosTGTPassword: '#/components/schemas/SSHKerberosTGTPasswordSpec'
          SecretFile: '#/components/schemas/SecretFileSpec'
          SecretText: '#/components/schemas/SecretTextSpec'
          WinRmTGTKeyTabFile: '#/components/schemas/WinRmTGTKeyTabFileSpec'
          WinRmTGTPassword: '#/components/schemas/WinRmTGTPasswordSpec'
          WinRmNTLM: '#/components/schemas/WinRmNTLMSpec'
    SSHKeyPathSpec:
      title: SSHKeyPath
      description: This is the SSH key authentication details defined in Harness.
      allOf:
      - $ref: '#/components/schemas/SecretSpec'
      - required:
        - key_path
        - type
        - username
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of secret
            enum:
            - SSHKeyPath
          port:
            type: integer
            description: SSH port
            format: int32
          username:
            type: string
            description: SSH username
          key_path:
            type: string
            description: Path of the key file
          encrypted_passphrase:
            type: string
            description: This is the passphrase provided while creating the SSH key
              for local encryption
      x-discriminator-value: SSHKeyPath
    SSHKeyReferenceSpec:
      title: SSHKeyReference
      description: This is the SSH key authentication details defined in Harness.
      allOf:
      - $ref: '#/components/schemas/SecretSpec'
      - required:
        - type
        - username
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of secret
            enum:
            - SSHKeyReference
          port:
            type: integer
            description: SSH port
            format: int32
          username:
            type: string
            description: SSH username
          key:
            type: string
            description: SSH key
          encrypted_passphrase:
            type: string
            description: This is the passphrase provided while creating the SSH key
              for local encryption
      x-discriminator-value: SSHKeyReference
    SSHPasswordSpec:
      title: SSHPassword
      description: This is the SSH key authentication details defined in Harness.
      allOf:
      - $ref: '#/components/schemas/SecretSpec'
      - required:
        - password
        - type
        - username
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of secret
            enum:
            - SSHPassword
          port:
            type: integer
            description: SSH port
            format: int32
          username:
            type: string
            description: SSH username
          password:
            type: string
            description: SSH password
      x-discriminator-value: SSHPassword
    SSHKerberosTGTKeyTabFileSpec:
      title: SSHKerberosTGTKeyTabFile
      description: This is the SSH key authentication details defined in Harness.
      allOf:
      - $ref: '#/components/schemas/SecretSpec'
      - required:
        - type
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of secret
            enum:
            - SSHKerberosTGTKeyTabFile
          port:
            type: integer
            description: SSH port
            format: int32
          principal:
            type: string
            description: Kerberos principal
          realm:
            type: string
            description: Kerberos realm
          key_path:
            type: string
            description: Kerberos keytab file path
      x-discriminator-value: SSHKerberosTGTKeyTabFile
    SSHKerberosTGTPasswordSpec:
      title: SSHKerberosTGTPassword
      description: This is the SSH key authentication details defined in Harness.
      allOf:
      - $ref: '#/components/schemas/SecretSpec'
      - required:
        - type
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of secret
            enum:
            - SSHKerberosTGTPassword
          port:
            type: integer
            description: SSH port
            format: int32
          principal:
            type: string
            description: Kerberos principal
          realm:
            type: string
            description: Kerberos realm
          password:
            type: string
            description: Kerberos password
      x-discriminator-value: SSHKerberosTGTPassword
    SecretFileSpec:
      title: SecretFile
      description: This is the SSH key authentication details defined in Harness.
      allOf:
      - $ref: '#/components/schemas/SecretSpec'
      - required:
        - secret_manager_identifier
        - type
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of secret
            enum:
            - SecretFile
          secret_manager_identifier:
            type: string
            description: Identifier of the secret manager used to manage the secret
      x-discriminator-value: SecretFile
    SecretTextSpec:
      title: SecretText
      description: This is the SSH key authentication details defined in Harness.
      allOf:
      - $ref: '#/components/schemas/SecretSpec'
      - required:
        - secret_manager_identifier
        - type
        - value_type
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of secret
            enum:
            - SecretText
          secret_manager_identifier:
            type: string
            description: Identifier of the secret manager used to manage the secret
          value_type:
            type: string
            description: This has details to specify if the secret value is inline
              or referenced
            enum:
            - Inline
            - Reference
          value:
            type: string
            description: Value of the Secret
          additional_metadata:
            $ref: '#/components/schemas/SecretTextSpec_additional_metadata'
      x-discriminator-value: SecretText
    WinRmTGTKeyTabFileSpec:
      title: WinRmTGTKeyTabFile
      description: This is the SSH key authentication details defined in Harness.
      allOf:
      - $ref: '#/components/schemas/SecretSpec'
      - required:
        - type
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of secret
            enum:
            - WinRmTGTKeyTabFile
          port:
            type: integer
            description: WinRm port
            format: int32
            default: 5986
          principal:
            type: string
            description: Kerberos principal
          realm:
            type: string
            description: Kerberos realm
          key_path:
            type: string
            description: Keytab file path
          use_ssl:
            type: boolean
            description: This is the Kerberos either to use SSL/https
            default: true
          skip_cert_checks:
            type: boolean
            description: This is the Kerberos either to skip certificate checks
            default: true
          use_no_profile:
            type: boolean
            description: This is the Kerberos powershell runs without loading profile
      x-discriminator-value: WinRmTGTKeyTabFile
    WinRmTGTPasswordSpec:
      title: WinRmTGTPassword
      description: This is the SSH key authentication details defined in Harness.
      allOf:
      - $ref: '#/components/schemas/SecretSpec'
      - required:
        - type
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of secret
            enum:
            - WinRmTGTPassword
          port:
            type: integer
            description: WinRm port
            format: int32
            default: 5986
          principal:
            type: string
            description: Kerberos principal
          realm:
            type: string
            description: Kerberos realm
          password:
            type: string
            description: Kerberos password
          use_ssl:
            type: boolean
            description: This is the Kerberos either to use SSL/https
            default: true
          skip_cert_checks:
            type: boolean
            description: This is the Kerberos either to skip certificate checks
            default: true
          use_no_profile:
            type: boolean
            description: This is the Kerberos powershell runs without loading profile
      x-discriminator-value: WinRmTGTPassword
    WinRmNTLMSpec:
      title: WinRmNTLM
      description: This is the SSH key authentication details defined in Harness.
      allOf:
      - $ref: '#/components/schemas/SecretSpec'
      - required:
        - domain
        - password
        - type
        - username
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of secret
            enum:
            - WinRmNTLM
          port:
            type: integer
            description: WinRm port
            format: int32
            default: 5986
          domain:
            type: string
            description: This is the NTLM domain name
          username:
            type: string
            description: This is the NTLM user name
          password:
            type: string
            description: This is the NTLM password
          use_ssl:
            type: boolean
            description: This is the NTLM either to use SSL/https
            default: true
          skip_cert_checks:
            type: boolean
            description: This is the Kerberos either to skip certificate checks
            default: true
          use_no_profile:
            type: boolean
            description: This is the Kerberos powershell runs without loading profile
      x-discriminator-value: WinRmNTLM
    SecretRequest:
      required:
      - secret
      type: object
      properties:
        secret:
          $ref: '#/components/schemas/Secret'
    Secret:
      required:
      - identifier
      - name
      - spec
      type: object
      properties:
        name:
          pattern: "^[0-9a-zA-Z-_ ]{0,127}$"
          type: string
          description: Secret name
        identifier:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$"
          type: string
          description: Secret identifier
        org:
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_ ]{0,127}$"
          type: string
          description: Organization identifier for secret
        project:
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_ ]{0,127}$"
          type: string
          description: Project identifier for secret
        tags:
          type: object
          additionalProperties:
            type: string
          description: Secret tags
        description:
          type: string
          description: Secret description
        spec:
          $ref: '#/components/schemas/SecretSpec'
      example:
        identifier: identifier
        org: org
        name: name
        project: project
        description: description
        spec:
          type: SSHKeyPath
        tags:
          key: tags
    SecretResponse:
      title: SecretResponse
      type: object
      properties:
        secret:
          $ref: '#/components/schemas/Secret'
        created:
          type: integer
          description: Creation timestamp for the secret
          format: int64
        updated:
          type: integer
          description: Updated timestamp for the secret
          format: int64
        draft:
          type: boolean
        governance_metadata:
          type: object
          description: Governance metadata information
      description: Secret response model
      example:
        created: 0
        draft: true
        secret:
          identifier: identifier
          org: org
          name: name
          project: project
          description: description
          spec:
            type: SSHKeyPath
          tags:
            key: tags
        updated: 6
        governance_metadata: {}
    ModuleVersionsResponse:
      title: Module Versions Response Body
      type: object
      properties:
        name:
          type: string
          description: Module name
        version:
          type: string
          description: Module version
        display_name:
          type: string
          description: Module display name
        updated:
          type: string
          description: Module updated at
        version_url:
          type: string
          description: Module version URL
        release_notes_link:
          type: string
          description: Module Release Notes link
        microservices_version_info:
          type: array
          items:
            $ref: '#/components/schemas/MicroserviceVersionInfo'
      description: Module Versions Response Body
      example:
        release_notes_link: release_notes_link
        name: name
        microservices_version_info:
        - name: name
          version: version
          version_url: version_url
        - name: name
          version: version
          version_url: version_url
        display_name: display_name
        version: version
        updated: updated
        version_url: version_url
    MicroserviceVersionInfo:
      title: Microservice Version Info
      type: object
      properties:
        name:
          type: string
          description: Microservices name
        version:
          type: string
          description: Microservices version URL
        version_url:
          type: string
          description: Microservices version
      description: Microservice Version Info
      example:
        name: name
        version: version
        version_url: version_url
      x-stoplight:
        id: bmqfflnoo0jid
    SecretValidationMetadata:
      title: SecretValidationMetadata
      required:
      - secretManagerIdentifer
      - secretRefPath
      type: object
      properties:
        secret_manager_identifier:
          type: string
          description: Identifier of the secretManager
        secret_ref_path:
          type: string
          description: Path to the secret present which needs to be referenced.
      description: Details of the secret reference
    SecretValidationResponse:
      title: SecretValidationResponse
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          description: Secret reference path validation result
      description: Response of the secret reference validation
      example:
        success: true
        message: message
    EulaSignRequest:
      title: EulaSignRequest
      required:
      - agreement_type
      type: object
      properties:
        agreement_type:
          $ref: '#/components/schemas/AgreementType'
      description: Details of an Agreement to be Signed
    AgreementType:
      type: string
      description: Type of Agreement
      enum:
      - AIDA
    EulaSignResponse:
      title: EulaSignResponse
      type: object
      properties:
        signed:
          type: boolean
        message:
          type: string
          description: Signing an End User License Agreement result
      description: Response of signing an End User License Agreement
      example:
        signed: true
        message: message
    IPAllowlistConfig:
      title: IPAllowlistConfig
      required:
      - identifier
      - ip_address
      - name
      type: object
      properties:
        name:
          maxLength: 128
          minLength: 1
          pattern: "^[0-9a-zA-Z-_ ]{0,127}$"
          type: string
          description: Name of the IP Config defined in Harness
        identifier:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$"
          type: string
          description: Identifier of the IP Config
        description:
          type: string
          description: Description of the entity
        enabled:
          type: boolean
          description: "If true, it will allow all the IPs that are part of the config\
            \ and block others."
          default: false
        tags:
          maxProperties: 128
          type: object
          additionalProperties:
            type: string
          description: IP Allowlist tags
        allowed_source_type:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AllowedSourceType'
        ip_address:
          type: string
      description: This contains data for a config set in Harness to allow selected
        IPs
      example:
        identifier: identifier
        allowed_source_type:
        - UI
        - UI
        name: name
        description: description
        ip_address: ip_address
        enabled: false
        tags:
          key: tags
      x-stoplight:
        id: z54w7edwpccca
    AllowedSourceType:
      title: AllowedSourceType
      type: string
      description: This denotes source from which IPs are allowed.
      enum:
      - UI
      - API
      x-stoplight:
        id: j4g1a19tpiovc
    IPAllowlistConfigRequest:
      title: IPAllowlistConfigRequest
      type: object
      properties:
        ip_allowlist_config:
          $ref: '#/components/schemas/IPAllowlistConfig'
      description: This is the request spec to create IP Allowlist config in Harness
      x-stoplight:
        id: gmdedmqicwsx4
    IPAllowlistConfigResponse:
      title: IPAllowlistConfigResponse
      required:
      - created
      - ip_allowlist_config
      - updated
      type: object
      properties:
        ip_allowlist_config:
          $ref: '#/components/schemas/IPAllowlistConfig'
        created:
          type: integer
          description: Creation timestamp for the IP Allowlist config.
          format: int64
        updated:
          type: integer
          description: Last modification timestamp for IP Allowlist config.
          format: int64
      example:
        created: 0
        ip_allowlist_config:
          identifier: identifier
          allowed_source_type:
          - UI
          - UI
          name: name
          description: description
          ip_address: ip_address
          enabled: false
          tags:
            key: tags
        updated: 6
      x-stoplight:
        id: 9rirmo68rh6st
    IPAllowlistConfigValidateResponse:
      title: IPAllowlistConfigValidateResponse
      type: object
      properties:
        allowed_for_custom_block:
          type: boolean
          description: This indicates if given IP Address lies in range of custom
            IP block or not.
        allowlisted_configs:
          type: array
          description: |
            This is the list of IP configs configured in Harness from which IP address is allowed. This is empty in case of custom IP address block.
          items:
            $ref: '#/components/schemas/IPAllowlistConfigResponse'
        allowed_for_ui:
          type: boolean
          description: This indicates if a given IP is allowlisted in Harness for
            UI requests
        allowed_for_api:
          type: boolean
          description: This indicates if a given IP is allowlisted in Harness for
            API requests
        disabled_allowlisted_configs:
          type: array
          description: |
            This is the list of IP configs configured in Harness from which IP address is allowed but the config is disabled. This is empty in case of custom IP address block.
          items:
            $ref: '#/components/schemas/IPAllowlistConfigResponse'
      example:
        allowed_for_api: true
        allowed_for_ui: true
        allowed_for_custom_block: true
        disabled_allowlisted_configs:
        - null
        - null
        allowlisted_configs:
        - created: 0
          ip_allowlist_config:
            identifier: identifier
            allowed_source_type:
            - UI
            - UI
            name: name
            description: description
            ip_address: ip_address
            enabled: false
            tags:
              key: tags
          updated: 6
        - created: 0
          ip_allowlist_config:
            identifier: identifier
            allowed_source_type:
            - UI
            - UI
            name: name
            description: description
            ip_address: ip_address
            enabled: false
            tags:
              key: tags
          updated: 6
      x-stoplight:
        id: smtu2jgnoz1up
    ManifestsResponseDTO:
      title: ManifestsResponseDTO
      type: object
      properties:
        identifiers:
          type: array
          description: List of Manifest Identifiers
          items:
            type: string
      description: ManifestsResponseDTO returns a list of manifest identifiers from
        a service's eligible primary manifests.
      example:
        identifiers:
        - identifiers
        - identifiers
      x-internal: false
      x-examples:
        Example 1:
          identifiers:
          - id1
          - id2
    CreateGitXWebhookRequest:
      title: CreateGitXWebhookRequest
      type: object
      properties:
        webhook_identifier:
          type: string
        repo_name:
          type: string
        connector_ref:
          type: string
        folder_paths:
          type: array
          items:
            type: string
        webhook_name:
          type: string
      description: Contains information about the GitX webhook creation request
      x-stoplight:
        id: dfl2rgteqjv9l
    CreateGitXWebhookResponse:
      title: CreateGitXWebhookResponse
      type: object
      properties:
        webhook_identifier:
          type: string
      description: 'Contains information about the GitX webhook creation '
      example:
        webhook_identifier: webhook_identifier
      x-stoplight:
        id: x9148732e2m4l
    UpdateGitXWebhookRequest:
      title: UpdateGitXWebhookRequest
      type: object
      properties:
        repo_name:
          type: string
        webhook_name:
          type: string
        folder_paths:
          type: array
          items:
            type: string
        is_enabled:
          type: boolean
        connector_ref:
          type: string
      description: 'Contains information about the GitX webhook updation '
      x-stoplight:
        id: 4muh4be0aj4te
    UpdateGitXWebhookResponse:
      title: UpdateGitXWebhookResponse
      type: object
      properties:
        webhook_identifier:
          type: string
      description: 'Contains information about the GitX webhook updation '
      example:
        webhook_identifier: webhook_identifier
      x-stoplight:
        id: ne0fmq08o05bg
    GitXWebhookResponse:
      title: GitXWebhookResponse
      type: object
      properties:
        webhook_identifier:
          type: string
        webhook_name:
          type: string
        connector_ref:
          type: string
        repo_name:
          type: string
        folder_paths:
          type: array
          items:
            type: string
        is_enabled:
          type: boolean
        event_trigger_time:
          type: integer
          format: int64
      description: 'Contains information about the GitX webhooks '
      example:
        webhook_name: webhook_name
        is_enabled: true
        webhook_identifier: webhook_identifier
        folder_paths:
        - folder_paths
        - folder_paths
        connector_ref: connector_ref
        repo_name: repo_name
        event_trigger_time: 0
      x-stoplight:
        id: vkv1a5drhxln9
    GitXWebhookEventResponse:
      title: GitXWebhookEventResponse
      type: object
      properties:
        author_name:
          type: string
        event_identifier:
          type: string
        webhook_identifier:
          type: string
        payload:
          type: string
        event_trigger_time:
          type: integer
          format: int64
        repo_name:
          type: string
        event_status:
          type: string
          enum:
          - SKIPPED
          - FAILED
          - QUEUED
          - SUCCESSFUL
          - PROCESSING
          - WARNING
          - UNKNOWN
        event_status_message:
          $ref: '#/components/schemas/EventStatusMessageBody'
        commit_message:
          type: string
          x-stoplight:
            id: 12a2uyvbqq1wj
        commit_id:
          type: string
          x-stoplight:
            id: slrl29uhxanaz
        commit_url:
          type: string
        file_count:
          type: integer
          x-stoplight:
            id: t6r1ww64hy73r
        failure_file_count:
          type: integer
          x-stoplight:
            id: gp3tw3rci44n0
      description: Contains information about the GitX webhook Events
      example:
        author_name: author_name
        file_count: 6
        webhook_identifier: webhook_identifier
        commit_message: commit_message
        event_identifier: event_identifier
        event_trigger_time: 0
        commit_url: commit_url
        event_status_message:
          hint: hint
          message: message
          explanation: explanation
        payload: payload
        failure_file_count: 1
        repo_name: repo_name
        commit_id: commit_id
        event_status: SKIPPED
      x-stoplight:
        id: kcprstctf6ja6
    DeleteGitXWebhookResponse:
      title: DeleteGitXWebhookResponse
      type: object
      properties:
        webhook_identifier:
          type: string
      description: Contains information about the GitX webhooks that was deleted.
      example:
        webhook_identifier: webhook_identifier
      x-stoplight:
        id: bnhbfd0j7x6ag
    ReleaseDetailsResponse:
      title: ReleaseDetailsResponse
      type: object
      properties:
        _id:
          type: object
        account:
          type: string
        org:
          type: string
        project:
          type: string
        release_key:
          type: string
        service_details:
          $ref: '#/components/schemas/ReleaseServiceDetails'
        environment_details:
          $ref: '#/components/schemas/ReleaseEnvDetails'
      description: Response model of single release details
      example:
        service_details:
          org: org
          service_name: service_name
          service_id: service_id
          project: project
        org: org
        project: project
        environment_details:
          infra_id: infra_id
          env_id: env_id
          env_name: env_name
          infra_name: infra_name
          org: org
          connector_ref: connector_ref
          infrastructure_kind: infrastructure_kind
          project: project
        _id: {}
        release_key: release_key
        account: account
      x-stoplight:
        id: dwib2397lfhgo
      x-examples:
        Example 1:
          _id: {}
          account: account
          org: org
          project: project
          release_key: release_key
          service_details:
            service_id: k8sservice
            service_name: k8s service
            org: orgid
            project: projectid
          environment_details:
            env_id: k8senv
            env_name: k8s env
            org: orgid
            project: projectid
            connector_ref: string
            infra_name: infra_name
            infra_id: infra_id
            infrastructure_kind: K8sDirect
    BatchReleaseDetailsResponse:
      title: BatchReleaseDetailsResponse
      type: array
      description: Response model of Batch release details
      items:
        $ref: '#/components/schemas/ReleaseDetailsResponse'
      x-stoplight:
        id: kg0byl39j3q3k
      x-examples:
        Example 1:
        - _id: {}
          account: account
          org: org
          project: project
          release_key: release_key
          service_details:
            service_id: k8sservice
            service_name: k8s service
            org: orgid
            project: projectid
          environment_details:
            env_id: k8senv
            env_name: k8s env
            org: orgid
            project: projectid
            connector_ref: string
            infra_name: infra_name
            infra_id: infra_id
            infrastructure_kind: K8sDirect
      x-schema-name: BatchReleaseDetailsResponse
    ReleaseServiceDetails:
      title: ReleaseServiceDetails
      type: object
      properties:
        service_id:
          type: string
        service_name:
          type: string
        org:
          type: string
        project:
          type: string
      description: Response model of service release details
      example:
        org: org
        service_name: service_name
        service_id: service_id
        project: project
      x-stoplight:
        id: bm6tau937r4gy
      x-examples:
        Example 1:
          service_id: serviceid
          service_name: k8sManifestService
          org: orgid
          project: projectid
    ReleaseEnvDetails:
      title: ReleaseEnvDetails
      type: object
      properties:
        env_id:
          type: string
        env_name:
          type: string
        org:
          type: string
        project:
          type: string
        connector_ref:
          type: string
        infra_name:
          type: string
        infra_id:
          type: string
        infrastructure_kind:
          type: string
      description: Response model of environment release details
      example:
        infra_id: infra_id
        env_id: env_id
        env_name: env_name
        infra_name: infra_name
        org: org
        connector_ref: connector_ref
        infrastructure_kind: infrastructure_kind
        project: project
      x-stoplight:
        id: j2ei3sszd3fma
      x-examples:
        Example 1:
          env_id: env1
          env_name: envname
          org: org
          project: project
          connector_ref: k8sDirectConnector
          infra_name: infra1
          infra_id: infraid
          infrastructureKind: K8sDirect
    ReleaseDetailsRequest:
      title: ReleaseDetailsRequest
      type: object
      properties:
        namespace:
          type: string
        release_name:
          type: string
      description: Contains information regarding a single release details required
      x-stoplight:
        id: dbiy8u97r6ik0
      x-examples:
        Example 1:
          namespace: default
          release_name: release-pre-deployment-todolist
    UpdateGitXWebhookEventRequest:
      title: UpdateGitXWebhookEventRequest
      type: object
      properties:
        event_status:
          type: string
          x-stoplight:
            id: mdqi6s78z7g1i
      description: Update GitX Webhook Event Request
      x-stoplight:
        id: obt3lz7g85gic
    EventStatusMessageBody:
      title: EventStatusMessageBody
      type: object
      properties:
        message:
          type: string
          x-stoplight:
            id: la8fj2wtlye08
        hint:
          type: string
          x-stoplight:
            id: mhi6zemt7yl03
        explanation:
          type: string
          x-stoplight:
            id: 1ptlj7jmeljqe
      description: Contains the gitx webhook event status message
      example:
        hint: hint
        message: message
        explanation: explanation
      x-stoplight:
        id: 9rwghea2of8m2
      x-internal: true
    CertificateDTO:
      title: CertificateDTO
      description: This is the request dto to create a Certificate in Harness
      allOf:
      - $ref: '#/components/schemas/CertificateInfoDTO'
      - required:
        - input_spec
        type: object
        properties:
          input_spec:
            $ref: '#/components/schemas/CertificateInputSpecDTO'
      x-stoplight:
        id: l9q8ph7p1mi4o
    CertificateInfoDTO:
      title: CertificateInfoDTO
      required:
      - identifier
      - name
      type: object
      properties:
        name:
          maxLength: 128
          minLength: 1
          pattern: "^[0-9a-zA-Z-_ ]{0,127}$"
          type: string
          description: Name for the Entity.
          x-stoplight:
            id: 5s4lvxucs4340
        identifier:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$"
          type: string
          description: Identifier for the Entity.
          x-stoplight:
            id: hr2a03wdanpjs
        org:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$"
          type: string
          description: Organization Identifier for the Entity.
          x-stoplight:
            id: mo4zkt909dmyx
        project:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$"
          type: string
          description: Project Identifier for the Entity.
          x-stoplight:
            id: ykyl1jrjm5yae
        certificate_value:
          type: string
          description: Certificate Content (Read only field whose value is populated
            only in response)
          readOnly: true
          x-stoplight:
            id: xmkfxyqoijdcd
        tags:
          type: object
          additionalProperties:
            type: string
          description: Certificate tags
          x-stoplight:
            id: bignws4547i7g
        description:
          type: string
          x-stoplight:
            id: enyo3ngtqsypb
      description: This is the Certificate Entity in Harness
      x-stoplight:
        id: o43wu1pwo0n40
    CertificateInputSpecDTO:
      title: CertificateInputSpecDTO
      required:
      - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/CertificateInputSpecType'
      description: ""
      discriminator:
        propertyName: type
        mapping:
          TEXT: '#/components/schemas/TextCertificateInputSpecDTO'
          FILE: '#/components/schemas/FileCertificateInputSpecDTO'
      x-stoplight:
        id: 0d1izu97xpl66
    TextCertificateInputSpecDTO:
      title: TextCertificateInputSpecDTO
      description: This DTO defines the fields required when creating a certificate
        by passing it as text.
      allOf:
      - $ref: '#/components/schemas/CertificateInputSpecDTO'
      - required:
        - value
        type: object
        properties:
          value:
            type: string
            x-stoplight:
              id: 67cnzqv4oarfk
        x-stoplight:
          id: eywbr9ncc8jor
      x-stoplight:
        id: d701noymmmnvu
      x-discriminator-value: TEXT
    FileCertificateInputSpecDTO:
      title: FileCertificateInputSpecDTO
      description: This DTO defines the fields required when creating a certificate
        by passing it as text.
      allOf:
      - $ref: '#/components/schemas/CertificateInputSpecDTO'
      x-stoplight:
        id: lzs8geqg3peyv
      x-discriminator-value: FILE
    CertificateResponseDTO:
      title: CertificateResponseDTO
      required:
      - certificate
      - certificate_details
      type: object
      properties:
        certificate:
          $ref: '#/components/schemas/CertificateDTO'
        certificate_details:
          $ref: '#/components/schemas/CertificateDetailsDTO'
        created:
          type: integer
          format: int64
          x-stoplight:
            id: 1la1qxtgvwuuj
        updated:
          type: integer
          format: int64
          x-stoplight:
            id: dzphxs7u5apmm
      example:
        created: 1
        certificate: ""
        updated: 5
        certificate_details:
          issued_by: null
          issued_to:
            organization: organization
            common_name: common_name
            organizational_unit: organizational_unit
          valid_to: 6
          valid_from: 0
          signature_algo: signature_algo
      x-stoplight:
        id: 08arjpkqc1kl4
    CertificateDetailsDTO:
      title: CertificateDetailsDTO
      type: object
      properties:
        issued_to:
          $ref: '#/components/schemas/CertificateIssuanceInfo'
        issued_by:
          $ref: '#/components/schemas/CertificateIssuanceInfo'
        valid_from:
          type: integer
          format: int64
          x-stoplight:
            id: j5a9tcl5i3a2o
        valid_to:
          type: integer
          format: int64
          x-stoplight:
            id: 1339ez6fx8l2g
        signature_algo:
          type: string
          x-stoplight:
            id: rx7w596wytqr3
      example:
        issued_by: null
        issued_to:
          organization: organization
          common_name: common_name
          organizational_unit: organizational_unit
        valid_to: 6
        valid_from: 0
        signature_algo: signature_algo
      x-stoplight:
        id: mlof3rn4vqe64
    CertificateInputSpecType:
      title: CertificateInputSpecType
      type: string
      description: This defines different ways a certificate can be created
      enum:
      - TEXT
      - FILE
      x-stoplight:
        id: nhxqu9kwgv634
    CertificateIssuanceInfo:
      title: CertificateIssuanceInfo
      type: object
      properties:
        common_name:
          type: string
          x-stoplight:
            id: ei027bhkq7cam
        organization:
          type: string
          x-stoplight:
            id: anat62b0vdzp7
        organizational_unit:
          type: string
          x-stoplight:
            id: 1ll9qrdntms7o
      example:
        organization: organization
        common_name: common_name
        organizational_unit: organizational_unit
      x-stoplight:
        id: ag74zjmlc3qyp
    LdapSettingsDTO:
      title: LdapSettingsDTO
      required:
      - account_identifier
      - identifier
      - name
      type: object
      properties:
        account_identifier:
          type: string
          x-stoplight:
            id: 8qppu3sep0fvz
        identifier:
          type: string
          x-stoplight:
            id: 62ki9cggzt1jm
        url:
          type: string
          x-stoplight:
            id: ce8y7fyupcwie
        disabled:
          type: boolean
          x-stoplight:
            id: vlqp8sh98y08b
        name:
          type: string
          x-stoplight:
            id: 3dwefjtun1rn1
        cron_expression:
          type: string
          x-stoplight:
            id: 9v59g4w3hg5wo
        ldap_connection_settings:
          $ref: '#/components/schemas/LdapConnectionSettingsDTO'
        ldap_user_settings:
          type: array
          items:
            $ref: '#/components/schemas/LdapUserSettingsDTO'
          x-stoplight:
            id: q2qnvvvats82o
        ldap_group_settings:
          type: array
          items:
            $ref: '#/components/schemas/LdapGroupSettingsDTO'
          x-stoplight:
            id: e38bwrq8oy07r
        sso_type:
          type: string
          x-stoplight:
            id: xdgeaawghtmno
      description: Ldap Settings DTO
      example:
        identifier: identifier
        ldap_user_settings:
        - display_name_attr: display_name_attr
          uid_attr: uid_attr
          email_attr: email_attr
          group_membership_attr: group_membership_attr
          search_filter: search_filter
          base_d_n: base_d_n
          sam_account_name_attr: sam_account_name_attr
        - display_name_attr: display_name_attr
          uid_attr: uid_attr
          email_attr: email_attr
          group_membership_attr: group_membership_attr
          search_filter: search_filter
          base_d_n: base_d_n
          sam_account_name_attr: sam_account_name_attr
        ldap_connection_settings:
          response_timeout: 5
          port: 0
          bind_d_n: bind_d_n
          delegate_selectors:
          - delegate_selectors
          - delegate_selectors
          ssl_enabled: true
          host: host
          secret_ref_path: secret_ref_path
          max_referral_hops: 6
          use_recursive_group_membership_search: true
          referrals_enabled: true
          connection_timeout: 1
        sso_type: sso_type
        cron_expression: cron_expression
        account_identifier: account_identifier
        name: name
        ldap_group_settings:
        - referenced_user_attr: referenced_user_attr
          description_attr: description_attr
          search_filter: search_filter
          name_attr: name_attr
          base_d_n: base_d_n
          user_membership_attr: user_membership_attr
        - referenced_user_attr: referenced_user_attr
          description_attr: description_attr
          search_filter: search_filter
          name_attr: name_attr
          base_d_n: base_d_n
          user_membership_attr: user_membership_attr
        disabled: true
        url: url
      x-stoplight:
        id: f8znhldy5ze5v
    LdapUserSettingsDTO:
      title: LdapUserSettingsDTO
      type: object
      properties:
        base_d_n:
          type: string
          x-stoplight:
            id: wfuahenplizat
        search_filter:
          type: string
          x-stoplight:
            id: y3wrrf6vz37z2
        uid_attr:
          type: string
          x-stoplight:
            id: nuqp9fo5w05iy
        sam_account_name_attr:
          type: string
          x-stoplight:
            id: yb9qmhbz1mffp
        email_attr:
          type: string
          x-stoplight:
            id: drfzqz8mpu1ou
        display_name_attr:
          type: string
          x-stoplight:
            id: zs09zxyk5phg6
        group_membership_attr:
          type: string
          x-stoplight:
            id: 5qa5pc978l4o4
      description: Ldap User Settings DTO
      example:
        display_name_attr: display_name_attr
        uid_attr: uid_attr
        email_attr: email_attr
        group_membership_attr: group_membership_attr
        search_filter: search_filter
        base_d_n: base_d_n
        sam_account_name_attr: sam_account_name_attr
      x-stoplight:
        id: z57exi0ztqq9a
    LdapConnectionSettingsDTO:
      title: LdapConnectionSettingsDTO
      type: object
      properties:
        host:
          type: string
          x-stoplight:
            id: i5rmxd4zc7128
        port:
          type: integer
          x-stoplight:
            id: ealsta50aysfs
        ssl_enabled:
          type: boolean
          x-stoplight:
            id: l9ucsqzqz65de
        referrals_enabled:
          type: boolean
          x-stoplight:
            id: g8e480fibh1p2
        secret_ref_path:
          type: string
          x-stoplight:
            id: 3lrfk14jzy69x
        max_referral_hops:
          type: integer
          x-stoplight:
            id: twu8lt66e08tz
        connection_timeout:
          type: integer
          x-stoplight:
            id: p8kjsb8doifih
        response_timeout:
          type: integer
          x-stoplight:
            id: 2ersoqf1fspni
        use_recursive_group_membership_search:
          type: boolean
          x-stoplight:
            id: wvps1gevlwqa0
        bind_d_n:
          type: string
          x-stoplight:
            id: m41ae2qg2kusj
        delegate_selectors:
          type: array
          items:
            type: string
            x-stoplight:
              id: wh3l7x013ckkn
          x-stoplight:
            id: yagarnzxe76av
      description: Ldap Connection Settings DTO
      example:
        response_timeout: 5
        port: 0
        bind_d_n: bind_d_n
        delegate_selectors:
        - delegate_selectors
        - delegate_selectors
        ssl_enabled: true
        host: host
        secret_ref_path: secret_ref_path
        max_referral_hops: 6
        use_recursive_group_membership_search: true
        referrals_enabled: true
        connection_timeout: 1
      x-stoplight:
        id: sk8ot06b5sety
    LdapGroupSettingsDTO:
      title: LdapGroupSettingsDTO
      type: object
      properties:
        base_d_n:
          type: string
          x-stoplight:
            id: 2vl2n5ez5kkcf
        search_filter:
          type: string
          x-stoplight:
            id: 3qft0ce07rero
        name_attr:
          type: string
          x-stoplight:
            id: hae6bbgmjtxst
        description_attr:
          type: string
          x-stoplight:
            id: xpf6h6kvblidv
        user_membership_attr:
          type: string
          x-stoplight:
            id: h7mf9q80034ei
        referenced_user_attr:
          type: string
          x-stoplight:
            id: lszd5uip1q5gs
      description: Ldap Group Settings DTO
      example:
        referenced_user_attr: referenced_user_attr
        description_attr: description_attr
        search_filter: search_filter
        name_attr: name_attr
        base_d_n: base_d_n
        user_membership_attr: user_membership_attr
      x-stoplight:
        id: s1809t4lth330
    LdapSettingsRequest:
      title: LdapSettingsRequest
      type: object
      properties:
        ldap_settings:
          $ref: '#/components/schemas/LdapSettingsDTO'
      x-stoplight:
        id: gjqwk2pmix9vu
    LdapSettingsResponse:
      title: LdapSettingsResponse
      type: object
      properties:
        ldap_settings:
          $ref: '#/components/schemas/LdapSettingsDTO'
        created:
          type: integer
          format: int64
          x-stoplight:
            id: tbd3xz9v3adk5
        last_modified:
          type: integer
          format: int64
          x-stoplight:
            id: mxo2ysfo8d5k2
      example:
        created: 5
        ldap_settings:
          identifier: identifier
          ldap_user_settings:
          - display_name_attr: display_name_attr
            uid_attr: uid_attr
            email_attr: email_attr
            group_membership_attr: group_membership_attr
            search_filter: search_filter
            base_d_n: base_d_n
            sam_account_name_attr: sam_account_name_attr
          - display_name_attr: display_name_attr
            uid_attr: uid_attr
            email_attr: email_attr
            group_membership_attr: group_membership_attr
            search_filter: search_filter
            base_d_n: base_d_n
            sam_account_name_attr: sam_account_name_attr
          ldap_connection_settings:
            response_timeout: 5
            port: 0
            bind_d_n: bind_d_n
            delegate_selectors:
            - delegate_selectors
            - delegate_selectors
            ssl_enabled: true
            host: host
            secret_ref_path: secret_ref_path
            max_referral_hops: 6
            use_recursive_group_membership_search: true
            referrals_enabled: true
            connection_timeout: 1
          sso_type: sso_type
          cron_expression: cron_expression
          account_identifier: account_identifier
          name: name
          ldap_group_settings:
          - referenced_user_attr: referenced_user_attr
            description_attr: description_attr
            search_filter: search_filter
            name_attr: name_attr
            base_d_n: base_d_n
            user_membership_attr: user_membership_attr
          - referenced_user_attr: referenced_user_attr
            description_attr: description_attr
            search_filter: search_filter
            name_attr: name_attr
            base_d_n: base_d_n
            user_membership_attr: user_membership_attr
          disabled: true
          url: url
        last_modified: 2
      x-stoplight:
        id: ra1gzj4t8u9w3
    LdapValidateResponseDTO:
      title: LdapValidateResponseDTO
      type: object
      properties:
        message:
          type: string
          x-stoplight:
            id: x7s66994hwdmg
        status:
          type: string
          enum:
          - SUCCESS
          - FAILURE
          x-stoplight:
            id: spkzkdo8p00u8
      description: Ldap Validate Response DTO
      example:
        message: message
        status: SUCCESS
      x-stoplight:
        id: lkcy3ohrgij3e
    LdapGroupResponseDTO:
      title: LdapGroupResponseDTO
      type: object
      properties:
        dn:
          type: string
          x-stoplight:
            id: fb8ur4bakp95d
        name:
          type: string
          x-stoplight:
            id: ezgerm7dbzalu
        description:
          type: string
          x-stoplight:
            id: 3cynjss7jge6c
        total_members:
          type: integer
          x-stoplight:
            id: 607akg5zkmwd5
        message:
          type: string
          x-stoplight:
            id: 4fyyiyx1tigej
      description: LdapGroupResponse
      example:
        name: name
        description: description
        total_members: 0
        dn: dn
        message: message
      x-stoplight:
        id: ag80fl4djk8u7
    UserGroupDTO:
      title: UserGroupDTO
      type: object
      properties:
        account_identifier:
          type: string
          x-stoplight:
            id: izybl5ndyou6l
        org:
          type: string
          x-stoplight:
            id: 8zscs32ljrqlh
        project:
          type: string
          x-stoplight:
            id: zckgqa40bii85
        identifier:
          type: string
          x-stoplight:
            id: 71xnxf5lmbo19
        is_sso_linked:
          type: boolean
          x-stoplight:
            id: jrzpdhkukejp6
        linked_sso_type:
          type: boolean
          x-stoplight:
            id: x2ss9gzmisdxe
        linked_sso_id:
          type: boolean
          x-stoplight:
            id: cyvwp3kmu2qfs
        linked_sso_display_name:
          type: string
          x-stoplight:
            id: dja5o8cdrz0ul
        sso_group_id:
          type: string
          x-stoplight:
            id: ni3iyd67b31i5
        sso_group_name:
          type: string
          x-stoplight:
            id: 3rr7v12c2xapx
        name:
          type: string
          x-stoplight:
            id: d4d4zjg9l2d2p
        users:
          type: array
          items:
            type: string
            x-stoplight:
              id: 3s9neyuurscsv
          x-stoplight:
            id: ol1or1092op6l
        notification_configs:
          type: array
          items:
            $ref: '#/components/schemas/NotificationSettingConfigDTO'
          x-stoplight:
            id: 8a4qp4lj2nmkc
        externally_managed:
          type: boolean
          x-stoplight:
            id: oqy81utjz3qmf
        description:
          type: string
          x-stoplight:
            id: hc4inmpqjcfsi
        tags:
          type: array
          items:
            type: string
            x-stoplight:
              id: llx1wlnfosa3x
          x-stoplight:
            id: 4dtahmt1tenew
        harness_managed:
          type: boolean
          x-stoplight:
            id: sm26t4i5t4kcf
      description: User Group DTO
      example:
        is_sso_linked: true
        identifier: identifier
        linked_sso_type: true
        org: org
        account_identifier: account_identifier
        project: project
        description: description
        sso_group_name: sso_group_name
        users:
        - users
        - users
        tags:
        - tags
        - tags
        linked_sso_id: true
        linked_sso_display_name: linked_sso_display_name
        name: name
        externally_managed: true
        notification_configs:
        - type: type
        - type: type
        harness_managed: true
        sso_group_id: sso_group_id
      x-stoplight:
        id: 809ed71ctxw4g
    NotificationSettingConfigDTO:
      title: NotificationSettingConfigDTO
      type: object
      properties:
        type:
          type: string
          x-stoplight:
            id: ets95lazoqt1o
      example:
        type: type
      x-stoplight:
        id: rhy104v0cjttt
    LinkSSOGroupRequestDTO:
      title: LinkSSOGroupRequestDTO
      type: object
      properties:
        sso_id:
          type: string
          x-stoplight:
            id: ytazjgz12l17u
        sso_group_id:
          type: string
          x-stoplight:
            id: gqw1001ki7ni6
        sso_group_name:
          type: string
          x-stoplight:
            id: fkrxfo9iz681u
      description: ""
      x-stoplight:
        id: 9nq8edmxoq01f
    UnlinkSSOGroupRequestDTO:
      title: UnlinkSSOGroupRequestDTO
      type: object
      properties:
        retain_members:
          type: boolean
          x-stoplight:
            id: yyqh40xyuksld
      x-stoplight:
        id: 99zgtjmcs8t67
    LdapSettingsIterations:
      title: LdapSettingsIterations
      type: object
      properties:
        iterations:
          type: array
          items:
            type: integer
            format: int64
            x-stoplight:
              id: bl9mqhxdepfe5
          x-stoplight:
            id: 1p2rv44mibkb5
      example:
        iterations:
        - 0
        - 0
      x-stoplight:
        id: fm7tb4yt6xber
    CronExpressionRequestDTO:
      title: CronExpressionRequestDTO
      type: object
      properties:
        cron:
          type: string
          x-stoplight:
            id: gje1x6922v6fd
      x-stoplight:
        id: w60gppl5cy5uu
    LdapTestLoginResponseDTO:
      title: LdapTestLoginResponseDTO
      type: object
      properties:
        message:
          type: string
          x-stoplight:
            id: ffhbs5s2f4g5u
        status:
          type: string
          enum:
          - SUCCESS
          - FAILURE
          x-stoplight:
            id: j8e7dfj2vqvic
      example:
        message: message
        status: SUCCESS
      x-stoplight:
        id: qyovi99w6fhk5
    LdapTestLoginRequestDTO:
      title: LdapTestLoginRequestDTO
      type: object
      properties:
        email:
          type: string
          x-stoplight:
            id: ov0ic5u510oql
        password:
          type: string
          x-stoplight:
            id: r1c8uwaviczpl
      x-stoplight:
        id: o4dbv260dkvc3
    GetGitXWebhookEventFileValidationResponse:
      title: GetGitXWebhookEventFileValidationResponse
      type: object
      properties:
        file_path:
          type: string
        file_url:
          type: string
        file_action_type:
          type: string
          enum:
          - ADDED
          - MODIFIED
          - DELETED
        entity_details:
          type: array
          items:
            $ref: '#/components/schemas/EntityDetails'
      description: Get GitX Webhook Event File Validation Response
      example:
        file_path: file_path
        file_url: file_url
        file_action_type: ADDED
        entity_details:
        - identifier: identifier
          error_metadata:
            error_message: error_message
            hint: hint
            explanation: explanation
          entity_type: Pipelines
          entity_url: entity_url
          org: org
          is_valid: true
          entity_metadata:
            override_type: override_type
            environment_identifier: environment_identifier
            pipeline_identifier: pipeline_identifier
            template_version_label: template_version_label
          project: project
          branch: branch
        - identifier: identifier
          error_metadata:
            error_message: error_message
            hint: hint
            explanation: explanation
          entity_type: Pipelines
          entity_url: entity_url
          org: org
          is_valid: true
          entity_metadata:
            override_type: override_type
            environment_identifier: environment_identifier
            pipeline_identifier: pipeline_identifier
            template_version_label: template_version_label
          project: project
          branch: branch
      x-stoplight:
        id: bq4d9by7xkllw
    ErrorMetadata:
      title: ErrorMetadata
      type: object
      properties:
        error_message:
          type: string
          x-stoplight:
            id: kkpconlup6wwr
        hint:
          type: string
          x-stoplight:
            id: k6z0qdp0rmuw4
        explanation:
          type: string
          x-stoplight:
            id: f3q0sm25vvdyp
      description: Error meta data
      example:
        error_message: error_message
        hint: hint
        explanation: explanation
      x-stoplight:
        id: k44xlbscpqhti
    EntityMetadata:
      title: EntityMetadata
      type: object
      properties:
        pipeline_identifier:
          type: string
        template_version_label:
          type: string
        environment_identifier:
          type: string
        override_type:
          type: string
      description: Entity metadata
      example:
        override_type: override_type
        environment_identifier: environment_identifier
        pipeline_identifier: pipeline_identifier
        template_version_label: template_version_label
    EntityDetails:
      title: EntityDetails
      type: object
      properties:
        is_valid:
          type: boolean
        error_metadata:
          $ref: '#/components/schemas/ErrorMetadata'
        entity_metadata:
          $ref: '#/components/schemas/EntityMetadata'
        identifier:
          type: string
        org:
          type: string
        project:
          type: string
        entity_type:
          type: string
          enum:
          - Pipelines
          - Template
          - InputSets
          - Service
          - Environment
          - Infrastructure
          - Overrides
          - Unknown
        entity_url:
          type: string
        branch:
          type: string
      description: 'Entity Details with its yaml validation result '
      example:
        identifier: identifier
        error_metadata:
          error_message: error_message
          hint: hint
          explanation: explanation
        entity_type: Pipelines
        entity_url: entity_url
        org: org
        is_valid: true
        entity_metadata:
          override_type: override_type
          environment_identifier: environment_identifier
          pipeline_identifier: pipeline_identifier
          template_version_label: template_version_label
        project: project
        branch: branch
      x-stoplight:
        id: off09hxwghp46
    SecretTextSpec_additional_metadata:
      type: object
      properties:
        values:
          type: object
      description: Additional metadata of the secret if any exist
  responses:
    LicenseUsageActivity:
      description: Response for License Usage Activity
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/LicenseUsageActivity'
            x-content-type: application/json
    ServiceListResponse:
      description: Example response
      headers:
        X-Total-Elements:
          description: Total number of elements returned in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
        X-Page-Number:
          description: Page number in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
        X-Page-Size:
          description: Maximum page size in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ServiceResponse'
            x-content-type: application/json
          examples:
            example-1:
              value:
              - service:
                  account: sample_account
                  identifier: example_service
                  org: sample_organization
                  project: sample_project
                  name: Example_service
                  description: This is a example service
                  tags:
                    example-tag-1: example-tag-1-value
                    example-tag-2: example-tag-2-value
                  yaml: |
                    service:
                      name: "Example_service"
                      identifier: "example_service"
                      tags: {}
                created: 1234567890
                updated: 1234567890
        application/yaml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ServiceResponse'
          examples:
            example-1:
              value: |
                - service:
                    account: sample_account
                    identifier: example_service
                    org: sample_organization
                    project: sample_project
                    name: Example_service
                    description: This is a example service
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    yaml: |
                      service:
                        name: "Example_service"
                        identifier: "example_service"
                        tags: {}
                  created: 1234567890
                  updated: 1234567890
    ServiceResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceResponse'
          examples:
            example-1:
              value:
                service:
                  account: sample_account
                  identifier: example_service
                  org: sample_organization
                  project: sample_project
                  name: Example_service
                  description: This is a example service
                  tags:
                    example-tag-1: example-tag-1-value
                    example-tag-2: example-tag-2-value
                  yaml: |
                    service:
                      name: "Example_service"
                      identifier: "example_service"
                      tags: {}
                created: 1234567890
                updated: 1234567890
        application/yaml:
          schema:
            $ref: '#/components/schemas/ServiceResponse'
          examples:
            example-1:
              value: |
                service:
                  account: sample_account
                  identifier: example_service
                  org: sample_organization
                  project: sample_project
                  name: Example_service
                  description: This is a example service
                  tags:
                    example-tag-1: example-tag-1-value
                    example-tag-2: example-tag-2-value
                  yaml: |
                    service:
                      name: "Example_service"
                      identifier: "example_service"
                      tags: {}
                created: 1234567890
                updated: 1234567890
    EnvironmentListResponse:
      description: Example environment list response
      headers:
        X-Total-Elements:
          description: Total number of elements returned in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
        X-Page-Number:
          description: Page number in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
        X-Page-Size:
          description: Maximum page size in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/EnvironmentResponse'
            x-content-type: application/json
          examples:
            example-1:
              value:
              - service:
                  account: sample_account
                  identifier: example_environment
                  org: sample_organization
                  project: sample_project
                  name: Example_service
                  description: This is a example environment
                  tags:
                    example-tag-1: example-tag-1-value
                    example-tag-2: example-tag-2-value
                  yaml: |
                    environment:
                      name: "Example_environment"
                      identifier: "example_environment"
                      tags: {}
                created: 1234567890
                updated: 1234567890
        application/yaml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/EnvironmentResponse'
          examples:
            example-1:
              value: |
                - environment:
                    account: sample_account
                    identifier: example_environment
                    org: sample_organization
                    project: sample_project
                    name: Example_environment
                    description: This is a example environment
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    yaml: |
                      environment:
                        name: "Example_environment"
                        identifier: "example_environment"
                        tags: {}
                  created: 1234567890
                  updated: 1234567890
    EnvironmentResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EnvironmentResponse'
          examples:
            example-1:
              value:
                environment:
                  account: sample_account
                  identifier: example_
                  org: sample_organization
                  project: sample_project
                  name: Example_environment
                  description: This is a example environment
                  tags:
                    example-tag-1: example-tag-1-value
                    example-tag-2: example-tag-2-value
                  yaml: |
                    environment:
                      name: "Example_environment"
                      identifier: "example_environment"
                      tags: {}
                created: 1234567890
                updated: 1234567890
        application/yaml:
          schema:
            $ref: '#/components/schemas/EnvironmentResponse'
          examples:
            example-1:
              value: |
                environment:
                  account: sample_account
                  identifier: example_environment
                  org: sample_organization
                  project: sample_project
                  name: Example_environment
                  description: This is a example environment
                  tags:
                    example-tag-1: example-tag-1-value
                    example-tag-2: example-tag-2-value
                  yaml: |
                    environment:
                      name: "Example_environment"
                      identifier: "example_environment"
                      tags: {}
                created: 1234567890
                updated: 1234567890
    InfrastructureResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InfrastructureResponse'
          examples:
            example-1:
              value:
                infrastructure:
                  account: sample_account
                  identifier: example_
                  org: sample_organization
                  project: sample_project
                  name: Example_infrastructure
                  description: This is a example infrastructure
                  tags:
                    example-tag-1: example-tag-1-value
                    example-tag-2: example-tag-2-value
                  yaml: |
                    environment:
                      name: "Example_infrastructure"
                      identifier: "example_infrastructure"
                      tags: {}
                created: 1234567890
                updated: 1234567890
        application/yaml:
          schema:
            $ref: '#/components/schemas/InfrastructureResponse'
          examples:
            example-1:
              value: |
                infrastructure:
                  account: sample_account
                  identifier: example_infrastructure
                  org: sample_organization
                  project: sample_project
                  name: Example_environment
                  description: This is a example infrastructure
                  tags:
                    example-tag-1: example-tag-1-value
                    example-tag-2: example-tag-2-value
                  yaml: |
                    environment:
                      name: "Example_infrastructure"
                      identifier: "example_infrastructure"
                      tags: {}
                created: 1234567890
                updated: 1234567890
    InfrastructureListResponse:
      description: Example infrastructure list response
      headers:
        X-Total-Elements:
          description: Total number of elements returned in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
        X-Page-Number:
          description: Page number in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
        X-Page-Size:
          description: Maximum page size in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/InfrastructureResponse'
            x-content-type: application/json
          examples:
            example-1:
              value:
              - infrastructure:
                  account: sample_account
                  identifier: example_infrastructure
                  org: sample_organization
                  project: sample_project
                  name: Example_service
                  description: This is a example infrastructure
                  tags:
                    example-tag-1: example-tag-1-value
                    example-tag-2: example-tag-2-value
                  yaml: |
                    infrastructure:
                      name: "Example_infrastructure"
                      identifier: "example_infrastructure"
                      tags: {}
                created: 1234567890
                updated: 1234567890
        application/yaml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/InfrastructureResponse'
          examples:
            example-1:
              value: |
                - infrastructure:
                    account: sample_account
                    identifier: example_infrastructure
                    org: sample_organization
                    project: sample_project
                    name: Example_infrastructure
                    description: This is a example infrastructure
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    yaml: |
                      infrastructure:
                        name: "Example_infrastructure"
                        identifier: "example_infrastructure"
                        tags: {}
                  created: 1234567890
                  updated: 1234567890
    OrganizationResponse:
      description: Organization response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganizationResponse'
          examples:
            example-organization-response-json:
              value:
                org:
                  identifier: example_organization
                  name: Example Organization
                  description: This is an example organization
                  tags:
                    example-tag-1: example-tag-1-value
                    example-tag-2: example-tag-2-value
                created: 1234567890
                updated: 1234567890
                harness_managed: true
        application/yaml:
          schema:
            $ref: '#/components/schemas/OrganizationResponse'
          examples:
            example-organization-response-yaml:
              value: |
                org:
                  identifier: example_organization
                  name: Example Organization
                  description: This is an example organization
                  tags:
                    example-tag-1: example-tag-1-value
                    example-tag-2: example-tag-2-value
                created: 1234567890
                updated: 1234567890
                harness_managed: true
    ProjectResponse:
      description: Project response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProjectResponse'
          examples:
            example-project-response-json:
              value:
                project:
                  org: example_org_identifier
                  identifier: example_project_identifier
                  name: example-project-name
                  color: '#0063F7'
                  modules:
                  - CD
                  description: This is a example project
                  tags:
                    property1: value1
                    property2: value2
                created: 1234567890
                updated: 1234567890
                isFavorite: true
        application/yaml:
          schema:
            $ref: '#/components/schemas/ProjectResponse'
          examples:
            example-project-response-yaml:
              value: |
                project:
                  org: example_org_identifier
                  identifier: example_project_identifier
                  name: example-project-name
                  color: '#0063F7'
                  modules:
                    - CD
                  description: This is a example project
                  tags:
                    property1: value1
                    property2: value2
                created: 1234567890
                updated: 1234567890
                isFavorite: true
    FavoriteResponse:
      description: Favorite response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FavoriteResponse'
          examples:
            example-Favorite-response-json:
              value:
                Favorite:
                  org: sample_organization
                  project: sample_project
                  user_id: example_userId
                  resource_type: Example_resourceType
                  resource_id: Example_resourceId
                created: 1234567890
    FavoriteListResponse:
      description: Favorite list response
      headers:
        X-Total-Elements:
          description: Total number of elements returned in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
        X-Page-Number:
          description: Page number in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
        X-Page-Size:
          description: Maximum page size in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/FavoriteResponse'
            x-content-type: application/json
          examples:
            example-Favorite-list-response-json:
              value:
              - Favorite:
                  account: sample_account
                  org: sample_organization
                  project: sample_project
                  user_id: example_userId
                  resource_type: Example_resourceType
                  resource_id: Example_resourceId
                created: 1234567890
    ProjectListResponse:
      description: Project list response
      headers:
        X-Total-Elements:
          description: Total number of elements returned in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
        X-Page-Number:
          description: Page number in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
        X-Page-Size:
          description: Maximum page size in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ProjectResponse'
            x-content-type: application/json
          examples:
            example-project-list-response-json:
              value:
              - project:
                  org: example_org_identifier
                  identifier: example_project_identifier
                  name: example-project-name
                  color: '#0063F7'
                  modules:
                  - CD
                  description: This is a example project
                  tags:
                    property1: value1
                    property2: value2
                created: 1234567890
                updated: 1234567890
                isFavorite: true
        application/yaml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ProjectResponse'
          examples:
            example-project-list-response-yaml:
              value: |
                - project:
                    org: example_org_identifier
                    identifier: example_project_identifier
                    name: example-project-name
                    color: '#0063F7'
                    modules:
                      - CD
                    description: This is a example project
                    tags:
                      property1: value1
                      property2: value2
                  created: 1234567890
                  updated: 1234567890
                  isFavorite: true
    OrganizationListResponse:
      description: Organization list response
      headers:
        X-Total-Elements:
          description: Total number of elements returned in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
        X-Page-Number:
          description: Page number in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
        X-Page-Size:
          description: Maximum page size in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/OrganizationResponse'
            x-content-type: application/json
          examples:
            example-organizations-list-response-json:
              value:
              - org:
                  identifier: example_organization
                  name: Example Organization
                  description: This is an example organization
                  tags:
                    example-tag-1: example-tag-1-value
                    example-tag-2: example-tag-2-value
                created: 1234567890
                updated: 1234567890
                harness_managed: true
        application/yaml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/OrganizationResponse'
          examples:
            example-organizations-list-response-yaml:
              value: |
                - org:
                    identifier: example_organization
                    name: Example Organization
                    description: This is an example organization
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                  created: 1234567890
                  updated: 1234567890
                  harness_managed: true
    SecretResponse:
      description: Secret response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SecretResponse'
          examples:
            example-secret-response-json:
              value:
                secret:
                  name: example_secret
                  identifier: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: SSHKeyPath
                    port: 80
                    username: example_secret
                    key_path: example_secret
                    encrypted_passphrase: account.example_secret
                created: 1234567890
                updated: 1234567890
                draft: false
        application/yaml:
          schema:
            $ref: '#/components/schemas/SecretResponse'
          examples:
            example-secret-response-yaml:
              value: |
                secret:
                  name: example_secret
                  identifier: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: SSHKeyPath
                    port: 80
                    username: example_secret
                    key_path: example_secret
                    encrypted_passphrase: account.example_secret
                created: 1234567890
                updated: 1234567890
                draft: false
    SecretListResponse:
      description: Secret list response
      headers:
        X-Total-Elements:
          description: Total number of elements returned in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
        X-Page-Number:
          description: Page number in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
        X-Page-Size:
          description: Maximum page size in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SecretResponse'
            x-content-type: application/json
          examples:
            example-list-secret-response-json:
              value:
              - secret:
                  name: example_secret
                  identifier: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: SSHKeyPath
                    port: 80
                    username: example_secret
                    key_path: example_secret
                    encrypted_passphrase: account.example_secret
                created: 1234567890
                updated: 1234567890
                draft: false
        application/yaml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SecretResponse'
          examples:
            example-list-secret-response-yaml:
              value: |
                - secret:
                    name: example_secret
                    identifier: example_secret
                    org: default
                    project: example_project
                    tags:
                      property1: example_secret
                    description: example_secret
                    spec:
                      type: SSHKeyPath
                      port: 80
                      username: example_secret
                      key_path: example_secret
                      encrypted_passphrase: account.example_secret
                  created: 1234567890
                  updated: 1234567890
                  draft: false
    ModuleVersionsListResponse:
      description: Example response
      headers:
        X-Total-Elements:
          description: Total number of elements returned in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
        X-Page-Number:
          description: Page number in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
        X-Page-Size:
          description: Maximum page size in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ModuleVersionsResponse'
            x-content-type: application/json
          examples: {}
    SecretValidationResponse:
      description: 'Response of the secret reference validation '
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SecretValidationResponse'
          examples:
            Example 1:
              value:
                success: true
                message: "Validation is Successful, Secret can be referenced"
    EulaSignResponse:
      description: Response of signing End User License Agreement
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EulaSignResponse'
    IPAllowlistConfigResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IPAllowlistConfigResponse'
    IPAllowlistConfigListResponse:
      description: Example response
      headers:
        X-Total-Elements:
          description: Total number of elements returned in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
        X-Page-Number:
          description: Page number in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
        X-Page-Size:
          description: Maximum page size in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/IPAllowlistConfigResponse'
            x-content-type: application/json
    IPAllowlistConfigValidateResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IPAllowlistConfigValidateResponse'
    IPAllowlistValidateUniqueIdentifierResponse:
      description: Example response
      content:
        application/json:
          schema:
            type: boolean
            x-content-type: application/json
    RancherListClustersResponse:
      description: Response containing list of rancher cluster names
      headers:
        X-Total-Elements:
          description: Total number of elements returned in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
        X-Page-Number:
          description: Page number in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
        X-Page-Size:
          description: Maximum page size in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
      content:
        application/json:
          schema:
            type: array
            items:
              type: string
            x-content-type: application/json
          examples:
            Example 1:
              value:
              - cluster1
              - cluster2
    ReleaseDetailsResponse:
      description: Batch Release Details response
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/BatchReleaseDetailsResponse'
            x-content-type: application/json
          examples:
            Example 1:
              value:
              - - _id: {}
                  account: account
                  org: org
                  project: project
                  release_key: release_key
                  service_details:
                    service_id: k8sservice
                    service_name: k8s service
                    org: orgid
                    project: projectid
                  environment_details:
                    env_id: k8senv
                    env_name: k8s env
                    org: orgid
                    project: projectid
                    connector_ref: string
                    infra_name: infra_name
                    infra_id: infra_id
                    infrastructure_kind: K8sDirect
        application/xml:
          schema:
            $ref: '#/components/schemas/BatchReleaseDetailsResponse'
    ManifestsResponseDTO:
      description: Response containing a list of eligible manifest identifiers that
        can be applied as primary manifest.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ManifestsResponseDTO'
          examples:
            Example 1:
              value:
                identifiers:
                - id1
                - id2
        application/xml:
          schema:
            type: object
            properties: {}
    CreateGitXWebhookResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateGitXWebhookResponse'
    UpdateGitXWebhookResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateGitXWebhookResponse'
    GetGitXWebhookResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GitXWebhookResponse'
    ListGitXWebhookResponse:
      description: Example response
      headers:
        X-Total-Elements:
          description: Total number of elements returned in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
        X-Page-Number:
          description: Page number in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
        X-Page-Size:
          description: Maximum page size in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/GitXWebhookResponse'
            x-content-type: application/json
    GitXWebhookEventResponse:
      description: Example response
      content:
        application/json:
          schema:
            type: array
            items:
              type: string
    ListGitXWebhookEventResponse:
      description: Example response
      headers:
        X-Total-Elements:
          description: Total number of elements returned in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
        X-Page-Number:
          description: Page number in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
        X-Page-Size:
          description: Maximum page size in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/GitXWebhookEventResponse'
            x-content-type: application/json
    UpdateGitXWebhookEventResponse:
      description: Update GitX Webhook Event Response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GitXWebhookEventResponse'
    DeleteGitXWebhookResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteGitXWebhookResponse'
    CertificateResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CertificateResponseDTO'
    CertificateListResponse:
      description: Example response
      headers:
        X-Total-Elements:
          description: Total number of elements returned in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
        X-Page-Number:
          description: Page number in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
        X-Page-Size:
          description: Maximum page size in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/CertificateResponseDTO'
            x-content-type: application/json
    CertificateValidateUniqueIdentifierResponse:
      description: Example response
      content:
        application/json:
          schema:
            type: boolean
            x-content-type: application/json
    LdapSettingsResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LdapSettingsResponse'
    LdapValidateResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LdapValidateResponseDTO'
    LdapGroupResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LdapGroupResponseDTO'
    LinkGroupToLdapSettings:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGroupDTO'
    UnlinkGroupToLdapSettings:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGroupDTO'
    LinkGroupResponse:
      description: ""
    LdapSettingsIterationsResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LdapSettingsIterations'
    LdapTestLoginResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LdapTestLoginResponseDTO'
    LdapTestLoginRequest:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LdapTestLoginRequestDTO'
    GetGitXWebhookEventFileValidationResponse:
      description: Get GitX Webhook Event File Validation Response
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/GetGitXWebhookEventFileValidationResponse'
            x-content-type: application/json
  parameters:
    Page:
      name: page
      in: query
      description: "Pagination page number strategy: Specify the page number within\
        \ the paginated collection related to the number of items in each page\t"
      required: false
      style: form
      explode: true
      schema:
        type: integer
        default: 0
    Limit:
      name: limit
      in: query
      description: Number of items to return per page.
      required: false
      style: form
      explode: true
      schema:
        maximum: 1000
        type: integer
        default: 20
    onlyFavorites:
      name: only_favorites
      in: query
      description: Enable this field to fetch only the entities that are marked as
        favorites.
      required: false
      style: form
      explode: true
      schema:
        type: boolean
    SearchTerm:
      name: search_term
      in: query
      description: This would be used to filter resources having attributes matching
        with search term.
      required: false
      style: form
      explode: true
      schema:
        type: string
    ResourceId:
      name: resource_id
      in: query
      description: This would be used to do operations on the favorite entity.
      required: false
      style: form
      explode: true
      schema:
        type: string
    AccountHeader:
      name: Harness-Account
      in: header
      description: "Identifier field of the account the resource is scoped to. This\
        \ is required for Authorization methods other than the x-api-key header. If\
        \ you are using the x-api-key header, this can be skipped."
      required: false
      style: simple
      explode: false
      schema:
        type: string
    ForceDelete:
      name: forceDelete
      in: query
      description: Enable this field to force delete the entity
      required: false
      style: form
      explode: true
      schema:
        type: boolean
        default: false
    OrgsQueryParam:
      name: org
      in: query
      description: Identifier field of the organizations the resource is scoped to
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    ProjectsQueryParam:
      name: project
      in: query
      description: Identifier field of the projects the resource is scoped to
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    OrgPathParam:
      name: org
      in: path
      description: Identifier field of the organization the resource is scoped to
      required: true
      style: simple
      explode: false
      schema:
        type: string
    UserIdPathParam:
      name: user-id
      in: path
      description: This would be used to fetch the Favorites of the user.
      required: true
      style: simple
      explode: false
      schema:
        type: string
    PrivateSecret:
      name: private_secret
      in: query
      description: This would be used to define secret as private.
      required: false
      style: form
      explode: true
      schema:
        type: boolean
        default: false
    ProjectPathParam:
      name: project
      in: path
      description: Identifier field of the project the resource is scoped to
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ServicePathParam:
      name: service
      in: path
      description: Identifier field of the service the resource is scoped to
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ServiceIdentifiers:
      name: service_ids
      in: query
      description: List of Service Identifiers
      required: false
      style: form
      explode: true
      schema:
        uniqueItems: true
        type: array
        items:
          type: string
    EnvironmentIdentifiers:
      name: environment_ids
      in: query
      description: List of Environment Identifiers
      required: false
      style: form
      explode: true
      schema:
        uniqueItems: true
        type: array
        items:
          type: string
    InfraIdentifiers:
      name: infra_ids
      in: query
      description: List of Infrastructure Identifiers
      required: false
      style: form
      explode: true
      schema:
        uniqueItems: true
        type: array
        items:
          type: string
    DeploymentType:
      name: deployment_type
      in: query
      description: Service Definition Type
      required: false
      style: form
      explode: true
      schema:
        type: string
        enum:
        - Kubernetes
        - NativeHelm
        - Ssh
        - WinRm
        - ServerlessAwsLambda
        - AzureWebApp
        - GitOps
        - ECS
        - TAS
        - CustomDeployment
        - Elastigroup
        - Asg
        - GoogleCloudFunctions
        - AwsLambda
        - AWS_SAM
    Sort:
      name: sort
      in: query
      description: Parameter on the basis of which sorting is done.
      required: false
      style: form
      explode: true
      schema:
        type: string
        enum:
        - name
        - identifier
        - created
        - updated
    Order:
      name: order
      in: query
      description: Order on the basis of which sorting is done.
      required: false
      style: form
      explode: true
      schema:
        type: string
        enum:
        - ASC
        - DESC
    ResourceType:
      name: resource_type
      in: query
      description: Determines the type of favorite entity requested.
      required: false
      style: form
      explode: true
      schema:
        type: string
        enum:
        - CONNECTOR
        - DELEGATE
        - PIPELINE
        - SECRET
        - PROJECT
    AgreementType:
      name: agreement_type
      in: query
      description: Type of Agreements.
      required: true
      style: form
      explode: true
      schema:
        type: string
        enum:
        - AIDA
    ConnectorPathParam:
      name: connector
      in: path
      description: Identifier field of the scoped connector entity to be used for
        this operation.
      required: true
      style: simple
      explode: false
      schema:
        type: string
    EnvironmentPathParam:
      name: environment
      in: path
      description: Identifier field of the scoped environment entity to be used for
        the selected operation.
      required: true
      style: simple
      explode: false
      schema:
        type: string
    InfrastructureDefinitionPathParam:
      name: infrastructure-definition
      in: path
      description: Identifier field of the scoped infrastructure definition entity
        to be used in the selected operation.
      required: true
      style: simple
      explode: false
      schema:
        type: string
    GitXWebhookIdentifier:
      name: gitx-webhook
      in: path
      description: GitX webhook identifier
      required: true
      style: simple
      explode: false
      schema:
        type: string
    UserGroupIdentifierPathParam:
      name: group-id
      in: path
      description: UserGroup Identifier
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    ServiceCreateRequest:
      description: Create Service request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceCreateRequest'
          examples:
            example-1:
              value:
                identifier: example_service
                name: Example_service
                description: This is a example service
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                yaml: |
                  service:
                    name: "Example_service"
                    identifier: "example_service"
                    tags: {}
        application/yaml:
          schema:
            $ref: '#/components/schemas/ServiceCreateRequest'
          examples:
            example-1:
              value: |
                identifier: example_service
                name: Example_service
                description: This is a example service
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                yaml: |
                  service:
                    name: "Example_service"
                    identifier: "example_service"
                    tags: {}
      required: true
    ServiceUpdateRequest:
      description: Update Service request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceUpdateRequest'
          examples:
            example-1:
              value:
                identifier: example_service
                name: Example_service
                description: This is a example service
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                yaml: |
                  service:
                    name: "Example_service"
                    identifier: "example_service"
                    tags: {}
        application/yaml:
          schema:
            $ref: '#/components/schemas/ServiceUpdateRequest'
          examples:
            example-1:
              value: |
                identifier: example_service
                name: Example_service
                description: This is a example service
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                yaml: |
                  service:
                    name: "Example_service"
                    identifier: "example_service"
                    tags: {}
      required: true
    UpdateProjectRequest:
      description: Put the necessary fields for the API to update a Project.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateProjectRequest'
          examples:
            example-project-update-request-json:
              value:
                project:
                  identifier: example_project_identifier
                  name: example-project-name
                  color: '#0063F7'
                  modules:
                  - CD
                  description: This is a example project
                  tags:
                    property1: value1
                    property2: value2
        application/yaml:
          schema:
            $ref: '#/components/schemas/UpdateProjectRequest'
          examples:
            example-project-update-request-yaml:
              value: |
                project:
                  identifier: example_project_identifier
                  name: example-project-name
                  color: '#0063F7'
                  modules:
                    - CD
                  description: This is a example project
                  tags:
                    property1: value1
                    property2: value2
      required: true
    CreateOrganizationRequest:
      description: Post the necessary fields for the API to create an organization.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateOrganizationRequest'
          examples:
            example-create-organization-request-json:
              value:
                org:
                  identifier: example_organization
                  name: Example Organization
                  description: This is an Example organization
                  tags:
                    example-tag-1: example-tag-1-value
                    example-tag-2: example-tag-2-value
        application/yaml:
          schema:
            $ref: '#/components/schemas/CreateOrganizationRequest'
          examples:
            example-create-organization-request-yaml:
              value: |
                org:
                  identifier: example_organization
                  name: Example Organization
                  description: This is an Example organization
                  tags:
                    example-tag-1: example-tag-1-value
                    example-tag-2: example-tag-2-value
      required: true
    UpdateOrganizationRequest:
      description: Put the necessary fields for the API to update a organization.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateOrganizationRequest'
          examples:
            example-organization-update-request-json:
              value:
                org:
                  identifier: example_organization
                  name: Example Organization
                  description: This is an example organization
                  tags:
                    example-tag-1: example-tag-1-value
                    example-tag-2: example-tag-2-value
        application/yaml:
          schema:
            $ref: '#/components/schemas/UpdateOrganizationRequest'
          examples:
            example-organization-update-request-json:
              value: |
                org:
                  identifier: example_organization
                  name: Example Organization
                  description: This is an example organization
                  tags:
                    example-tag-1: example-tag-1-value
                    example-tag-2: example-tag-2-value
      required: true
    CreateProjectRequest:
      description: Post the necessary fields for the API to create a project.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateProjectRequest'
          examples:
            example-create-project-request-json:
              value:
                project:
                  identifier: example_project_identifier
                  name: example-project-name
                  color: '#0063F7'
                  modules:
                  - CD
                  description: This is a example project
                  tags:
                    property1: value1
                    property2: value2
        application/yaml:
          schema:
            $ref: '#/components/schemas/CreateProjectRequest'
          examples:
            example-create-project-request-yaml:
              value: |
                project:
                  identifier: example_project_identifier
                  name: example-project-name
                  color: '#0063F7'
                  modules:
                    - CD
                  description: This is a example project
                  tags:
                    property1: value1
                    property2: value2
      required: true
    SecretRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SecretRequest'
          examples:
            example-ssh-kerberos-tgt-key-tab-file-secret-request-json:
              value:
                secret:
                  name: example_secret
                  identifier: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: SSHKerberosTGTKeyTabFile
                    port: 22
                    principal: example-principal
                    realm: example-realm
                    key_path: key/file/path
            example-ssh-kerberos-tgt-password-secret-request-json:
              value:
                secret:
                  name: example_secret
                  identifier: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: SSHKerberosTGTPassword
                    port: 22
                    principal: example-principal
                    realm: example-realm
                    password: account.example-password
            example-secret-file-secret-request-json:
              value:
                secret:
                  name: example_secret
                  identifier: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: SecretFile
                    secret_manager_identifier: example_secret_manager_identifier
            example-secret-text-secret-request-json:
              value:
                secret:
                  name: example_secret
                  identifier: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: SecretText
                    secret_manager_identifier: example_secret_manager_identifier
                    value_type: Inline
                    value: example_secret_text_value
            example-ssh-key-path-file-secret-request-json:
              value:
                secret:
                  name: example_secret
                  identifier: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: SSHKeyPath
                    port: 22
                    username: example_username
                    key_path: ssh/key/path
                    encrypted_passphrase: account.example_passphrase
            example-ssh-key-reference-secret-request-json:
              value:
                secret:
                  name: example_secret
                  identifier: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: SSHKeyReference
                    port: 22
                    username: example_username
                    key: example/secret/key/path
                    encrypted_passphrase: account.example_passphrase
            example-ssh-password-secret-request-json:
              value:
                secret:
                  name: example_secret
                  identifier: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: SSHPassword
                    port: 22
                    username: example_username
                    password: account.example_password
            example-winrm-ntlm-secret-request-json:
              value:
                secret:
                  name: example_secret
                  identifier: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: WinRmNTLM
                    port: 5986
                    domain: example-domain
                    username: example-username
                    password: example-password
                    use_ssl: true
                    skip_cert_checks: true
                    use_no_profile: true
            example-winrm-tgt-key-file-tab-secret-request-json:
              value:
                secret:
                  name: example_secret
                  identifier: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: WinRmTGTKeyTabFile
                    port: 5986
                    principal: example-principal
                    realm: example-realm
                    key_path: key/file/path
                    use_ssl: true
                    skip_cert_checks: true
                    use_no_profile: true
            example-winrm-tgt-password-secret-request-json:
              value:
                secret:
                  name: example_secret
                  identifier: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: WinRmTGTPassword
                    port: 5986
                    principal: example-principal
                    realm: example-realm
                    password: example-password
                    use_ssl: true
                    skip_cert_checks: true
                    use_no_profile: true
        application/yaml:
          schema:
            $ref: '#/components/schemas/SecretRequest'
          examples:
            example-ssh-kerberos-tgt-key-tab-file-secret-request-yaml:
              value: |
                secret:
                  name: example_secret
                  identifier: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: SSHKerberosTGTKeyTabFile
                    port: 22
                    principal: example-principal
                    realm: example-realm
                    key_path: key/file/path
            example-ssh-kerberos-tgt-password-secret-request-yaml:
              value: |
                secret:
                  name: example_secret
                  identifier: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: SSHKerberosTGTPassword
                    port: 22
                    principal: example-principal
                    realm: example-realm
                    password: account.example-password
            example-secret-file-secret-request-yaml:
              value: |
                secret:
                  name: example_secret
                  identifier: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: SecretFile
                    secret_manager_identifier: example_secret_manager_identifier
            example-secret-text-secret-request-yaml:
              value: |
                secret:
                  name: example_secret
                  identifier: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: SecretText
                    secret_manager_identifier: example_secret_manager_identifier
                    value_type: Inline
                    value: example_secret_text_value
            example-ssh-key-path-file-secret-request-yaml:
              value: |
                secret:
                  name: example_secret
                  identifier: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: SSHKeyPath
                    port: 22
                    username: example_username
                    key_path: ssh/key/path
                    encrypted_passphrase: account.example_passphrase
            example-ssh-key-reference-secret-request-yaml:
              value: |
                secret:
                  name: example_secret
                  identifier: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: SSHKeyReference
                    port: 22
                    username: example_username
                    key: example/secret/key/path
                    encrypted_passphrase: account.example_passphrase
            example-ssh-password-secret-request-yaml:
              value: |
                secret:
                  name: example_secret
                  identifier: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: SSHPassword
                    port: 22
                    username: example_username
                    password: account.example_password
            example-winrm-ntlm-secret-request-yaml:
              value: |
                secret:
                  name: example_secret
                  identifier: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: WinRmNTLM
                    port: 5986
                    domain: example-domain
                    username: example-username
                    password: example-password
                    use_ssl: true
                    skip_cert_checks: true
                    use_no_profile: true
            example-winrm-tgt-key-file-tab-secret-request-yaml:
              value: |
                secret:
                  name: example_secret
                  identifier: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: WinRmTGTKeyTabFile
                    port: 5986
                    principal: example-principal
                    realm: example-realm
                    key_path: key/file/path
                    use_ssl: true
                    skip_cert_checks: true
                    use_no_profile: true
            example-winrm-tgt-password-secret-request-yaml:
              value: |
                secret:
                  name: example_secret
                  identifier: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: WinRmTGTPassword
                    port: 5986
                    principal: example-principal
                    realm: example-realm
                    password: example-password
                    use_ssl: true
                    skip_cert_checks: true
                    use_no_profile: true
        multipart/form-data:
          schema:
            required:
            - file
            - spec
            properties:
              spec:
                $ref: '#/components/schemas/SecretRequest'
              file:
                type: string
                format: binary
          encoding:
            spec:
              contentType: application/json
              style: form
      required: true
    SecretValidationRequest:
      description: Details of the secret reference
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SecretRequest'
          examples:
            Example 1:
              value:
                secret_manager_identifier: prod_sm_one
                secret_ref_path: path1/path2#key
    IPAllowlistConfigRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IPAllowlistConfigRequest'
    FavoriteRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FavoriteDTO'
          examples:
            ProjectFavConnector:
              value:
                org: org_id
                project: project_id
                user_id: user_id
                module: CD
                resource_type: CONNECTOR
                resource_id: resource_id
    EulaSignRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EulaSignRequest'
    CreateGitXWebhookRequest:
      description: Create GitX webhook request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateGitXWebhookRequest'
    UpdateGitXWebhookRequest:
      description: Update GitX webhook request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateGitXWebhookRequest'
    BatchReleaseDetailsRequest:
      description: Batch Release Details request body
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ReleaseDetailsRequest'
          examples:
            Example 1:
              value:
              - namespace: default
                release_name: release-pre-deployment-todolist
    UpdateGitXWebhookEventRequest:
      description: Update GitX Webhook Event Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateGitXWebhookEventRequest'
    CreateCertificateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CertificateDTO'
          examples:
            example-certificate-input-text:
              value:
                name: example_name
                identifier: example_identifier
                org: example_org
                project: example_project
                certificateValue: actual_certificate_content
                tags:
                  property1: tag1
                  property2: tag2
                description: example_description
                inputSpec:
                  type: TEXT
        multipart/form-data:
          schema:
            required:
            - file
            - spec
            type: object
            properties:
              spec:
                $ref: '#/components/schemas/CertificateDTO'
              file:
                type: string
                format: binary
                x-stoplight:
                  id: o0m5hvts15hyp
          examples: {}
    UpdateCertificateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CertificateDTO'
        multipart/form-data:
          schema:
            required:
            - spec
            type: object
            properties:
              spec:
                $ref: '#/components/schemas/CertificateDTO'
              file:
                type: string
                format: binary
                x-stoplight:
                  id: 11s7g7fmuu0xw
    LdapSettingsRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LdapSettingsRequest'
    LinkSSOGroupRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LinkSSOGroupRequestDTO'
    UnlinkSSOGroupRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnlinkSSOGroupRequestDTO'
    EnvironmentCreateRequest:
      description: Update Environment request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EnvironmentCreateRequest'
          examples:
            example-1:
              value:
                identifier: example_environment_v0
                name: Example_Env_V0
                description: This is a example environment v0
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                yaml: |
                  environment:
                    name: "Example_Env_V0"
                    identifier: "example_environment_v0"
                    tags: {}
            example-2:
              value:
                identifier: example_environment_v1
                name: Example_Env_V1
                description: This is a example environment v1
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                yaml: |
                  environment:
                    version: 1
                    kind: Environment
        application/yaml:
          schema:
            $ref: '#/components/schemas/EnvironmentCreateRequest'
          examples:
            example-1:
              value: |
                identifier: example_environment_v0
                name: Example_Env_V0
                description: This is a example environment
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                yaml: |
                  service:
                    name: "Example_Env_V0"
                    identifier: "example_environment_v0"
                    tags: {}
      required: true
    EnvironmentUpdateRequest:
      description: Update Environment request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EnvironmentUpdateRequest'
          examples:
            example-1:
              value:
                identifier: example_environment_v0
                name: Example_Env_V0
                description: This is a example environment v0
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                yaml: |
                  environment:
                    name: "Example_Env_V0"
                    identifier: "example_environment_v0"
                    tags: {}
            example-2:
              value:
                identifier: example_environment_v1
                name: Example_Env_V1
                description: This is a example environment v1
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                yaml: |
                  environment:
                    version: 1
                    kind: Environment
        application/yaml:
          schema:
            $ref: '#/components/schemas/EnvironmentUpdateRequest'
          examples:
            example-1:
              value: |
                identifier: example_environment_v0
                name: Example_Env_V0
                description: This is a example environment
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                yaml: |
                  service:
                    name: "Example_Env_V0"
                    identifier: "example_environment_v0"
                    tags: {}
      required: true
    InfrastructureCreateRequest:
      description: Create Infrastructure request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InfrastructureCreateRequest'
          examples:
            example-1:
              value:
                identifier: example_infrastructure_v0
                name: Example_Infra_V0
                description: This is a example infrastructure v0
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                yaml: |
                  environment:
                    name: "Example_Infra_V0"
                    identifier: "example_infrastructure_v0"
                    tags: {}
            example-2:
              value:
                identifier: example_infrastructure_v1
                name: Example_Env_V1
                description: This is a example infrastructure v1
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                yaml: |
                  infrastructure:
                    version: 1
                    kind: Infrastructure
        application/yaml:
          schema:
            $ref: '#/components/schemas/InfrastructureCreateRequest'
          examples:
            example-1:
              value: |
                identifier: example_infrastructure_v0
                name: Example_Infra_V0
                description: This is a example infrastructure
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                yaml: |
                  service:
                    name: "Example_Infra_V0"
                    identifier: "example_infrastructure_v0"
                    tags: {}
      required: true
    InfrastructureUpdateRequest:
      description: Update Infrastructure request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InfrastructureUpdateRequest'
          examples:
            example-1:
              value:
                identifier: example_infrastructure_v0
                name: Example_Infra_V0
                description: This is a example infrastructure v0
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                yaml: |
                  environment:
                    name: "Example_Infra_V0"
                    identifier: "example_infrastructure_v0"
                    tags: {}
            example-2:
              value:
                identifier: example_infrastructure_v1
                name: Example_Env_V1
                description: This is a example infrastructure v1
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                yaml: |
                  infrastructure:
                    version: 1
                    kind: Infrastructure
        application/yaml:
          schema:
            $ref: '#/components/schemas/InfrastructureUpdateRequest'
          examples:
            example-1:
              value: |
                identifier: example_infrastructure_v0
                name: Example_Infra_V0
                description: This is a example infrastructure
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                yaml: |
                  service:
                    name: "Example_Infra_V0"
                    identifier: "example_infrastructure_v0"
                    tags: {}
      required: true
    CronExpressionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CronExpressionRequestDTO'
    LdapTestLoginRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LdapTestLoginRequestDTO'
  securitySchemes:
    x-api-key:
      type: apiKey
      name: x-api-key
      in: header
    bearerAuth:
      type: http
      scheme: bearer
